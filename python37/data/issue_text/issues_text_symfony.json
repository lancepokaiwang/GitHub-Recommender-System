<<<<<<< HEAD
{
    "18230678": {
        "title": "Add @since tags to core",
        "body": "I think that we should add `@since` tags to all classes and methods in core:rnrn```phprn/**rn * @since 2.1.0rn */rnclass Foorn{rn    /**rn     * @since 2.2.1rn     */rn    public function bar() { ... }rn}rn```rnrnThis greatly facilitates maintenance, because if I discover a bug in class `Foo` or method `Foo::bar()`, I immediately know which branch to fix it on. Currently, you have to do a lot of Git blaming or trial and error to find out which branch to fix something on.",
        "comments": [
            ":+1:nnI wanted to create a PR some time ago to a repo. The repo required Symfony 2.1 in it's composer.json. I had to search through Symfony's branches to find out the method I wanted to use was only added in Symfony 2.2, so a @since tag would've saved me some time.n",
            ":+1:nThat's a great idea but it should be hard to cover all core with this tag, no? It requires a complete knowledge of all methods and classes.n",
            "@eko That knowledge is stored in Git. The commandnn``` bashngit tag --contains `git blame -L <line>,<line> <file> | cut -c1-8`n```nngives you a rough idea in which tags a line of a file is contained. I'm not sure though whether this command works in all cases (e.g. when lines are moved within a file).nnFor example:nn``` bashn$ git tag --contains `git blame -L 22,22 src/Symfony/Component/Form/Button.php | cut -c1-8`nv2.3.0nv2.3.0-BETA1nv2.3.0-BETA2nv2.3.0-RC1nv2.3.1nv2.3.2nv2.3.3n```nnAs a shell script:nn``` bashn#!/bin/bashn# lookup.shngit tag --contains `git blame -L $2,$2 $1 | cut -c1-8 | head -n 1`n```nnUsage:nn``` bashn$ ./lookup.sh src/Symfony/Component/Form/Button.php 22nv2.3.0n```nnEverybody is invited to work on this ticket by picking one component/bridge/bundle at a time and looking up the version of each class and method. :)n",
            "Ok, i'm convinced ;)nThis coupled with the effort of the community should give a good result.n",
            "I'll take DI Componentn",
            "I think There is a simple way to automatize that with https://github.com/nikic/PHP-Parser + script shell from @bschussek n",
            "@lyrixx Not sure if developing the automated version takes longer than doing it by hand, but sure - feel free to do it :)n",
            "He hasn't time for that :)n",
            "Huhu. It's [the week end](http://isitweekendyet.com/)n",
            "If did a little script to tag every method/class.n- Should I tag all methods (protected and private) ? n- I excluded Tests, is that ok ?n",
            "Yes, you can include private and protected methods, and yes, you can exclude tests :)n",
            "Whats the point of annotating private methods with `since`?n",
            "@Tobion For me it's maintenance again. If I discover a bug, I immediately know where to fix it.n",
            "Hm well not really. If there is a bug in a private function added in 2.3, it doesn't mean the bug doesnt exist in 2.2 and must be fixed there. Because the private function was just extracted from a public method. So this bug can exist since much longer ago.n",
            "Isn't the same true for public methods? If we refactor code, buggy code pieces can be moved, but it will be hard to find out where the bug occurred for the first time.nnThe point here is, if a method is annotated with `@since`, I can fix exactly this method in all versions that contain this method. Trying to find and fix the bug in prior versions is manual work anyway, independent of whether we use `@since` tags, `git blame` etc.n",
            "BTW, I added `-C` and `-M` to my git blame.nn> ```n>    -M|<num>|                                                                                                                                      n>        Detect moved or copied lines within a file. When a commit moves or copies a block of lines (e.g. the original file has A and then B,       n>        and the commit changes it to B and then A), the traditional blame algorithm notices only half of the movement and typically blames the     n>        lines that were moved up (i.e. B) to the parent and assigns blame to the lines that were moved down (i.e. A) to the child commit. With     n>        this option, both groups of lines are blamed on the parent by running extra passes of inspection.                                          n> n>       <num> is optional but it is the lower bound on the number of alphanumeric characters that git must detect as moving/copying within a       n>        file for it to associate those lines with the parent commit. The default value is 20.                                                      n> n>   -C|<num>|                                                                                                                                      n>        In addition to -M, detect lines moved or copied from other files that were modified in the same commit. This is useful when you            n>        reorganize your program and move code around across files. When this option is given twice, the command additionally looks for copies      n>        from other files in the commit that creates the file. When this option is given three times, the command additionally looks for copies     n>        from other files in any commit.                                                                                                            n> n>       <num> is optional but it is the lower bound on the number of alphanumeric characters that git must detect as moving/copying between        n>        files for it to associate those lines with the parent commit. And the default value is 40. If there are more than one -C options given,    n>        the <num> argument of the last -C will take effect.  n> ```n",
            "If there is a bug in a private method, it must be fixed in the version which is annotated at public/protected method that calls this private method. Or not? So a since tag on private method is still helpfull, but doesnt say much.n",
            "this is not an easy-pick anymore as it is selectively and only when needed, plus it was automated by @lyrixx nni wonder if you send PRs for say a small component such as config or yaml alone in separate PR. surely the script can do separate things. I personally don't like it because it expands the code lengths on all files thereby making them harder to read.n",
            "Since we're only eager to do it selectively, is there any value in doing this at all? The motivation was to be able to find where a method was introduced. Introducing `@since` selectively defeats the purpose.nnI'd just close this issue.n",
            "I've got the same feelings like @jakzal, also I'm not sure if this is a good idea at all. IMHO, this is the same issue as with @author - we don't use it because we have GIT. Mostly, it's quite simply to find when some method or class was added to repository so adding @since comment seems to be unnecessary.n",
            "BTW, this is not an easy pick...n",
            "Is this going to happend?nnI think the best way to start is taking 2.0 and see if the funcion still exist and add since 2.0...n",
            "Closing as it's not going to happen.n"
        ],
        "commits": []
    },
    "16262415": {
        "title": "CssSelector should be configured properly when used for HTML or XML",
        "body": "... but that's not really possible when using it from BrowserKit as the Crawler is created directly.rnrnFrom #8286:rnrn    In functional test, since the crawler is instanciated by the de browser kit (which rn    know the content-type), Can we imagine the browser kit call for usrn    disableHtmlExtension or enableHtmlExtension",
        "comments": [
            "Do you suggest to create the Crawler through a factory based on content-type?n",
            "If we made browserkit to call `CssSelector::disableHtmlExtension()`, we could potentially introduce unexpected side effects (in cases CssSelector was used in other places).nnThe safest way would be to disable it in the `Crawler::filter()` method and enable it back before returning from this method. However, we'd have to make an extra effort to store the content type while adding content. Problem is that potentially a Crawler could store content of multiple types (at least there's no mechanism to prevent this).n",
            "@fabpot As long as we rely on the static API of the component to do this, it cannot be solved because of the impact on a global state (reason to reject the previous PR).nnthe solution could be to make the DomCrawler component build its own instance of the CssSelector Translator (maybe introducing a factory method in the CssSelector component to keep the list of extension there).nAnother solution is to add a getter for the `CssSelector::$html` flag, to allow the DomCrawler to reset the state properly)n",
            "This will be fixed in Symfony 2.8 thanks to #15934n"
        ],
        "commits": [
            "Updated vendornnWeb can not use symfony/dom-crawler 2.3.x because ofnhttps://github.com/symfony/symfony/issues/8404",
            "feature #15934 Add a non-static API for the CssSelector component (stof)nnThis PR was merged into the 2.8 branch.nnDiscussionn----------nnAdd a non-static API for the CssSelector componentnn| Q             | An| ------------- | ---n| Bug fix?      | non| New feature?  | yesn| BC breaks?    | non| Deprecations? | yesn| Tests pass?   | yesn| Fixed tickets | #15850, #8404n| License       | MITn| Doc PR        | todonnThis implements a non-static API for the CssSelector component.nnI decided to keep the static API too, as it is convenient when you just need a one-shot conversion (if you need lots of conversions, keeping a reference to the Converter and all its internal object graph may be faster than releasing it all the time and rebuilding it).nI deprecated the global state to choose between HTML and XML conversion. The static API would always enable the HTML extension in 3.0. Dealing with XML would be done by using the Converter class.nnA second commit also tags all internal classes of the component as ``@internal``, as there is really no reason for a user to deal with them (btw, we already considered them fully internal in the past, as we broke BC on them in a patch release to fix memory performance of the component in the past).nnTODOs:nn- [x] Validate whether we keep the static facade to the componentn- [ ] send a PR on the documentation to document this new API.n- [x]  handle usage of the deprecated API in the DomCrawler testsuitennThe DomCrawler component does not use the new API yet. I will do it in a separate PR, as distinguishing between HTML and XML modes for a crawler will be easier once I deprecate the possibility to load multiple documents (which I will do tomorrow).nnCommitsn-------nn9e51279 [CssSelector] Tag all internal classes as internal onesnf4563c3 Add a non-static API for the CssSelector component"
        ]
    },
    "15752417": {
        "title": "BrowserKit CookieJar is totally ignorant of RFC 6265 edge cases",
        "body": "The `BrowserKit/CookieJar` code [uses exact domain and path matches](https://github.com/symfony/BrowserKit/blob/master/CookieJar.php#L58) to store and retrieve cookies:rnrn`$this->cookieJar[$domain][$path][$name]`rnrnThis utterly fails the [requirements of RFC 6265 for matching domains](http://tools.ietf.org/html/rfc6265#section-4.1.2.3):rnrn> For example, if the value of the Domain attribute is example.com, the user agent will include the cookie in the Cookie header when making HTTP requests to example.com, www.example.com, and www.corp.example.com.rnrnrnIf you load any google resource you'll receive a cookie with `domain=.google.com`. According to the RFC this cookie should match any domain ending in .google.com as well as google.com itself.rnrnSimilar problems exist with path matching where leading and trailing slashes figure in to whether or not a cookie matches what's stored in the `CookieJar`. From [the relevant RFC section](http://tools.ietf.org/html/rfc6265#section-4.1.2.4):rnrn> The user agent will include the cookie in an HTTP request only if the path portion of the request-uri matches (or is a subdirectory of) the cookie's Path attribute, where the %x2F (/) character is interpreted as a directory separator.rnrnExact path matches aren't sufficient -- subdirectory paths should also be matched.",
        "comments": [],
        "commits": [
            "[BrowserKit] fixes #8311 CookieJar is totally ignorant of RFC 6265 edge cases",
            "bug #9769 [BrowserKit] fixes #8311 CookieJar is totally ignorant of RFC 6265 edge cases (jzawadzki)nnThis PR was squashed before being merged into the 2.3 branch (closes #9769).nnDiscussionn----------nn[BrowserKit] fixes #8311 CookieJar is totally ignorant of RFC 6265 edge casesnn| Q             | An| ------------- | ---n| Bug fix?      | yesn| New feature?  | non| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #8311n| License       | MITn| Doc PR        |nnCommitsn-------nn3132b04 [BrowserKit] fixes #8311 CookieJar is totally ignorant of RFC 6265 edge cases",
            "Merge branch '2.3' into 2.4nn* 2.3: (31 commits)n  Fix parent serialization of user objectn  [DependencyInjection] fixed typon  add memcache, memcached, and mongodb extensions to run skipped testsn  [DependencyInjection] Fixed support for backslashes in service ids.n  fix #9356 [Security] Logger should manipulate the user reloaded from providern  [BrowserKit] fixes #8311 CookieJar is totally ignorant of RFC 6265 edge casesn  [HttpFoundation] fixed constants that do exist in 2.3 (only in 2.4)n  fix 5528 let ArrayNode::normalizeValue respect order of value array providedn  fix #7243 allow 0 as arraynode namen  Fixed issue in BaseDateTimeTransformer when invalid timezone cause Transformation filed exception (closes #9403).n  BinaryFileResponse should also return 416 or 200 on some range-requetsn  Do normalization on tag optionsn  bumped Symfony version to 2.3.9n  updated VERSION for 2.3.8n  update CONTRIBUTORS for 2.3.8n  updated CHANGELOG for 2.3.8n  [Filesystem] Changed the mode for a target file in copy() to be write only.n  [Console] fixed CSn  fixed TableHelper when cell value has new linen  Improved and fixed grammar mistakes. Added pluralized messagesn  ...nnConflicts:ntsrc/Symfony/Component/BrowserKit/Cookie.phpntsrc/Symfony/Component/HttpKernel/Kernel.phpntsrc/Symfony/Component/Routing/Matcher/UrlMatcher.php",
            "Merge branch '2.4'nn* 2.4: (44 commits)n  [FrameworkBundle] Add missing license headersn  Fix parent serialization of user objectn  [DependencyInjection] fixed typon  added condition to avoid skipping tests on JSON_PRETTY supportn  add memcache, memcached, and mongodb extensions to run skipped testsn  [DependencyInjection] Fixed support for backslashes in service ids.n  fix #9356 [Security] Logger should manipulate the user reloaded from providern  [FrameworkBundle] Added extra details in XMLDescriptor to improve container descriptionn  fixed CSn  Crawler default namespace fixn  [BrowserKit] fixes #8311 CookieJar is totally ignorant of RFC 6265 edge casesn  [HttpFoundation] fixed constants that do exist in 2.3 (only in 2.4)n  fix 5528 let ArrayNode::normalizeValue respect order of value array providedn  fix #7243 allow 0 as arraynode namen  Fixed issue in BaseDateTimeTransformer when invalid timezone cause Transformation filed exception (closes #9403).n  BinaryFileResponse should also return 416 or 200 on some range-requetsn  fix deprecated usage and clarify constructor defaults for number formattern  Bumping dependency to ProxyManager to allow testing against the new 0.5.x branch changesn  Do normalization on tag optionsn  bumped Symfony version to 2.3.9n  ...",
            "Merge branch '2.4'nn* 2.4: (44 commits)n  [FrameworkBundle] Add missing license headersn  Fix parent serialization of user objectn  [DependencyInjection] fixed typon  added condition to avoid skipping tests on JSON_PRETTY supportn  add memcache, memcached, and mongodb extensions to run skipped testsn  [DependencyInjection] Fixed support for backslashes in service ids.n  fix #9356 [Security] Logger should manipulate the user reloaded from providern  [FrameworkBundle] Added extra details in XMLDescriptor to improve container descriptionn  fixed CSn  Crawler default namespace fixn  [BrowserKit] fixes #8311 CookieJar is totally ignorant of RFC 6265 edge casesn  [HttpFoundation] fixed constants that do exist in 2.3 (only in 2.4)n  fix 5528 let ArrayNode::normalizeValue respect order of value array providedn  fix #7243 allow 0 as arraynode namen  Fixed issue in BaseDateTimeTransformer when invalid timezone cause Transformation filed exception (closes #9403).n  BinaryFileResponse should also return 416 or 200 on some range-requetsn  fix deprecated usage and clarify constructor defaults for number formattern  Bumping dependency to ProxyManager to allow testing against the new 0.5.x branch changesn  Do normalization on tag optionsn  bumped Symfony version to 2.3.9n  ..."
        ]
    },
    "13800942": {
        "title": "[FR] [Process] tweaks",
        "body": "In SymfonyComponentProcessProcessrn1. Provide a way to clear the $stdout and $stderr (in case when executable program produces too much output and we use incremental output)rn2. Add getter (or change private to protected) for processInformation (it's impossible now to get PID for example)",
        "comments": [
            "Getting the PID is possible in 2.3: https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Process/Process.php#L458n",
            "For the first point, it should be very easy to add a flush method.n"
        ],
        "commits": [
            "[Process] Added support for stdout and stderr flush (Issue #7884)",
            "[Process] Added support for stdout and stderr flush (Issue #7884)",
            "feature#8288 [Process] Added support for stdout and stderr flush (Issue #7884) (imobilis)nnThis PR was squashed before being merged into the master branch (closes #8288).nnDiscussionn----------nn[Process] Added support for stdout and stderr flush (Issue #7884)nn| Q             | An| ------------- | ---n| Bug fix?      | non| New feature?  | yesn| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #7884n| License       | MITn| Doc PR        | https://github.com/symfony/symfony-docs/pull/2728nn**To-do**n- [x] Submit changes to the documentation.n- [x] Fix a test broken on travis.n- [x] Fix mistakes on the documentation.n- [x] Removed flush + get methods.n- [x] Changed tests assert calls.nnThis PR introduces flushing methods for both stdout and stderr on Process class. The new methods are:n- flushOutput(): clears the output buffer.n- flushErrorOutput(): clears the error output buffer.nnTests for new methods are included on the PR.nnCommitsn-------nn90daef7 [Process] Added support for stdout and stderr flush (Issue #7884)"
        ]
    },
    "13169284": {
        "title": "[DomCrawler] need for submitting invalid choice values",
        "body": "It seems to be not possible to submit an invalid value for a choice field in a form using BrowserKit's Client. This is prevented by https://github.com/symfony/symfony/blob/v2.1.9/src/Symfony/Component/DomCrawler/Field/ChoiceFormField.php#L140, which doesn't make sense when writing integration tests, as I'd like to see the expected form validation errors.rnrnWhat's the purpose of those checks and, if they are needed, how can they be disabled for tests?",
        "comments": [
            "That's indeed an interesting point of view and having a way to relax the internal validation would be a good addition to the component. I'm tagging it as an easy pick as it should be trivial to implement.n",
            "But it won't be accepted for the 2.1 branch, right?n",
            "@craue Correct, that's a new feature that should be done for master.n",
            "I adjusted the title respectively.n"
        ],
        "commits": [
            "[DomCrawler] Allowed internal validation of ChoiceFormField to be disabled. (fixes #7672)",
            "feature#8637 [DomCrawler] Allowed internal validation of ChoiceFormField to be disabled (pylebecq)nnThis PR was squashed before being merged into the master branch (closes #8637).nnDiscussionn----------nn[DomCrawler] Allowed internal validation of ChoiceFormField to be disablednn| Q             | An| ------------- | ---n| Bug fix?      | non| New feature?  | yesn| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #7672n| License       | MITn| Doc PR        | Not yetnnHi,nnHere is a quite basic attempt to be able to disable the internal validation of the ChoiceFormField. It's pretty basic.nFeel free to tell me what you think guys. Maybe I should check the `validationDisabled` property at the beginning of the `containsOption()` method ?nI'll make the documentation PR as soon as the implementation will be validated.nnRegards.nnCommitsn-------nn739bf71 [DomCrawler] Allowed internal validation of ChoiceFormField to be disabled"
        ]
    },
    "11098174": {
        "title": "[security] Enable a firewall to a specific host (subdomain)",
        "body": "Symfony 2.2 introduces a possibility to point a route to a specific host, or a subdomain.rnrnNow, it should be possible to define a specific host to a firewall. I believe it should be like this:rnrn```ymlrnfirewalls:rntmanager:rn        pattern: ^/.*rn        host: manager.domain.comrn        ...rn```",
        "comments": [
            "Actually this is already possible.nn```nservices:n    site.my_firewall.request_matcher:n        class: SymfonyComponentHttpFoundationRequestMatchern        arguments: [/, www.host.eu]nnsecurity:n    firewalls:n        my_firewall:n            request_matcher: site.my_firewall.request_matcher n```nnhttps://github.com/symfony/symfony/blob/2.2/src/Symfony/Component/HttpFoundation/RequestMatcher.phpnNote: Remember that the hostname is a regex, not a pattern.n",
            "To create a service just to match a host name seems cumbersome. It doesn't make sense that you can configure this at your routing, but not at the routing part of the security config.n",
            "can you update your issue title by adding `[RFC]` ? thanks.nnIMHO, this is could be a good idea.n",
            "Anyone willing to work on a patch?n",
            "Sure, I'll see if I can figure it outn",
            "How do I attach commits to this issue? I'm using `hub pull-request -i {number}` in our own projects, but I think I'm not allowed to do this in the symfony repo?n",
            "I'm not using hub, but you can just create a PR and reference this issue.n",
            "@fabpot this should be closed?n"
        ],
        "commits": [
            "merged branch pkruithof/firewall-host-option (PR #8905)nnThis PR was merged into the master branch.nnDiscussionn----------nnAdded 'host' option to firewall configurationnn| Q             | An| ------------- | ---n| Bug fix?      | non| New feature?  | yesn| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #7103n| License       | MITn| Doc PR        |nnThis is a follow-up of #8880.nnCommitsn-------nn94d648b Added 'host' option to firewall configuration"
        ]
    },
    "10412830": {
        "title": "[BrowserKit] Form names with . are converted to _ (breaks compatibility with non-PHP forms)",
        "body": "Symfony/Component/BrowserKit/Client->submit uses $form->getPhpValues() which uses parsestr which automagically converts . to _, this breaks compatibility with forms intended for non-PHP services.rnrn**Background**rnI am trying to write a functional test for connecting to an OpenID2 implementation in ASP.NET, however this requires use of a (auto-submitted by javascript) form with names like hidden form names like openid.mode.rnrn",
        "comments": [
            "Note that I've fixed this in a fork: https://github.com/relaxnow/BrowserKit/commit/40765910a61f798abd68dd4654cc66b16bc0477en"
        ],
        "commits": [
            "fix #6908 replacing dots with underscores",
            "bug #10444 [DomCrawler] Fixed incorrect value name conversion in getPhpValues() and getPhpFiles() (romainneutron)nnThis PR was merged into the 2.3 branch.nnDiscussionn----------nn[DomCrawler] Fixed incorrect value name conversion in getPhpValues() and getPhpFiles()nn| Q             | An| ------------- | ---n| Bug fix?      | yesn| New feature?  | non| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #6908n| License       | MITnnThis PR replaces #10193nnCommitsn-------nn89c599e [DomCrawler] Add tests for recursive cases of getPhpValues() and getPhpFiles()ne961f57 [DomCrawler] Fixed incorrect value name conversion in getPhpValues() and getPhpFiles()"
        ]
    },
    "9374910": {
        "title": "[3.0] [HttpFoundation] consider renaming Request::getPathInfo() to getPath()",
        "body": "The method name for `Request::getPathInfo()` is so bad becausern1. it returns the path of a URI and not a path info (there is no such thing in the URI spec)rn2. it suggest to return more info in form of an array like the php function [pathinfo](http://php.net/manual/en/function.pathinfo.php]) does, but it only returns the plain pathrnrnSo the name is really confusing as it does not behave similar to phps pathinfo() and is also semantically wrong.rnrnI suggest to deprecate `getPathInfo()` and introduce `getPath()`.rnWorking with it bothered me ever since. And I think we should fix that now before it's too late.",
        "comments": [
            "@fabpot would you accept such an PR?n",
            "FYI, `PATH_INFO` comes from CGI. But since HttpFoundation is translating CGI back to HTTP, `path` may indeed make more sense.n",
            "Yes, I'm aware of that and this is definitely the reason why it was named this way. And I agree with you that since we deal with HTTP, not CGI, we should not do the same mistake.n",
            "I agree with you but I'm -1 for changing this at this point. Probably something to be done for 3.0n",
            "Well, I changed by mind. The `getPathInfo()` does not return the full URI path but only the path after the script file.nSo it is correct not to name it `getPath`.nBut then there is an inconsistency elsewhere: `getUriForPath` is wrong. The correct name according to the current behavior would be `getUriForPathInfo`...nAnd the names for `getBaseUrl` and `getBasePath` are both unfortunate because the only difference is the inclusion of the script file name and has nothing to do with URL vs path.n",
            "@Tobion - how about adding a new method `getUriForPathInfo` and deprecating `getUriForPath` ? n",
            "the getUriForPath method is used qui frequently. So, again, let's do an overall in 3.0.n",
            "I would love to see the public properties being hidden away in getters. This is already possible for 2.6 and easy to implement. The public properties could then be marked as deprecated and made private in 3.0.n",
            "`getUri` should return the full URI of the resource beeing requested. And I guess `getRequestUri` is/should based on http://www.w3.org/Protocols/rfc2616/rfc2616-sec5.htmlnSo it should return the request URI that was used in the request line. That can be the full uri, or absulte path etc. According to the rfc it could also be `*`. Anyway, I don' think the request class really returns the request uri according to the rfc.n",
            "http://tools.ietf.org/html/rfc3875nn```n script-URI = <scheme> :// <server-name> : <server-port>n                   <script-path> <extra-path> ? <query-string>nn where <scheme> is found from SERVER_PROTOCOL, <server-name>,n   <server-port> and <query-string> are the values of the respectiven   meta-variables.  The SCRIPT_NAME and PATH_INFO values, URL-encodedn   with ;, = and ?  reserved, give <script-path> and <extra-path>.n```nnSo I think the the request class should have nn```nfunction getPath() // returns the full path of a request, e.g. /app.php/foonfunction getScriptPath() // returns the path of a request to the executing script (front controller), e.g. /app.phpnfunction getExtraPath() // returns the path of a request without the script, e.g. /foon```nnThe disadvantage is that people who don't want to ignore the script part (like routing) would need to call something like `$realPath = $request->getExtraPath() ?: $request->getPath()`. So maybe its better to invert the logic:nn```nfunction getFullPath() // returns the full path of a request, e.g. /app.php/foonfunction getScriptPath() // returns the path of a request to the executing script (front controller), e.g. /app.phpnfunction getPath() // returns the path of a request without the script, e.g. /foon```n",
            "PSR-7 looks good to me. So IMO Symfony 3.0 Request/Response should be based on that.n",
            "> So IMO Symfony 3.0 Request/Response should be based on that.nnIs there any specific work going on in that direction? I've recently ported our app (https://github.com/volkszaehler/volkszaehler.org) to HTTPKernelInterface (and ReactPHP...) and would like to understand where to go with this once PSR-7 is alive.n",
            "@andig : that might depend on if we can get a PSR for HttpKernelInterface too. once PSR-7 is voted on, then hopefully we can move towards that.n",
            "> So either a Request should be immutable or mutablennI make some profiling and realize that isSecure, getHost and so on methods usually return same result, because headers and server bags that is involved in results of this methods usually are not changed. And for now there is a lot of unnecessary calculations. Immutable request can help to avoid them.n",
            "> There are several inconsistent method names and I think the class can be better designed.nnI would like to add that the constructors (if not using the factory methods) make it easy to create inconsistent representations. If I e.g. construct with `$request` parameters but forget `$content`, the request object will itself represent something that doesn't exist in HTTP. I was wondering if such logical inconsistencies should be errored or warned (probably not) or corrected by the `Request` implementation?nnIf off-topic please ignore.n"
        ],
        "commits": []
    },
    "9103421": {
        "title": "Form fields and buttons do not follow the ownership overwrite defined by form-attributes",
        "body": "I was redirected here from Goutte, on the issue of form fields with a form attribute not getting correctly processed.nnThe gist of it is: the form attribute (placed on fields and buttons and such) is an overwrite to the form ownership property of the element. This means that regardless of where the field (or button) is it should behave as-if it were inside the form identified by the ID defined by the value of the attribute. nnSome official docs:nhttp://dev.w3.org/html5/spec/single-page.html#attr-fae-formnnWith the exception of IE (10 included), all modern browsers support it fine. In the case of IE it's a simple javascript fixu2014just like every other normal html5 feature. For the case of tests and such it would be very useful for the standard behavior to work (especially when there's no real way to work around it).nnThe following is a basic behat test (assume Goutte driver), so as to avoid very wordy explanations on other points related to it.n~~~n@environmentnFeature: test environment driversn  In order perform tests successfullyn  As a Developern  Test drivers must conform to standardsnn  Background:ntGiven I am on the test sitent  And I am on /tests/form-attribute.phpnn  Scenario: press button_1 of form_1 from inside of form_1ntGiven I press Capture fieldsnt Then I should see form_name is form_1nt  And I should see 2 applesnt  And I should see 0 orangesnt  And I should see button_1 presentnt  And I should see button_2 not presentnt  And I should see button_3 not presentnt  And I should see outer_field presentnn  Scenario: press button_3 of form_1 from inside of form_2ntGiven I press Submit from outside the formnt Then I should see form_name is form_1nt  And I should see 2 applesnt  And I should see 0 orangesnt  And I should see button_1 not presentnt  And I should see button_2 not presentnt  And I should see button_3 presentnt  And I should see outer_field presentnn  Scenario: press button_2 of form_2 from inside of form_1ntGiven I press Submit form_2nt Then I should see form_name is form_2nt  And I should see 0 applesnt  And I should see 3 orangesnt  And I should see button_1 not presentnt  And I should see button_2 presentnt  And I should see button_3 not presentnt  And I should see outer_field not presentn      n~~~nnWhere `/tests/form-attribute.php` is as follows...n~~~n<!DOCTYPE html>n<meta charset=utf-8>n<title>Test Case</title>nn<?php if ($_SERVER['REQUEST_METHOD'] !== 'POST'): ?>nnt<form id=form_1 action=<?= $_SERVER['REQUEST_URI'] ?> method=POST>ntt<input type=checkbox name=apples[] value=1 checked/>ntt<input form=form_1 type=hidden name=form_name value=form_1/>ntt<button form=form_1 type=submit name=button_1>Capture fields</button>ntt<button form=form_2 type=submit name=button_2>Submit form_2</button>nt</form>nnt<input form=form_1 type=checkbox name=apples[] value=2 checked/>nnt<form id=form_2 action=<?= $_SERVER['REQUEST_URI'] ?> method=POST>ntt<input form=form_2 type=checkbox name=oranges[] value=1 checked/>ntt<input form=form_2 type=checkbox name=oranges[] value=2 checked/>ntt<input form=form_2 type=checkbox name=oranges[] value=3 checked/>ntt<input form=form_2 type=hidden name=form_name value=form_2/>ntt<input form=form_1 type=hidden name=outer_field value=success/>ntt<button form=form_1 type=submit name=button_3>Submit from outside the form</button>nt</form>nn<?php else: ?>nn<?ntecho 'form_name is '.(isset($_POST['form_name']) ? $_POST['form_name'] : 'undefined').<br/>n;ntecho (isset($_POST['apples']) ? count($_POST['apples']) : 0). apples<br/>n;ntecho (isset($_POST['oranges']) ? count($_POST['oranges']) : 0). oranges<br/>n;nntforeach (['button_1', 'button_2', 'button_3', 'outer_field'] as $key)nt{nttecho $key.' '.(isset($_POST[$key]) ? 'present' : 'not present').<br/>n;nt}nntecho <hr/>n;nntvar_dump($_POST);n?>nn<?php endif; ?>n~~~n",
        "comments": [
            "I think this was fixed in #7500.n",
            "@keptennn#7500 just completely broke itnnIn `function setNode(DOMNode $node)` in `Symphony/Component/DomCrawler/Form.php` the following piece of code,nn```n$formId = $node->getAttribute('form');n$form = $node->ownerDocument->getElementById($formId);nif (null === $form) {n    throw new LogicException(sprintf('The selected node has an invalid form attribute (%s).', $formId));n}n```nn...checks if there is a form inside the **immediate** parent of the element. This is completely wrong, it needs to check in the entire document. As a consequence now even forms that would normally work, because they wrap around the fields that have the attribute, are broken unless they are the fields immediate parent (which is invalid anyway).nnThat's all I was able to deduce from just debugging the code in question. I'm unfamiliar with the interfaces to offer a fix, but essentially you want to change `$node->ownerDocument` to whatever offers a reference to the whole document.n",
            "@srcspider I don't see your point. `ownerDocument` is a reference to the whole document the given element is in, so it will search the whole document. (source: http://www.php.net/manual/en/class.domnode.php#domnode.props.ownerdocument)nnI also tried nesting the input elements into div tags both inside and outside the parent form but it worked for me.n",
            "For me while debugging the value of the `$textContent` property for the `ownerDocument` is not the entire document but only the immediate parent.n",
            "@srcspider Please provide a sample code which does not work for you.n",
            "ping @srcspider n",
            "@kepten I exclusively use goutte the behat driver so giving you the low level example is a little troublesome (as I don't use goutte directly, nor symphony).nnComposer:nn``` jsonn{n    require: {n        symfony/dom-crawler: *,n        symfony/css-selector: *,n        fabpot/goutte: *n    }n}n```nnBasic scaffolding:nn``` phpn<?php // testernnerror_reporting(-1);nini_set('display_errors', 1);nnrequire 'vendor/autoload.php';nnuse SymfonyComponentDomCrawlerCrawler;nn$html = file_get_contents('usecase.html');n$crawler = new Crawler($html);n$form = $crawler->selectButton('test_1')->form();n```nnException: nn```nUncaught exception 'InvalidArgumentException' with message 'Current URI must be an absolute URL ().'n```nnNot seeing [inconsistency with your docs](http://symfony.com/doc/current/components/dom_crawler.html#forms), reading 2.3 version. Please advise, or point me to a clean test case sample that I can use instead.n",
            "@srcspider you have got the exception because Crawler object needs a base URI.nTry `$crawler = new Crawler($html, 'http://example.com');`nThis should fix the exception but there was a flaw in the form attribute handling indeed which I fixed now in #8197.n",
            "@keptennn> This should fix the exception but there was a flaw in the form attribute handling indeed which I fixed now in #8197.nnOkey, Thanks. Feel free to close the issue. I'll reopen if I encounter my issue again; right now it's hard to tell since I believe I just bypassed it in my tests.n"
        ],
        "commits": [
            "merged branch kepten/ticket_6239 (PR #8197)nnThis PR was squashed before being merged into the 2.3 branch (closes #8197).nnDiscussionn----------nn[DomCrawler] fixed HTML5 form attribute handlingnnFixed HTML5 form attribute handling and improved a test case to test more thoroughlynn| Q             | An| ------------- | ---n| Bug fix?      | yesn| New feature?  | non| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #6239n| License       | MITn| Doc PR        | nonnCommitsn-------nn04e730e [DomCrawler] fixed HTML5 form attribute handling"
        ]
    },
    "8214440": {
        "title": "[Form] Improve default form error messages",
        "body": "I think that in order to provide a better user experience, we should improve the error messages shipped with the Form component by default. I am **not** talking about the error messages in the Validator component.rnrnIf I use the Validator component stand-alone, getting an error such as This value is not a valid number is fine. If I use the Form component, displaying that message for a form field is a bit awkward. Even worse are the tons of This value is invalid messages.rnrnI suggest tornrn1. Set sensible defaults for the invalid_message options in all core types. These defaults should be user friendly, such as Please enter a valid email address. (or better, if you have suggestions)rn2. Duplicate the error messages of the Validator component into the Form component and change the translations to be more user friendly (in the web form context, again, such as Please enter a valid number or better). This will mean a bit more maintenance work, but much better UX.rnrnOpinions? How would you ideally like the error messages to be when you submit an erroneous field?",
        "comments": [
            "I get the reasoning behind this but I'm :-1 on duplicating the validator error messages in forms. If someone doesn't like them he should just provide the correct/better ones at the same place he defined the validation.n",
            "I think a  better error message would look liken**{{ field_label }} can not be null**norn**you have to provide aan {{ field_label }}**nbut this approach will require the use of two translation domains validators and messagesn",
            "Also what about `error_bubbling = true` by default in form types?nn``` phpn<?phpnnclass AwardParticipationFormType extends AbstractTypen{n    public function buildForm(FormBuilderInterface $builder, array $options)n    {n        $buildern            ->add('company', 'text', array(n                'constraints' => array(new NotBlank()),n                'error_bubbling' => true, // I should set this option to each(!) field for getting {{ form_errors(form) }} works finen                ))n    }n}n```n",
            "@Koc Please don't do this BC break.nBtw, I find the UX better when the errors are displayed near the invalid field instead of being all at the topn",
            "What about providing option for form type like `error_bubbling_children`?n",
            "Please do me the favor and stick to the topic. Other things can be discussed on the mailing list or in separate tickets.n",
            "@bschussek I'd be for better error messages as long as performance didn't suffer which I imagine it shouldn't. n",
            "+1 for better messages. n",
            "Hey @bschussek nIf this is still of interest, then i'd like to have a crack.nI'm looking to get involved in more code contributions, so any pointers to start with here?n",
            "@bschussek I'd like to have a go at this.nnAre you suggesting that in the form type (`SymfonyComponentFormExtensionCoreTypeBirthdayType` for example), I should just set an `invalid_message` in the `setDefaultOptions` method?nn@stof do you have any suggestions for this?nnThanksn",
            "@mdavis1982 go for it, I believe you can propose a decent PR,n@bschussek @stof will i think be open to thisn",
            "A related issue is the fact we can only provide one invalid_message by form type. AFAIK, the invalid error message is used when a data transformer failed (throw a transformation failed exception). Am I right? If yes, then it would be very helpfull if we can provide a mapping between exception message & final error message displayed to the client or something else. Basically, I have faced this issue in a project where the customer would like to customize each different error messages for each error cases which are managed by the form type data transformer itself. For example he would like to get the minute value is invalid or the hour value is invalid but not the general the value is invalid.n",
            "@egeloen I think that's a separate issue, and one that would best be handled by the individual validators, rather than the core types themselves.n",
            "@mdavis1982 How would you customize/make a difference between each field error message (date/hour/minute) of a datetime type using date/hour/minute fields with the validator component as null is propagated in the model class & the validator component is run on this model? The validator can't know about this error because it has been detected by the data transformer early.nnIMO, it is definitively a related and separate issue :). I will open one later.n",
            "+1 for improved default form error messages. It seems to be a good idea.n",
            "so there was a PR for this and then it was closed, is it still valid?",
            "Indeed, it seems there is not enough interest/feedback on this issue, same for a bunch of similar (old) ones.",
            "Based on #14106, I've made #27142.",
            "As I wrote in https://github.com/symfony/symfony/pull/27142#issuecomment-421545459 the new messages would be a BC break for everyone relying on the old ones for custom translations and for those languages where we cannot provide new translations (could be solved by generic translations though). To mitigate this we would need to introduce an option that would allow to opt into the improved messages. I am not sure if we want to do that."
        ],
        "commits": []
    },
    "7723266": {
        "title": "[Form] Rename empty_value option to placeholder",
        "body": "See #4715 for reference.rnrnThe empty_value option of ChoiceType (and consequentially EntityType) is used to configure the displayed values of the dropdowns when the field is empty. This is analogous to the placeholder HTML5 attribute of other field types.rnrnI propose to deprecate empty_value and add a new option placeholder tornrn* ChoiceTypern* all types represented by input widgets that support this attribute",
        "comments": [
            "Is it rendered as a placeholder attribute in html? Otherwise it could create confusion as well, if you have a placeholder form attribute that doesnt use the html placeholder functionality. Whereas the required option uses the required attribute.n",
            "It is not, because select tags don't have that attribute. It's conceptually the same, so I doubt it will create a lot of confusion.n",
            "If the placeholder option uses the placeholder attribute for inputs that support it, like `<input type=text>` I'm fine.n",
            "That's the plan.n",
            "+1 as empty_data is a quite confusing name for this attribute.n",
            "@daFish it's `empty_value` currently ;)n",
            "@Tobion I'm fine with that. :)n",
            "And what about DateTimeType, DateType and TimeType? Same strategy as in ChoiceType?n",
            "@norzechowicz Yes, exactlyn"
        ],
        "commits": [
            "feature #12003 [Form] Renamed the option empty_value to placeholder (webmozart)nnThis PR was merged into the 2.6-dev branch.nnDiscussionn----------nn[Form] Renamed the option empty_value to placeholdernn| Q             | An| ------------- | ---n| Bug fix?      | non| New feature?  | yesn| BC breaks?    | non| Deprecations? | yesn| Tests pass?   | yesn| Fixed tickets | #5791n| License       | MITn| Doc PR        | TODOnnThis PR is changing the empty_value option to the more understandable name placeholder.nnIn a subsequent PR, the placeholder option should also be added to all types that support the placeholder HTML5 attribute.nnCommitsn-------nn2b440f3 [Form] Renamed the option empty_value to placeholder"
        ]
    },
    "6816718": {
        "title": "make Translation:update Command more robust",
        "body": "Nowadays i'm often getting Error's if I try to update translation-file like this:n  [Twig_Error_Runtime]                                                       n  Attribute value does not exist for Node Twig_Node_Expression_GetAttr. nnIt seem's it come's from dynamic part of a transaltion. The Problem is, that it abort on the first twig error, it would be nice if the command run through and make what he can make. --ignore-expetionsnnOr just get in a prefix-viewfolder as argument:nnnn```n    $extractor->extract($foundBundle->getPath().'/Resources/views/'.$viewfolder, $catalogue);",
        "comments": [
            "Can you provide more information on how to reproduce this?nI cannot seem to break it in the way you mentionedn",
            "@Gladhon Could you please provide some feedback on this? A small sample of the text that you want to translate or a quick gist should be very helpful.nnThanks!n",
            "It seem's to five problems, if I do translation with variables. nn```n{{ value.value|trans({}, Forms) }} n{{ ('my.'~var) |trans({}, Forms) }} n```n",
            "You can't extract anything from the above template as extractor doesn't run the code, so naturally this would be missing from translation anyway. JMSTranslationBundle solves this but you'll have to provide all the cases from php code.n",
            "It's okay, that's extractor don't can extraxt the translations above. But, it's would be nice if it's extract all translations that it can do and not abort with a Exception.n",
            "I tried to get this error by:n-  adding `{{ (test~'test')|trans }}` in a templaten-  launching `./app/console translation:uodate SensioTestingBundle --dump-messages` commandnnI tried different tags of the `2.1` branch but I cant get any error, my message is just ignored.nThat said I already saw the error mentioned when making tests with `trans_default_domain` tag.nn@Gladhon The #7206 could hav solved your problem. Could you update and try again?n",
            "Ping @Gladhon nn```nif (composer update solved your problem) {n    please close the issue;n} else {n    do you have some precisions about it?n}n```nnThanks!n",
            "ping @Gladhon , i am also confirming this has been fixed in master, if your problem persists please reopen ticketn"
        ],
        "commits": []
    },
    "6379747": {
        "title": "[Feature Request] Absolute asset URL",
        "body": "Hey guys!nnCurrently, there's no standard way of retrieving the absolute URL to an asset. This would be useful when generating asset paths in a template for an email. Would be cool a function like:nn```twign{{ asset_url('images/foo.jpg') }}n```nnThe current solution is not pratical and breaks when using CDN.nnThanks,nMarcos",
        "comments": [
            "What about using `assets-base-urls`? http://symfony.com/doc/current/reference/configuration/framework.html#assets-base-urlsn",
            "@willdurand the issue is that it will make all asset url absolute, even when not really needed. and it will make it more difficult for the dev setup, as each dev will have to change the config according to the base url he has locally. So this solution is not a perfect one either.nBtw, I think this feature request is a duplicate (but I'm lazy searching the older one right now)n",
            "@stof Exactly, this is fundamental for many things.n",
            "For now, you can do : {{ app.request.getSchemeAndHttpHost ~ asset('images/foo.jpg') }}nnOne of the other duplicate issues : https://github.com/symfony/symfony/issues/3056n",
            "I have the same issue.nThe problem is that you don't have to the request when sending email through a console command.nnI would have liked to avoid having a specific parameter in my config.yml just for this purpose (as it now works for url as in 2.1).nAny other workaround ?n",
            "@stof You can set `assets-base-url` in your `config_prod.yml` only. Also it is not really required is not really an argument ;) Many use a separate domains for their assets anyway. I think it is a solution.n",
            "I'll take a stab at itn",
            "Or even:nn```n{{ app.request.getUriForPath('') ~ asset('images/foo.jpg') }}n```n",
            "Implemented in https://github.com/symfony/symfony/pull/10451n",
            "Hum ... Sorry for re-opening this old thread but this seems to get removed in https://github.com/symfony/symfony/blob/master/src/Symfony/Bridge/Twig/Extension/AssetExtension.php#L54rnHow can I achieve this gracefully ?"
        ],
        "commits": []
    },
    "5827000": {
        "title": "ParameterBag's remove function only allows to remove one level deep",
        "body": "If a parameter is an array it cannot remove elements inside the array, only the array itself. nFor instance I have the following request using the SonataMediaBundle:nn[common_mybundle_mytype] => array(n    [media] => array(n        [binaryContent] => nulln    ),n    [title] => 'Message title',n    [text] => 'Message textn)nnSay I want to remove the media only. With the current function I can only remove the full request. I have rewritten the function to the following:nn    File: SymfonyComponentHttpFoundationParameterBagnn    public function remove($key)n    {n        if(is_array($key))n        {n            $c = '$this->parameters';nn            foreach($key as $k)n            {n                $c .= '['' . $k . '']';n            }n            eval(unset($c););n        }n        elsen        {n            unset($this->parameters[$key]);n        }n    }",
        "comments": [
            "eval ? WTF ?n",
            "eval is only insecure when used with user input, this is data coming directly from the controller and therefore eval can be used.nnWhat would your solution be then?n",
            "you can still get the parameter, remove the key you want, and then set it.n",
            "You mean in the controller? Sounds to me like a workaround, not a fix for the malfunctioning of the remove function.n",
            "and btw, the ParameterBag does not allow using an array in the getters either so I don't see why it should allow it in removen",
            "Nah indeed, the get function is really neat, using a string as an array. You should be careful with eval, but in this case the programmer is responsible for using the functions and therefore eval would be a better solution in my opinion.nn```npublic function get($key)n{n    if(is_array($key))n    {n        $c = '$this->parameters';nn        foreach($key as $k)n        {n            $c .= '['' . $k . '']';n        }n        eval(return ($c););n    }nn    return ($this->parameters[$key]);n}n```nnAlso, the get allows an indirect array which the remove does not. If you don't agree with me on the eval stuff, at least add that 'use a string as array crap' functionality to the remove too.n",
            "+1 for the ability to remove deeper elements, but strictly without eval. :)nWe could implementing the same `foo[bar]` syntax as in the get method or maybe change to the `foo.bar` syntax which is nicer and easier to implement IMO?n",
            "We had this possibility in symfony1 and the implementation did not use eval.n",
            "I take this one. The exemple is only for array, but we can do the same with object, right ?n",
            "@hmonglee no, just arrays.n",
            "```n$array = $bag->get('name');nunset($array['name']['deeper']);nn$bag->set('name', $array);n```nnThis will properly work as well.n",
            "@sstok That's why we did not implemented it in the first place.n",
            "Maybe optional parameter `$level` will be solution? nn``` phpn/*n    Before n    [common_mybundle_mytype] => array(n        [media] => array(n            [binaryContent] => nulln        ),n        [title] => 'Message title',n        [text] => 'Message textn    )n*/nn// remove($name, $level = 0);n$bag->remove('media', 1);nn/*n    Aftern    [common_mybundle_mytype] => array(n        [media] => array(n            [binaryContent] => nulln        ),n        [title] => 'Message title',n        [text] => 'Message textn    )n*/n```n",
            "@norzechowicz No. Because you could have several keys `media` at the level 1 (one for each top level key)n",
            "@stof right! n",
            "So maybe like in PropertyAccessor:nn``` phpn$bag->remove(common_mybundle_mytype['media']); //remove median$bag->remove(common_mybundle_mytype['text']); // remove textn$bag->remove(common_mybundle_mytype['title']); // remove titlen$bag->remove(common_mybundle_mytype['media']['binaryContent']); // remove binaryContentn```nnor without complex string parsing:nn``` phpn$bag->remove(array('common_mybundle_mytype' => 'media')); // remove media n$bag->remove(array('common_mybundle_mytype' => array('title', 'text'))); // remove title and textn$bag->remove(array('common_mybundle_mytype' => array('media' => 'binaryContent'))); // remove binaryContentnn```n",
            "What about adding new method returning references? Which would make this pretty straightforward and keep the class simple :nn``` phpn// PHP >=5.4nunset($bag->grab('key')['sub_key']);nn// PHP 5.3n$key = &$bag->grab('key');nunset($key['sub_key']);n```n",
            "@norzechowicz I'm for the second solution without parsing to keep it simplen",
            "@bamarni :-1:n",
            "@fabpot I provided a PR offering a deep-access api for the set/has/remove-methods that is exactly like that for the get method. And it is implemented without eval ;)nIf that api is only wanted for remove (and not for has and set), I could of course shrink the PR.nI can also provide a Doc PR, as soon as that is clear.n",
            "For the reasons explained in #7964, closing this issue as won't fix.n"
        ],
        "commits": [
            "[HttpFoundation] enable ParameterBag's set/has/remove to also handle deep parametersnnAllows the methods to handle deep parameters.nThey now offer an additional boolean parameter to allow parsing of an array-syntax in the key.nThe same behavior was already available for the get method.nFixes #5040"
        ]
    },
    "5567424": {
        "title": "HttpCache files getting too big",
        "body": "When using the HttpCache, there are files created in the app/cache/prod/http_cache/md for each url. Each time this url is accessed with a differente cookie, an entry is added (because we do vary on cookie). After some days or weeks this file is getting too big. The expired entries are not removed. I don't know if its best to create a command to remove old items, or to do it after lookup, or after write. Maybe just need to clear the cache every night :)nnhttps://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpKernel/HttpCache/HttpCache.phpnhttps://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpKernel/HttpCache/Store.php",
        "comments": [
            "I know this is not a real solution, but the easy fix is to use varnish instead of the HttpCache, it'll be faster and does its own housekeeping. You should consider it if it's an option for you.n",
            "That said, a command to clean up old entries would be nice, so it can be ran out of band from the web workers.n",
            "You shouldn't store your dynamic cache on filesystem (except for dev).nnYou need an implementation of the [StoreInterface](https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpKernel/HttpCache/StoreInterface.php) for a real cache engine (APC, Memcache ...)n",
            "The entire module is a ROR re-write... but @GromNaN, if you blindly accept the vary header, wouldn't the virtual storage (once your RAM is exhausted) fill up just as fast as the filesystem? n",
            "Creating a CLI tool to cleanup old entries might be a good idea but it won't do anything interesting for when you are using the validation model. So, we would need to come up with a strategy where we remove the oldest entries, not just the expired ones.nnFurthermore, this cannot be done in a regular Symfony command as the console application knows nothing about `HttpCache` (as it wraps the regular Kernel).nnSo, the best idea would be to create a new interface (`StoreHousekeepingInterface` or something similar) and let each `Store` class implement it.nnAnyone willing to investigate this further?n",
            "Take a look in the direction of a caching proxy on nginx and ssi. nginx makes automated cache validation. nginx caching faster than varnish, and places cache on disk. Tests: http://serverfault.com/questions/95679/nginx-varnish-esi-will-that-workn",
            "Generally about caching in highloadu00a0projects, I realized one thing - it is impossible to validate and generate a cache in the user's request. All these slow things are to be in the background. Better through queue ... Until this architecture - all will be very slow, at least sometimes.n",
            "Same problem here.nI would like to add i had suspected the content-digest path generation as source of the fillup.nSince we have a lot of changing content on the same url, this blew the cache.n(so huge that the cache:clear couldnt terminate successfully)nnMy workaround here is rm -rf the cache regulary in low traffic times.nnVarnish would be the next step, then.n",
            "I'd create a PR on it, naming will be the difficult part ...n",
            "In case anyone else is still searching: https://github.com/Toflar/psr6-symfony-http-cache-store",
            "closing as explained in #6855"
        ],
        "commits": []
    },
    "1887255": {
        "title": "[Form][Guesser] ValidatorTypeGuesser does not consider validation_groups option",
        "body": "The `ValidatorTypeGuesser` does not consider the current form's `validation_groups` option when guessing type. This could be fixed by passing the options array to the guesser methods. The signature of the `FormTypeGuesserInterface` methods would look like this:rnrn    function guessType($class, $property, array $options = array());rnrnThe default argument is provided for BC.",
        "comments": [
            "@bschussek pingn",
            "Sounds good to me. I think the options array should be passed to all guess* methods.n",
            "I'm trying to work on this one.nnI did the changes for the Interface and the TypeGuess class, but the ValueGuess doesn't have $options, do I have to add it in the same way as TypeGuess ? nnIsn't it a problem for backward compatibility since to meet the same signature as TypeGuess, the __construct() of ValueGuess should have $options in second argument, so the actual $confidence argument will be placed thirdn",
            "I tried, but didn't fully understand the issue.nIf someone else want to work on it, be my guest :)n",
            "I like to mention that fixing of this issue will introduce another one:nnMy feature of validation groups as callbacks was some time ago merged into core, the purpose is to calculate validation groups just after client data was bound to form, type guessers will be unable to guess anything if user has defined validation groups as callback/closure. So how should they behave, act as It has no groups defined?n",
            "As pointed by @canni, to be able to resolve the validation_groups (if callable), we need to have access to the form instance.nn@bschussek  What about this kind of signature ?nn``` phpnnfunction guess*($class, $property, FormInterface $form = null);nn```nnWhich would permit to donn``` phpnnpublic function guessRequired($class, $property, FormInterface $form = null)n{n    $guesser = $this;nn    return $this->guess($class, $property, function (Constraint $constraint) use ($guesser, $form) {n        return $guesser->guessRequiredForConstraint($constraint, $form);n    }, false);nnn}nnn    public function guessRequiredForConstraint(Constraint $constraint, FormInterface $form)n    {n        $groups = $form->getConfig()->getOption('validation_groups');n        if (is_callable($groups)) {n            $groups = $groups($form);n        }n        switch (get_class($constraint)) {n            case 'SymfonyComponentValidatorConstraintsNotNull':n            case 'SymfonyComponentValidatorConstraintsNotBlank':n            case 'SymfonyComponentValidatorConstraintsTrue':n                if (0 > count(array_intersect($constraint->groups, $groups)) {n                    return new ValueGuess(true, Guess::HIGH_CONFIDENCE);n                }n        }nn        return null;n    }nn```n",
            "EDIT: @bschussek we should pass a FormConfigBuilderInterface instead or something like that, cause we don't have a form instance yet.n",
            "I finally think it's not possible currently. It's impossible to access the form instance at this state,  because we guess types/required during FormBuilder creation.n",
            "We only have access to the FormConfig. We could pass this to the closure instead of the form. but it would be a BC break.n",
            "POC: https://github.com/docteurklein/symfony/compare/fix-2387n",
            "@bschussek another possibility would be to inject the form or data into the TypeGuesser during preSetData event, like here: https://github.com/KnpLabs/KnpRadBundle/blob/develop/Form/DefaultFormCreator.php#L50n",
            "@webmozart can you please comment on the proposed solutions in this issue?n",
            "Any news about this bug?n",
            "I'm closing this issue as duplicate of #7868. If this is fixed, it can only be fixed when the groups are passed explicitly, not via a callback.n",
            "@webmozart I don't understand why you closed, it's sound like won't fixed :disappointed: The field ignores the validation group defines to the form to determine if the field is required or not. It's not related to type of the field is null or not.n",
            "@b-durand No. The ticket should be fixed as part of #7868, since that ticket proposes to generally overhaul the guessers and so makes such an improvement possible. :)n",
            "Sorry for necroposting but this is still an issue in Symfony 3.4, correct?rnrnThanks!",
            "@lukepass see #7868"
        ],
        "commits": [
            "Issue #2387 [Form][Guesser] ValidatorTypeGuesser does not consider validation_groups optionnnAdding $options arguments for the ValidatorTypeGuesser class and the FormTypeGuesserInterface"
        ]
    },
    "1184805": {
        "title": "[Validator] Improve EmailValidator",
        "body": "We really should migrate away from filter_var to a stronger solution like http://code.google.com/p/isemail/source/browse/PHP/trunk/is_email.php which seems like the only solution mentioning RFCs, being maintained, and not being dependent on a specific PHP version.rnrnI emailed the author to see if he would be willing to migrate it to a more class-based approach and remove all those constants from the global namespace.",
        "comments": [
            "Why not just reusing the Swiftmailer code, which is also based on the RFC:nnhttps://github.com/swiftmailer/swiftmailer/blob/master/lib/classes/Swift/Mime/Grammar.phpnhttps://github.com/swiftmailer/swiftmailer/blob/master/lib/classes/Swift/Validate.phpn",
            "Well there are a boatload of RFCs, I don't know what's the status on Swift, but it should be easy to use a test suite on both to check. As for the why not?, well nobody ever mentioned it, that's mainly why, other than that I have nothing against it.n",
            "Hi, I'm the author of the is_email() function mentioned by Seldaek.nnThe first thing I'd say is to point out the email validation unit tests that are part of my is_email() project. Whatever solution you adopt for Symfony, it should give a correct result for all these tests according to the use cases you foresee for it.nnI'd be happy for is_email() to migrate to a class-based structure so long as it didn't lose accessibility for n00b developers. I've deliberately kept it as a single function to lower the barriers to adoption.nnI can see that a class plus a function that instantiates it would be the best of both worlds (for my project) and would allow Symfony to adopt the code easily. I'm not sure when I'd have time to do this myself at the moment, but I'd be willing to help anybody who wants to have a go.nnPlease don't implement anything that rejects valid email addresses - that's the biggest failing of every other validator I've tested.n",
            "@dominicsayers Hey, if you have some problems with time, I can give a try to refactor this function into an OOP version, even if Symfony2 dont adopt that function ;-)n",
            "Thanks @stloyd.nnThe latest code is here: https://github.com/dominicsayers/isemailnnFork away! I'll merge your changes back into the master branch so add any credits you want me to include.n",
            "any news about it ?n",
            "Anyone feels like cleaning things up if they need to be (ping @stloyd) in dominicsayers/isemail, and turning it into a composer package so that we can just depend on it from symfony and improve the validator?n",
            "Maybe we should propose to implement that functionality in php core for filter_var?n",
            "Yeah having it in filter_var would make sense too of course, but given that'd end up in PHP 5.5 at best, I would say it's still a good thing to have a decent userland implementation accessible.n",
            "Version for php core, would be awesome... but not sure someone will find time for translating this code to extension...nnAbout OOP version... It was started: https://github.com/stloyd/isemail but I didn't found time and it's kinda simple version, I will try to find some time for this, or if anyone want feel free to finish it, but just notice in this issue that =)n",
            "Hi @stloyd, @dominicsayers nI'm playing around with this (https://github.com/egulias/isemail/tree/refactor-validator) . I've done some commits regarding coding style and moved the first case to a method to try to make it more readable and to allow further refactor. I've also added phpunit and travis in case we would like to plug it. Will this end in composer/Packagist?nnI'd like to know if i'm going in the right direction and if it is what you where thinking.nnBtw, the file is in DOS format, can I change it to Unix? nnOne more thing: the is no namespace. Should I add one?nnThanks!n",
            "@egulias Awesome, looking forward to this! :)n",
            "Status update:nNamespaces and unix transformation has been done. I'm not sure if EmailValidator is the right but at least we now have one.nOnly 3 more cases remain to be moved to methods. I've identified some lines that can be converted into methods (some special checks) and thus remove some lines.nAfter that I'll try to refactor as many if statements as possible, there are plenty of them!n",
            "Ok this has been done: all of the case statements are in self contained methods.nnAfter reading through the code I've realized that there is **no more error checking if errors in the first if/elseif/else block**nIf we pass the first block (lines 247 to 503 from my fork, branch refactor-validator) with errors, there are no more error checking. nWe can save a lot of complexity and lines if we throw exceptions (InvalidArgumentException). We can do this even from inside the switch.nnUsing InvalidArgumentException lead us to use the exception string to store the error code. nHow about defining nn``` phpnclass InvalidEmailException extends InvalidArgumentExceptionn{n    private errorCode;n    public function getErrorCode()n}n```nnI think we can also definenn``` phpnfinal class EmailErrorCoden{n    const DNSWARN = 7;n    const RFC5321 = 15;n    const CFWS = 31;n    //...n}n```nnSo I would like to know if throwing exceptions all around is ok with @dominicsayers constraint. This will also break almost every test and probably Dominic test suit too.nnAdvice and comments from the rest of you would be highly appreciated nnEduardo.n",
            "If you want to know how to elegantly put a EBNF into object oriented code, I suggest you to look at Doctrine's [lexer](https://github.com/doctrine/common/blob/master/lib/Doctrine/Common/Annotations/DocLexer.php) and [parser](https://github.com/doctrine/common/blob/master/lib/Doctrine/Common/Annotations/DocParser.php) implementation. Implementing a lexer/parser should help you to eliminate all those giant switch statements.n",
            "Another place to look at is @schmittjoh's [parser-lib](https://github.com/schmittjoh/parser-lib) which provides base classes for lexers and parsersn",
            "Thank's! I'll go the lexer/parser way.n",
            "Hi there!!nIt's been a while but I've managed to have a lexer/parser implementation of this [here](https://github.com/egulias/isemail).nI used @schmittjoh parser-lib since it's more stand alone; however I had to make a simple [PR](https://github.com/schmittjoh/parser-lib/pull/2) for a visibility change. If this is finally integrated into Symfony I think it would be easy to change the abstract classes form where I have extended to use Doctrine's.nThat being said, of course tests are faling... yes we have travis ci integration :). nApart from that the implemented tests are only for simple valid and invalid emails. The rest of the tests should be passed and implemented again since some things have changed (errors are now exceptions, and they still need to be passed to constants).nI have made a branch 'before-refactor' which holds the state of @stloyd repo. Master is now where things will be merged and I've deleted the old tests, the examples inside the extra folder and the is_email function file.nnThere is still work to be done (I'll be putting them into issues):n- Complexity of the parser is at 93 and most of methods have still a lots of ifsn- The tests need to be completed and get the coverage report to see what is no being tested, test it and fix thingsn- I need some examples of valid/invalid TLD domains for emails, since it's not being test in the old testsn- Error constants need to be createdn- Warnings constants need to be standardized and reviewedn- I think I've mixed some concepts, but those error will be discovered with testing :)nnAs always I would appreciate your comments about the implementation and code errors. nnAnd... Happy New Year!n",
            "The validator could be injected into the constraint, then fallback to default if not specified. eg:nn``` phpnarray('validator' => new Zend_Validate_EmailAddress())n```nnWhere the validator would be a proper class or closure. Of course the above would not work out of the box, it would have to be wrapped in an adapter class or contained in an anonymous function.n",
            "Update:nSolved the visibility with a change to use a regex, thanks to @schmittjoh . nI'm currently solving failing tests regarding warnings for valid emails, there are 6 to go.nWhich are the plans once the tests pass? Will this be integrated @bschussek @stof @Seldaek (thus needing to make it a symfony validator)?nn@Gator92 this is currently working as a lib (in https://github.com/egulias/isemail). It's not yet in Packagist but you can add it with composer or git submodule. How would this integrate in ZF2?n",
            "Test are green (https://travis-ci.org/egulias/isemail). I still want to clean up a bit (there is a mess with constants), but validation is as it were before :)n",
            "I've been doing some performance tests on @egulias library and right now validation is about 10-12 times slower than filter_var. nnYou can see them at https://github.com/egulias/isemail/blob/master/tests/IsEmail/Performance/AgainstFilterVar.phpnnWould this be acceptable to get accepted in Validator component? I think performance can be improved but a super-boost is quite unlikely to be achieved. On the other hand, e-mail validation would be proper.nnAnother thing that comes to my mind (and to be honest I'm not sure about it) is domains with letters like u00f1. They are accepted, RFC8222 does not cover them, but I don't know if mail servers accept it.nnShould Validator be strict to RFC8222 or to currently valid e-mails?nnWaiting for your comments... Ping @schmittjoh @stof @bschussek @Seldaek n",
            "Most email servers require the RCPT TO command in ascii. so I'd suggest to convert the domain part into punny code before validating.nNow the intl extension does have the utf8 to punny code function but not every shared hosting has that enabled so I guess the function should be provided in php in such case.n",
            "@egulias You'd want to make a new custom constraint then use whatever internal logic, class or  imported library to perform the validation. This is what you'd probably want to do it the default Symfony constraint does not meet your needs.n",
            "I see this has been marked as enhancement too. nShould I continue to improve the code? Should I convert it to a symfony validator in the symfony repo and PR?n@schmittjoh @stof @bschussek @bschussek which are the following steps? or this is not going forward? nnThanks!n",
            "ping @Seldaek n",
            "@egulias IMO 10x slower for validating emails correctly vs creating false negatives is definitely worth it. Emails aren't validated so often in performance critical paths. I would say yes it should be a validator and yes submit a PR and then we can talk more there.n",
            "Thanks for the reply @Seldaek . I'll start this week.n",
            "Hi @egulias, thank you for the tremendous work you've been doing! Sorry for the slow feedback, there's a pile of issues waiting to be worked on :) I agree with @Seldaek on the performance question.nnHave you tried running your refactoring against the original test suite? (by wrapping it into `is_email()`)n",
            "Hi @bschussek , thanks you for taking the time. I initially didn't but did it after your comment. I'll upload the test code to github this week. The numbers I get show that `is_email` is around 0.2 seconds slower for 10k loops against instantiation for every email. For only one instantiation is 0.5 seconds slower. So basically the refactor is a bit faster.nBy the way, I opened an RFC #8395 in Symfony about the [EmailValidator](https://github.com/egulias/EmailValidator) in which my work has derived.nLet me know your thoughts.n"
        ],
        "commits": []
    },
    "19047724": {
        "title": "UPGRADE docs doesn't mention remove of addViolationAtPath",
        "body": "The UPGRADE docs document doesn't mention the remove of the method the remove of the method `addViolationAtPath()`.",
        "comments": [],
        "commits": [
            "added missing method in the UPGRADE file for 2.2 (closes #8941)",
            "Merge branch '2.2' into 2.3nn* 2.2:n  fixes RequestDataCollector bug, visible when used on Drupal8n  [Console] fixed exception rendering when nested stylesn  [Console] added some more information about OutputFormatter::replaceStyle()n  [Console] fixed the formatter for single-char tagsn  [Console] Escape exception message during the rendering of an exceptionn  [BrowserKit] Fixed the handling of parameters when redirectingn  Typo fixn  HttpFoundation RequestTest - Fixed indentation and removed commentsn  HttpFoundation Request test for #8619n  LICENSE files moved to meta foldersn  added missing method in the UPGRADE file for 2.2 (closes #8941)n  [Translation] Removed an unneeded return annotation.n  [DomCrawler] Added missing docblocks and removed unneeded return annotation.nnConflicts:ntsrc/Symfony/Component/BrowserKit/Client.phpntsrc/Symfony/Component/DomCrawler/Crawler.php",
            "Merge branch '2.3'nn* 2.3:n  fixes RequestDataCollector bug, visible when used on Drupal8n  [Console] fixed exception rendering when nested stylesn  [Console] added some more information about OutputFormatter::replaceStyle()n  [Console] fixed the formatter for single-char tagsn  [Console] Escape exception message during the rendering of an exceptionn  [DomCrawler] fixed HTML5 form attribute handlingn  Making tests pass on mac os x without this change tests would fail under mac os x at least in 10.8.2n  [BrowserKit] Fixed the handling of parameters when redirectingn  [Process] Properly close pipes after a Process::stop calln  fixed bytes conversion when used on 32-bits systemsn  Typo fixn  HttpFoundation RequestTest - Fixed indentation and removed commentsn  HttpFoundation Request test for #8619n  LICENSE files moved to meta foldersn  added missing method in the UPGRADE file for 2.2 (closes #8941)n  [Form] Fixed: required attribute is not added to <select> tag if no empty valuen  [Translation] Removed an unneeded return annotation.n  [DomCrawler] Added missing docblocks and removed unneeded return annotation.nnConflicts:ntsrc/Symfony/Component/Process/Tests/AbstractProcessTest.php",
            "Merge branch '2.2' into 2.3nn* 2.2:n  fixes RequestDataCollector bug, visible when used on Drupal8n  [Console] fixed exception rendering when nested stylesn  [Console] added some more information about OutputFormatter::replaceStyle()n  [Console] fixed the formatter for single-char tagsn  [Console] Escape exception message during the rendering of an exceptionn  [BrowserKit] Fixed the handling of parameters when redirectingn  Typo fixn  HttpFoundation RequestTest - Fixed indentation and removed commentsn  HttpFoundation Request test for #8619n  LICENSE files moved to meta foldersn  added missing method in the UPGRADE file for 2.2 (closes #8941)n  [Translation] Removed an unneeded return annotation.n  [DomCrawler] Added missing docblocks and removed unneeded return annotation.nnConflicts:ntsrc/Symfony/Component/BrowserKit/Client.phpntsrc/Symfony/Component/DomCrawler/Crawler.php",
            "Merge branch '2.3'nn* 2.3:n  fixes RequestDataCollector bug, visible when used on Drupal8n  [Console] fixed exception rendering when nested stylesn  [Console] added some more information about OutputFormatter::replaceStyle()n  [Console] fixed the formatter for single-char tagsn  [Console] Escape exception message during the rendering of an exceptionn  [DomCrawler] fixed HTML5 form attribute handlingn  Making tests pass on mac os x without this change tests would fail under mac os x at least in 10.8.2n  [BrowserKit] Fixed the handling of parameters when redirectingn  [Process] Properly close pipes after a Process::stop calln  fixed bytes conversion when used on 32-bits systemsn  Typo fixn  HttpFoundation RequestTest - Fixed indentation and removed commentsn  HttpFoundation Request test for #8619n  LICENSE files moved to meta foldersn  added missing method in the UPGRADE file for 2.2 (closes #8941)n  [Form] Fixed: required attribute is not added to <select> tag if no empty valuen  [Translation] Removed an unneeded return annotation.n  [DomCrawler] Added missing docblocks and removed unneeded return annotation.nnConflicts:ntsrc/Symfony/Component/Process/Tests/AbstractProcessTest.php"
        ]
    },
    "17502295": {
        "title": "Process filling up temp directory on Windows",
        "body": "SymfonyComponentProcessrnI'm getting this error after running a process for a long timernA temporary file could not be opened to write the process output to, verify that your TEMP environment variable is writablernSeems to be the windows workaround in getDescriptors()rnI found the problem to be 65,000 temp files created by this file in my windows temp but not removed. I have to clear these out daily.rnPHP should remove the files but they slowly build up.",
        "comments": [
            "Duplicate of #7078.n"
        ],
        "commits": []
    },
    "14401746": {
        "title": "php.ini post_max_size = 0 clash with form validator",
        "body": "If in the php.ini post_max_size is set to 0, there is no limitation in the post size:rn[from php.ini]rn; Maximum size of POST data that PHP will accept.rn; Its value may be 0 to disable the limit. It is ignored if POST data readingrn; is disabled through enable_post_data_reading.rn; http://php.net/post-max-sizernpost_max_size = 0rnrnHowever, in this case, the validator (tested via Form) trigger alwaysrnThe uploaded file was too large. Please try to upload a smaller file.rnrn[Fix]rnEnable the control only if post_max_size > 0",
        "comments": [],
        "commits": [
            "[Form] [Validator] Fixed post_max_size = 0 bug (Issue #8065)",
            "merged branch odi86/check-post-max-size-zero (PR #8149)nnThis PR was merged into the 2.1 branch.nnDiscussionn----------nn[Form] [Validator] Fixed post_max_size = 0 bug (issue #8065)nn| Q             | An| ------------- | ---n| Bug fix?      | yesn| New feature?  | non| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #8065n| License       | MITn| Doc PR        |nnCommitsn-------nn2038329 [Form] [Validator] Fixed post_max_size = 0 bug (Issue #8065)",
            "Merge branch '2.1' into 2.2nn* 2.1:n  fixed typo in CS translation (closes #8069)n  [Form] [Validator] Fixed post_max_size = 0 bug (Issue #8065)nnConflicts:ntsrc/Symfony/Component/Form/Tests/Extension/Validator/Constraints/FormValidatorTest.phpntsrc/Symfony/Component/Validator/Resources/translations/validators.cs.xlf",
            "Merge branch '2.2' into 2.3nn* 2.2:n  fixed typo in CS translation (closes #8069)n  fix arab translationn  [Finder] Fixed a path in a test.n  [Form] [Validator] Fixed post_max_size = 0 bug (Issue #8065)",
            "Merge branch '2.3'nn* 2.3:n  ErrorHandler and fixesn  fixed typo in CS translation (closes #8069)n  fix arab translationn  Removed reference to SymfonyComponentFormExtensionCoreTypeFormType in form.xmln  slovenian validator translations updatedn  [FrameworkBundle] set the dispatcher in the console applicationn  [Console] fix typehint for Application::setDispatchern  [Finder] Fixed a path in a test.n  [Form] [Validator] Fixed post_max_size = 0 bug (Issue #8065)"
        ]
    },
    "14273793": {
        "title": "[DependencyInjection] Dumping out container may produce syntax error code",
        "body": "Create a service where name contains - and there will be a syntax error.rnrnI think the root of the problem is that PhpDumper uses Container::camelize to generate function names which doesn't comply with PHP labels.rnrnIn my opinion, PhpDumper should use an internal function to generate PHP label-safe identifiers from service names, it would be more general solution than restrict service names.rnrnIf you agree i would like to push this change.rnrn",
        "comments": [
            "There is 2 places where service ids are converted to PHP method names:n- In the PHP dumper, using [Container::camelize](https://github.com/symfony/symfony/blob/v2.3.2/src/Symfony/Component/DependencyInjection/Container.php#L514-L517) to generate the methodn- In the container itself, to resolve the method when [getting a service](https://github.com/symfony/symfony/blob/v2.3.2/src/Symfony/Component/DependencyInjection/Container.php#L277);nnThey must be compatible.n"
        ],
        "commits": [
            "merged branch GromNaN/di-dump-exception (PR #8494)nnThis PR was merged into the 2.2 branch.nnDiscussionn----------nn[DependencyInjection] Add exception for service name not dumpable in PHPnn| Q             | An| ------------- | ---n| Bug fix?      | non| New feature?  | non| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #8485 #8030n| License       | MITn| Doc PR        | n/annThrows an exception when the DIC is dumped to PHP, before generating invalid PHP.nThe regex comes from the PHP doc: http://www.php.net/manual/en/language.oop5.basic.phpnnCommitsn-------nn242b318 [DependencyInjection] Add exception for service name not dumpable in PHP",
            "merged branch GromNaN/2.3-di-dump-exception (PR #8524)nnThis PR was merged into the 2.3 branch.nnDiscussionn----------nn[DependencyInjection][2.3] Add exception for service name not dumpable in PHPnnSame as #8494 for branch 2.3 since the DI component has been refactored (bb797ee75591f8461dbcc6fdc8a50b5d3aa8fe5a, f1c2ab78af69d5cfa1db2c244dbf22e0303036f2)nn| Q             | An| ------------- | ---n| Bug fix?      | non| New feature?  | non| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #8485 #8030n| License       | MITn| Doc PR        | n/annThrows an exception when the DIC is dumped to PHP, before generating invalid PHP.nThe regex comes from the PHP doc: http://www.php.net/manual/en/language.oop5.basic.phpnnCommitsn-------nn9ac3556 [DependencyInjection] Add exception for service name not dumpable in PHP"
        ]
    },
    "14259080": {
        "title": "Use more explicit namespaces in composer definitions",
        "body": "Please note namespace declarations should end in `` to make sure the autoloader responds exactly. For example `Foo` would match in `FooBar` so the trailing backslashes solve the problem: `Foo` and `FooBar` are distinct.rnrnFor reference: https://github.com/composer/composer/pull/1891/files",
        "comments": [
            "Not sure it makes sense for us. We do know all our sub-namespaces, so we know when there can be ambiguities. Any issues with our current definitions?n",
            "It matters a lot, but I submitted this without checking this particular project: it seems the `composer.json` for all components etc in symfony do have a trailing `` already, so someone already recognised the problem and fixed. nnHowever, not all bundles external to symfony/symfony have it. For example, SwiftMailerBundle, AsseticBundle and the Sensio bundles.n",
            "FYI, it was made in PR #5627.n"
        ],
        "commits": []
    },
    "13998113": {
        "title": "[Console] Improve abbreviation recognition",
        "body": "1. For example I have 2 commands:rn```rnxxx:foo:barrnyyy:faa:zoorn```rnWhen I try to callrn```rnphp test.php xxx:f:brn```rnI get an InvalidArgumentException - The namespace xxx:f is ambiguous (foo, faa).rnbut the namespace xxx:faa not defined!rnrn2. If I have rn```rnxxx:foo:barrnxxx:faa:zoorn```rnand call `x:f:z` then it should run xxx:faa:zoo (because no more command has same abbreviation)rnrn",
        "comments": [
            "@Sirian the first case is not reproducible, the second is and that is what this failed test ^^ above is for.n",
            "@Sirian i think this awaits a big refactor on this case. I put up the failing test however i am seeing the logic here a bit horrendous to work on https://github.com/symfony/symfony/blame/master/src/Symfony/Component/Console/Application.php without refactoring the whole find and findNamespaces methods.nnso i think this gets closed as the issue is really on the understanding on which is the namespace and subnamespaces and command name and how to work with them or to refactor the whole thing.  /cc @fabpot n",
            "fixed by #8800n"
        ],
        "commits": []
    },
    "13963217": {
        "title": "[BrowserKit] on followRedirect, client doesn't resend HTTP headers",
        "body": "In this simple case rnrn```rn$headers = array('HTTP_Content_Type' => 'application/vnd.custom+xml');rn$crawler = $client->request($method, $uri, $params, array(), $headers);rn```rnrnwhen server returns redirect, ```Content-Type``` header will not be sent to new location.",
        "comments": [],
        "commits": [
            "merged branch stloyd/bugfix/issue7929 (PR #8697)nnThis PR was merged into the 2.2 branch.nnDiscussionn----------nn[2.2] [BrowserKit] Pass headers when `followRedirect()` is callednn| Q             | An| ------------- | ---n| Bug fix?      | yesn| New feature?  | non| BC breaks?    | non| Tests pass?   | yesn| Fixed tickets | #7929n| License       | MITnnCommitsn-------nn0d07af8 [BrowserKit] Pass headers when `followRedirect()` is called"
        ]
    },
    "13435189": {
        "title": "BrowserKit recursive redirect",
        "body": "If a redirect-header is returned by a request of some url and the redirect-url is just the same as the requested url (thus its a recursive redirect) then the BrowserKit client will follow the recursive tree until the php maximum function nesting level, which by default is 100.rnrnBrowserKit should have a configurable (?) maximum for following redirects and the ->request() call should return nicely (at least with a clean exception?) if it reaches the maximum.",
        "comments": [],
        "commits": [
            "merged branch fabpot/browserkit-redirections (PR #7840)nnThis PR was merged into the master branch.nnDiscussionn----------nnBrowserkit redirectionsnn| Q             | An| ------------- | ---n| Bug fix?      | non| New feature?  | yesn| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #7811, #7731n| License       | MITn| Doc PR        | n/annCommitsn-------nnb60290a [BrowserKit] isolated the max redirect count to a given main request (refs #7811)nc8bc953 Add max redirections limit"
        ]
    },
    "13254373": {
        "title": "[HttpFoundation] allow database Session Handlers to be extended",
        "body": "If there's additional actions to be done on on session events (additional cleanup on destroy/gc, or additional logging on other events, it would be nice to be able to extend the `PdoSessionHandler` and `MongoDbSessionHandler` classes. However, both have their database connections set to `private`.rnrnI can think of two ways of accomplishing this: either setting those connectors to `protected`, so child objects can access them, or to add an additional `getConnection()` method, to provide read-only access to those connectors. More complex would be to add some sort of event system such that the session handlers broadcast to other listeners when a session event happens.rnrnIs there a better way to accomplish doing other tasks when a session event happens?",
        "comments": [
            "Having a `getConnection()` method seems fine to me.n"
        ],
        "commits": [
            "merged branch dosten/ticket_7683 (PR #8303)nnThis PR was squashed before being merged into the master branch (closes #8303).nnDiscussionn----------nn[HttpFoundation] Add accessors methods to session handlersnn| Q             | An| ------------- | ---n| Bug fix?      | non| New feature?  | non| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #7683n| License       | MITn| Doc PR        |nnCommitsn-------nn460c696 [HttpFoundation] Add accessors methods to session handlers"
        ]
    },
    "13116635": {
        "title": "XmlUtils::phpize floats integer-lists",
        "body": "I'm trying to let my config accept:rn```rn<node attribute=1234,5678,9101,1121,3141 />rn```rnto parse the this attribute as a string. But the SymfonyComponentConfigUtilXmlUtils::phpize-Method (previously SimpleXMLElement::phpize) replaces this to float(1.2345678910111E+19).rnrnThis is caused by the preg_match-case.",
        "comments": [],
        "commits": [
            "[Config] #7644 add tests for passing number looking attributes as strings",
            "merged branch cordoval/bugfix/7644 (PR #7655)nnThis PR was squashed before being merged into the 2.2 branch (closes #7655).nnDiscussionn----------nn[Config] #7644 add tests for passing number looking attributes as stringsnn| Q                       | A                 |n| -----------------  |:-------------:|n| Bug fix?            | yes             |n| New feature     | no               |n| BC breaks?     | no               |n| Deprecations?| no               |n| Tests pass?    | yes             |n| Fixed tickets    | #7644        |n| License            | MIT            |nnCommitsn-------nnd98118a [Config] #7644 add tests for passing number looking attributes as strings",
            "Merge branch '2.2'nn* 2.2:n  [Config] #7644 add tests for passing number looking attributes as stringsn  [HttpFoundation][BrowserKit] fixed path when converting a cookie to a stringn  [BrowserKit] removed dead coden  [HttpFoundation] fixed empty domain= in Cookie::__toString()n  fixed detection of secure cookies received over httpsn  [2.2] Pass ESI header to subrequestsn  [Translation] removed an uneeded class propertyn  [Translation] removed unneeded getter/settern  [Translator] added additional conversion for encodings other than utf-8n  fixed source messages to accept pluralized messages [Validator][translation][japanese] add messages for new validatorn  fix a DI circular reference recognition bugn  [HttpFoundation] fixed the creation of sub-requests under some circumstances for IISnnConflicts:ntsrc/Symfony/Component/HttpFoundation/Tests/CookieTest.php"
        ]
    },
    "13111578": {
        "title": "[HttpKernel] Improve TraceableEventDispatcher to not call Stopwatch::stop() when not started",
        "body": "Currently, in TraceableEventDispatcher:385, Stopwatch::stop() is called even when the Stopwatch was not started:rnrn```phprncase KernelEvents::RESPONSE:rn    // stop only if a controller has been executedrn    try {rn        $this->stopwatch->stop('controller');rn    } catch (LogicException $e) {rn    }rn    break;rn```rnrnThe result is that on every request, an exception will be thrown and caught (consequently this is not an exceptional case anymore). Another consequence is that debuggers will halt and show this exception (again, on every request).rnrnAn improvement would be to add a Stopwatch::isStarted() method and use it instead:rnrn```phprncase KernelEvents::RESPONSE:rn    // stop only if a controller has been executedrn    if ($this->stopwatch->isStarted('controller')) {rn        $this->stopwatch->stop('controller');rn    }rn    break;rn```",
        "comments": [
            "trying this one @bschussek n",
            "Wow, that's quick! Way to go :) :+1: n",
            "@bschussek heh, ckeck it out;)n"
        ],
        "commits": [
            "Issue #7639 [HttpKernel] Improve TraceableEventDispatcher to not call Stopwatch::stop() when not started",
            "merged branch Olden/issue_7639 (PR #7653)nnThis PR was squashed before being merged into the master branch (closes #7653).nnDiscussionn----------nn[HttpKernel] Improve TraceableEventDispatcher to not call Stopwatch::stop() when not startednn| Q             | An| ------------- | ---n| Bug fix?      | non| New feature?  | non| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #7639n| License       | MITnnCommitsn-------nne638e01 [HttpKernel] Improve TraceableEventDispatcher to not call Stopwatch::stop() when not started",
            "merged branch Olden/issue_7639 (PR #7691)nnThis PR was squashed before being merged into the master branch (closes #7691).nnDiscussionn----------nn[Stopwatch] Fix checking started eventsnn| Q             | An| ------------- | ---n| Bug fix?      | yesn| New feature?  | non| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #7639, #7653n| License       | MITnnStopwatch component return true from isStarted method, when StopwatchEvent was added but not started.nnCommitsn-------nnb626542 [Stopwatch] Fix checking started events",
            "merged branch Olden/issue_7639 (PR #7694)nnThis PR was merged into the master branch.nnDiscussionn----------nn[Stopwatch] Fix array definition from 5.4nn| Q             | An| ------------- | ---n| Bug fix?      | yesn| New feature?  | non| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #7639, #7653n| License       | MITnnI was break tests for 5.3 with my prev. PR #7691nnCommitsn-------nn35a3c65 [Stopwatch] Fix array definition from 5.4"
        ]
    },
    "12950953": {
        "title": "Login Redirect Does not Honor Query String Parameters",
        "body": "When a user successfully logs in, the user is redirected to the page he originally was trying to view via the onAuthenticationSuccess() function in  https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Security/Http/Authentication/DefaultAuthenticationSuccessHandler.php.rnrnI am using a javascript history state library to keep track of my javascript frontend state and it generates urls such as ```/my/site#foo=bar&more=links```.rnrnWhen I am redirected from the login page, all the query string parameters after the url ```#foo=bar&more=links``` are not preserved. Could this possibly be fixed in future versions or is there a good reason not to honor the states of these types of requests?rn",
        "comments": [
            "This are not query string parameters. The hash will never be sent to a server. Its client-side only. Im not sure if any generic solution will do here. But You could store the hash yourself by sending some ajax request and then extract it server side. n",
            "As @defrag said, this is the hash that the server does not know about. So symfony cannot do anything here.nSome browsers AFAIK also leave the hash in place when a redirect happens.n"
        ],
        "commits": []
    },
    "12900121": {
        "title": "[Routing] Cannot specify port for route with hostname",
        "body": "By default the router uses the port of the current request when linking to an external site and there's no way to override it.rnrnFor example, an application that runs on port 8888, when generating a url from a route such as below, will generate the url //example.com:8888/article/view/{id}.rnrn```ymlrnmy_route:rn    pattern: /article/view/{id}rn    hostname: example.comrn```rnrnAlso, if you try to specify a port number in the hostname, e.g.rnrn```rnmy_routern    pattern: /article/view/{id}rn    hostname: example.com:80rn```rnrnIt will generate a url similar to //example.com:80:8888/article/view/{id}.rnrnMy first thought would be to introduce a 'port' parameter, which can be used to specify the port, and if it's not provided fall back to the port for the current request?rnrnWe only use the hostname parameter to generate url's for an external site which we need to link to, so I'm not sure how this works in regards to matching a route.",
        "comments": [
            "`:80` is not part of the hostname.n",
            "Nope, agreed, but there's currently no way to specify it so I tried that and thought I'd note the behaviour.n",
            "That's not supported at the moment and I'm not sure we want to support that anyway. The hostname feature is there to be able to manage sub-domains which are mostly always using the same port. So, I'm closing it for now.n",
            "I sometimes use port-based hosting in testing, especially with mobile devices. nnAt the moment, I am using a hack in web/app.php and web/app_dev.php (I put it before the bootstrap line, definitely before the kernel boot):nn```nif (!empty($_SERVER['FORCE_HTTP_HOST'])) {n    $_SERVER['HTTP_HOST'] = $_SERVER['FORCE_HTTP_HOST'];n}n```nnThen in the Apache vhost:nn```nSetEnv FORCE_HTTP_HOST foo.my-domainn```nn(yes, it means a separate vhost for each site; if your vhost is complex you could use an include).nnI don't like putting things in app.php though, it could quickly become unmaintainable. Digging around in the code, I found it difficult to see where Symfony parses the host variables (is it even in the Guzzle code?) Maybe Symfony could provide a way to have a hostname map of some kind, or make this logic easier to extend?n",
            "I'm using the router to generate URLs to other websites whose host depends on my environment. Problem is, my project runs in a docker container so it is accessible through a specific port. That port is then appended to every of these websites host, which is wrong.rnrn@fabpot would you reconsider this?",
            "@MatTheCat if you generate URLs for another site, you should probably use a separate router instance, with its own RoutingContext which would *not* be configured based on the current request.",
            "Thanks @stof rnrnAs I must generate URLs for many sites I guess it means I have to create as many `RequestContext` and `Router` as well as a manager to allow selecting the right router easily and a Twig extension? Seems a bit heavy :confused:",
            "It seems to me adding the port to the route would be simpler than what @stof described. @fabpot could I open a PR? ",
            "@MatTheCat you might manage to have a single router for all your external websites if they all run on default ports (using the host requirement to switch the host, as you currently does).rnrnPutting all the route definitions for external sites in your main router will make them part of the URL matcher too. This is not a good solution for performance, especially if you have lots of external routes.",
            "@stof sadly when running on local the port could be anything. That would mean as many routers than external websites. But if I only need to generate URLs wouldn't UrlGenerators be enough? ",
            "One solution might be to exclude routes without a controller from URL matcher.rnSo you will have 2 submodules in router that work independent from each other.rnThis way the matcher will be light and fast, while the generator will be able to make both internal and external routes."
        ],
        "commits": []
    },
    "12873934": {
        "title": "XML and Yaml format doesn't work with Optional/Required collection constraints",
        "body": "Assume we have this entity:rn````phprnclass Authorrn{rn    /**rn     * @AssertCollection(fields={rn     *     alternate_email = @Optional({@AssertEmail})rn     * })rn    public $profileData = array();rn}rn````rnrnThe annotations and PHP format is working as expected. However, the Yaml and Xml format isn't working. On the documentation, we (ryan, @afishnamedsquish and I) have put some time in trying to get a working Yaml and Xml format, but it seems like it's not possible.rnrnIf we have this:rn````yamlrnAcmeAuthorBundleEntityAuthor:rn    properties:rn        profileData:rn             - Collection:rn                fields:rn                    alternate_email:rn                        - CollectionOptional:rn                            - Email: ~rn````rnWe get this error:rnrn > Fatal error: Class 'SymfonyComponentValidatorConstraintsCollectionOptionalValidator'rnrnIt's going wrong in [`Collection` line 50](https://github.com/symfony/Validator/blob/2.1/Constraints/Collection.php#L50-52):rnrn````phprnif (!$field instanceof Optional && !$field instanceof Required) {rn    $this->fields[$fieldName] = $field = new Required($field);rn}rn````rn`$field` is an instance of Optional or Required when using PHP or annotations. When using Yaml, `$field` is an array:rnrn    array (size=1)rn      0 => rn        object(SymfonyComponentValidatorConstraintsCollectionOptional)[4300]rn          public 'constraints' => rn            array (size=1)rn              0 => rn                object(SymfonyComponentValidatorConstraintsEmail)[4301]rn                  ...rn          public 'groups' => rn            array (size=1)rn              0 => string 'Default' (length=7)rnrnBecause it's not an instance of Optional or Required, it becomes:rnrn    object(SymfonyComponentValidatorConstraintsCollectionRequired)[4302]rn      public 'constraints' => rn        array (size=1)rn          0 => rn            object(SymfonyComponentValidatorConstraintsCollectionOptional)[4300]rn              public 'constraints' => rn                array (size=1)rn                  ...rn              public 'groups' => rn                array (size=1)rn                  ...rn      public 'groups' => rn        array (size=1)rn          0 => string 'Default' (length=7)rnrnAnd that's when we are in trouble, because the `ValidatorFactory` will search for `OptionalValidator`.rnrnI have tried every Yaml syntax I know to make `$field` a class and not an array, but I can't find it. I think some change in the `YamlFileLoader` is needed to make these edge cases work.rnrnThis is the same for Xml:rn````xmlrn<?xml version=1.0 encoding=UTF-8 ?>rn<constraint-mapping xmlns=http://symfony.com/schema/dic/constraint-mappingrn    xmlns:xsi=http://www.w3.org/2001/XMLSchema-instancern    xsi:schemaLocation=http://symfony.com/schema/dic/constraint-mapping http://symfony.com/schema/dic/constraint-mapping/constraint-mapping-1.0.xsd>rnrn    <class name=AcmeAuthorBundleEntityAuthor>rn        <property name=profileData>rn            <constraint name=Collection>rn                <option name=fields>rn                    <value key=alternate_email>rn                        <constraint name=CollectionOptional>rn                            <constraint name=Email />rn                        </constraint>rn                    </value>rn                </option>rn            </constraint>rn        </property>rn    </class>rn</constraint-mapping>rn````rnrnIf you want some background on this issue, see symfony/symfony-docs#2432 and [this gist](https://gist.github.com/afishnamedsquish/5277987).",
        "comments": [],
        "commits": [
            "merged branch xabbuh/issue7575 (PR #7930)nnThis PR was submitted for the 2.1 branch but it was merged into the 2.2 branch instead (closes #7930).nnDiscussionn----------nnhandle Optional and Required constraints from XML or YAML sources correc...nn...tlynn| Q             | An| ------------- | ---n| Bug fix?      | yesn| New feature?  | non| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #7575n| License       | MITn| Doc PR        | symfony/symfony-docs#2432nnCommitsn-------nna93a23a handle Optional and Required constraints from XML or YAML sources correctly"
        ]
    },
    "12834613": {
        "title": "Bug with NamespacedAttributeBag in use with session",
        "body": "Hi !rnrnI have set my application to use the NamespacedAttributeBag for sessions.rnrnI've observed the following behavior:rnrnIn my template, if I do this:rnrn    {{dump(app.session.get(cart , 0))}}rnrnIt dumps:rnrn    array (size=1)rn      1 => rn        array (size=1)rn          2 => rn            array (size=1)rn              8 => int 1rnrnThat is the expected behaviorrnrnNow if I do:rnrn    {{dump(app.session.get(cart/1/2 , 0))}}rnrnI get:rnrn    array (size=1)rn      8 => int 1rnrnThat's fine too.rnrnAnd finally, if I do this:rnrn    {{dump(app.session.get(cart/1/1/2 , 0))}}rnrnI get:rnrn    array (size=1)rn       8 => int 1rnrnThat is not fine! I should get 0 or null. There is no array in cart[1][1] !rnrnIs that a bug ?",
        "comments": [],
        "commits": [
            "merged branch MaxVandervelde/fix/namespaced-parameter-issue (PR #7586)nnThis PR was merged into the 2.1 branch.nnDiscussionn----------nn[HttpFoundation] Fixed bug in key searching for NamespacedAttributeBagnn| Q             | An| ------------- | ---n| Bug fix?      | yesn| New feature?  | non| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #7564n| License       | MITn| Doc PR        | N/AnnFixed a bug in NamespacedAttributeBag causing a result to be falsely found whennthe last key of the attribute matched the last of the queried name regardless ofnif the key did not exist in the search.nAdded Tests to demonstrate the issue and resolved by setting keys to null whenniterating through query and returning proper responses in the case that thengiven array does in fact not exist.nnCommitsn-------nn0f0c29c [HttpFoundation] Fixed bug in key searching for NamespacedAttributeBag"
        ]
    },
    "12728018": {
        "title": "[Console] DialogHelper::ask() while loop issue with 0",
        "body": "The while loop in `SymfonyComponentConsoleHelperDialogHelper::ask()` terminates, when you enter a 0. `fread` gets the 0 and assigns it to `$c` and then the loop breaks. As we all know PHP interpretes a 0 as false.rnrnI tried to fix it and came up with the following idea using `ord()` and `chr()`:rnrn~~~ phprn...rnwhile ($c = ord(fread($inputStream, 1))) {rn    $c = chr($c);rn...rn~~~rnrnIt solves the problem but I find it rather ugly. rnrnDoes anyone have a better idea about this?",
        "comments": [],
        "commits": [
            "merged branch kipit/ticket_7549 (PR #7623)nnThis PR was submitted for the master branch but it was merged into the 2.2 branch instead (closes #7623).nnDiscussionn----------nn[Console] fixed handling of 0 input on asknn| Q             | An| ------------- | ---n| Bug fix?      | yesn| New feature?  | non| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #7549n| License       | MITn| Doc PR        |nnCommitsn-------nn18a9eaf [Console] fixed handling of 0 input on ask",
            "merged branch kipit/ticket_7549 (PR #7625)nnThis PR was merged into the 2.2 branch.nnDiscussionn----------nn[Console] fixed handling of 0 input on asknn| Q             | An| ------------- | ---n| Bug fix?      | yesn| New feature?  | non| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #7549n| License       | MITn| Doc PR        |nnCommitsn-------nn302d44f [Console] fixed handling of 0 input on ask"
        ]
    },
    "12664314": {
        "title": "[Profiler] Backslash before slash",
        "body": "In u201cRequestu201d tab of profiler, there is a backslash before all the slashs and backslashs (see screenshot)u2026 I just did the upgrade to Symfony 2.2.rn![screen](https://f.cloud.github.com/assets/1258839/324302/21576eea-9ae1-11e2-96c3-0a358b657e33.png)",
        "comments": [
            "I think this is the result of this commit: https://github.com/symfony/symfony/commit/163564b00905046faf0fe643665729cc43be0f24n",
            "Yes, you're probably right.n"
        ],
        "commits": [
            "merged branch pvolok/fix_7540 (PR #7643)nnThis PR was submitted for the master branch but it was merged into the 2.2 branch instead (closes #7643).nnDiscussionn----------nn[WebProfilerBundle] fixed output of bag valuesnn| Q             | An| ------------- | ---n| Bug fix?      | non| New feature?  | non| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #7540n| License       | MITn| Doc PR        | -nnCall json_encode with flags: JSON_UNESCAPED_SLASHES andnJSON_UNESCAPED_UNICODEnnCommitsn-------nn7ee8b10 [WebProfilerBundle] fixed output of bag values"
        ]
    },
    "12508458": {
        "title": "SymfonyComponentDomCrawlerCrawler::addContent() - handling of MIME types",
        "body": "If the server responds with an empty HTTP Content-Type, 'text/html' is assumed, which is good.  However, if the Content-Type contains a charset but no MIME type, e.g. 'charset=utf-8' or '; charset=utf-8', the method returns null and the DOM is not parsed.rnrnDesired behaviour is that a Content-Type with a charset but no MIME type should be treated in the same way as an empty Content-Type, with regards to the default 'text/html' MIME being assumed.  This is the way my browser responds to such a Content-Type when there is HTML in the response body.rnrnThis was relevant to me because of a bug in ZF2 and the Content-Type headers it returns under certain circumstances, and the use of the Symfony DomCrawler component in the Behat integration testing/BDD tool.  I will pursue the Zend bug separately.",
        "comments": [],
        "commits": []
    },
    "12211096": {
        "title": "[Service Container] Container camelize strange behavior",
        "body": "At Container the method camelize:rnrn```phprn    /**rn     * Camelizes a string.rn     *rn     * @param string $id A string to camelizern     *rn     * @return string The camelized stringrn     */rn    public static function camelize($id)rn    {rn        return preg_replace_callback('/(^|_|.)+(.)/', function ($match) { return ('.' === $match[1] ? '_' : '').strtoupper($match[2]); }, $id);rn    }rn```rnrnI don't understand why if the first char is . or _ is kept:rnrn```phprnphp > function camelize($id) { return preg_replace_callback('/(^|_|.)+(.)/', function ($match) { return ('.' === $match[1] ? '_' : '').strtoupper($match[2]); }, $id); }rnphp > echo camelize('test.test2') . n;rnTest_Test2rnphp > echo camelize('.testtest2') . n;rn.testtest2rnphp > echo camelize('test_test2') . n;rnTestTest2rnphp > echo camelize('_test_test2') . n;rn_testTest2rn```rnrnIf the camelize is used to transform for example an array on several variables it will fail:rnrn```phprnphp > $.t = 5;rnPHP Parse error:  syntax error, unexpected '.', expecting variable (T_VARIABLE) or '$' in php shell code on line 1rnrnParse error: syntax error, unexpected '.', expecting variable (T_VARIABLE) or '$' in php shell code on line 1rn```rnrnAnd is really strange that after you camelize a string it still keep underscore. My suggestion is that if a _ or . exists as first character would disappear on camelize, so instead of the below behavior both would return TestDarnrn```phprnphp > echo camelize('test_da') . n;rnTestDarnphp > echo camelize('_test_da') . n;rn_testDarn```",
        "comments": [
            "Why should heading `.` or `_` be replaced with something? With what?n",
            "Camelize will remove all _  except the first one, in my opinion it should remove all the _ without any exceptions.nn``` phpnphp > echo camelize('_test_test2') . n;n_testTest2n```nnAbout the . it is replaced with _ in all positions except in the first position that is not replaced, eg:nn``` phpnphp > echo camelize('test.test2') . n;nTest_Test2nphp > echo camelize('.testtest2') . n;n.testtest2n```nnKeeping the first . doesn't make a lot of sense to me, why that exception? For sure a lot of people use camelize to invoke methods dynamic, and a method with . as start is invalid, but that is not the main point.nnThe main point is that I don't see why a camelize that remove all the _ and switch all . into _ have exceptions to first chars. If that behavior will be kept at least the PHPdoc of the method should be clear about that.n",
            "Guys, I just found this issue using symfony/symfony 2.2.x-dev with commit 3c44d487f2ca7c7237b7a5bb2fa98922d96d7478 and PHP5.4.13.nnOn `composer.phar install`:nn```nGenerating autoload filesnPHP Parse error:  syntax error, unexpected '('/(^|_|.)+(.)/', fu' in .../vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/Container.php on line 489nScript SensioBundleDistributionBundleComposerScriptHandler::buildBootstrap handling the post-install-cmd event terminated with an exceptionnn  [RuntimeException]                                     n  An error occurred when generating the bootstrap file.n```n",
            "@fabpot can you give your input on this? I'd like to solve the issue but I need some rules for how this should work. Thanks :)n"
        ],
        "commits": [
            "merged branch GromNaN/dic-camelize (PR #8536)nnThis PR was merged into the 2.2 branch.nnDiscussionn----------nn[DependencyInjection] Fix Container::camelize to convert beginning and ending . and _nn| Q             | An| ------------- | ---n| Bug fix?      | yesn| New feature?  | non| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #7431n| License       | MITn| Doc PR        | n/annI'm using strtr to make the conversion in order to ensure that the behavior is the same as `Container::get`.nnFrom the test cases I've added, the following were not passing:nnCommitsn-------nn485d53a [DependencyInjection] Fix Container::camelize to convert beginning and ending chars"
        ]
    },
    "11853585": {
        "title": "BrowserKit::request does not handle network paths (Functional test for subdomains)",
        "body": "Hello,rnrnThere is a problem related to test for subdomains (all other tests work). Maybe I do something wrong!! I am able to access to sob-domain directly from a browser as will as I see the route in terminal ```app/console router:debug -e=test```rnrnthe routernrn    anf_word_scrabble_widget:rn        path:   /scrabble/scrabble-finder-widget.phprn        defaults:  { _controller: MyBundle:Default:widget }rn        host:     w.{domain}rn        requirements:rn             domain: %domain%rnrnconfig.ymlrnrn    domain: example.localrnrntestrnrn    public function testWidget()rn    {rn       $client = static::createClient();rn    rn       $router = $client->getContainer()->get('router');rn       $domain = $client->getContainer()->getParameter('domain');rn    rn      $url = $router->generate('anf_word_scrabble_widget', array('domain' => $domain));rnrn      $crawler = $client->request('GET', $url);rn      $this->assertEquals(200, $client->getResponse()->getStatusCode());rn    }rnrnit throws an exception rnrn    No route found for &quot;GET //w.example.local/scrabble/scrabble-finder-widget.php&quot; (404 Not Found)rnrnrnI have tried to use rnrn    $client = static::createClient(array(), array(rn    'HTTP_HOST'       => 'w.example.local',rn    ));rnrnrnbut the same!rn",
        "comments": [
            "Can you please try to use `$url = $router->generate('anf_word_scrabble_widget', array('domain' => $domain), UrlGeneratorInterface::ABSOLUTE_URL);` and see if that works? Because currently it generates a network path (domain does not match) and the client might not be able to request that.n",
            "thanks @Tobion nit solves the problem :+1: n",
            "I reopen this ticket because the browserkit client should be fixed to handle network paths. I've changed the title of this ticket.n",
            "fixed by #7179n"
        ],
        "commits": []
    },
    "11684078": {
        "title": "[2.2][Yaml] Blank values should resolve to null",
        "body": "The following syntax was valid in 2.1, and should be valid according to the YAML spec:rnrn    db.options:rn      password:rn    myproject.test:rn      param2: 456rnrnHowever, since 2.2 this throws a `SymfonyComponentYamlExceptionParseException`: Indentation problem in file.yml at line 2 (near password:).rnrnIMO this should be fixed. Or if the BC break was intentional, it should be documented.",
        "comments": [
            "@igorw blank values are not valid in Yaml 1.2n",
            "Please point me to where this is mentioned. Unless I'm misunderstanding the spec, it should be allowed.nn[7.2. Empty Nodes](http://www.yaml.org/spec/1.2/spec.html#id2786563) states that:nn```n{n  ? foo :u00b0,n  u00b0: bar,n}n```nnShould resolve to:nn```n%YAML 1.2n---n!!map {n  ? !!str foo : !!null ,n  ? !!null    : !!str bar,n}n```nnWhere `u00b0` is an empty value.n",
            "hmm, right.nnBtw, the inline parser is inconsistent as it parses it as a string: https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Yaml/Inline.php#L47n",
            "working on itn"
        ],
        "commits": [
            "Fix config_extend.yml for 2.2 (see symfony/symfony#7274",
            "merged branch pvolok/fix-7274 (PR #7641)nnThis PR was merged into the 2.1 branch.nnDiscussionn----------nn[2.2][Yaml] Fixed resolving blank valuesnn| Q             | An| ------------- | ---n| Bug fix?      | yesn| New feature?  | non| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #7274n| License       | MITn| Doc PR        | -nnAlso, Seldaek suggested to rename the $notEOF variable.nnCommitsn-------nnfb686d8 [Yaml] improved boolean naming ($notEOF -> !$EOF)n047212a [Yaml] fixed handling an empty value"
        ]
    },
    "11611544": {
        "title": "[console]  add __toString() on ArgvInput",
        "body": "Hi There,rnrnI was wondering if a __toString() method could be added to SymfonyComponentConsoleInputArgvInput or at least StringInput,  It would be helpful repackage a command line after its been parsed, among other thingsrnrn-Thanks",
        "comments": [
            "What result would you expect of the `__toString` method ?nnDepending on what is expected, the method could be added to the parent class `SymfonyComponentConsoleInputInput`.n",
            "I'm on it, trying to make something reversible (i.e. you can pass toString back into a StringInput and things work as expected.n"
        ],
        "commits": [
            "[Console] Add ArgvInput::__toString and ArrayInput::__toString, fixes #7257",
            "merged branch Seldaek/argv-tostring (PR #7648)nnThis PR was merged into the master branch.nnDiscussionn----------nn[Console] Add ArgvInput::__toString, fixes #7257nnCommitsn-------nn659eb66 [Console] Add ArgvInput::__toString and ArrayInput::__toString, fixes #7257"
        ]
    },
    "11600112": {
        "title": "php templating engine service is inaccessible (set to private)",
        "body": "Can we change the service to public? If so, would that be considered a bugrnfix or a new feature?",
        "comments": [
            "Why would you need to access this service ? You can use the `templating` service (which will be the DelegatingEngine when you enable several templating engine or the only engine you have when a single one is enabled)n",
            "because addGlobals (and many other methods) aren't available on the delegating engine nor can i grab the php engine directly because getEngine is protected.n",
            "If you want to add some globals, you should use a compiler pass to add a method call on the service definition instead of getting the service somewhere during the boot process or the kernel events. This way, this keeps the service lazy-loaded and ensures that your global is always set when using the service.n",
            "i saw that the twig engine was available as a public service, so i suggested the same for the php engine. is there a reason for that?n",
            "perhaps the real problem is that the constructor of the PHPEngine should be more flexible and not just force a single global.  I wonder if there are any other folks who are interested in the phpengine who have any ideas on that? It seems to be somewhat illmaintained comparatively.n",
            "oh BTW.. i cannot simply set globals at compile time, some of them are based on the request. So a compiler pass will not solve (all) my problems.n",
            "Moving `DelegatingEngine::getEngine()` to public seems reasonable to me.n"
        ],
        "commits": [
            "merged branch jakzal/templating-delegating-engine (PR #8280)nnThis PR was merged into the master branch.nnDiscussionn----------nn[Templating|FrameworkBundle] Made DelegatingEngine::getEngine() publicnn| Q             | An| ------------- | ---n| Bug fix?      | non| New feature?  | yesn| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #7254n| License       | MITn| Doc PR        | -nnAs a bonus I've covered both classes with tests.nnCommitsn-------nna54cbff [FrameworkBundle] Made DelegatingEngine::getEngine() public.n3f84cd3 [Templating] Made DelegatingEngine::getEngine() public.n0a72a99 [FrameworkBundle] Added tests for the DelegatingEngine.n6c31ab2 [Templating] Added tests for the DelegatingEngine."
        ]
    },
    "11511248": {
        "title": "[2.0][2.1][FrameworkBundle] disabling CSRF protection doesn't work with the `enabled` flag",
        "body": "Usingrn```rnframework:rn  csrf_protection:rn    enabled: falsern```rnonly disables the CSRF protection for Symfony 2.2. But to work with 2.0, 2.1, and 2.2 actuallyrn```rnframework:rn  csrf_protection: falsern```rnhas to be used.rnrnSee https://travis-ci.org/craue/TwigExtensionsBundle/builds/5138388 and https://travis-ci.org/craue/TwigExtensionsBundle/builds/5139467 .",
        "comments": [
            "@craue the enableable configs have a higher level of integration in 2.2 which probably explains why it works better there.n",
            "and actuallynn```nframework:n  csrf_protection: falsen```nnwill unset the noden",
            "The bug is [in the extension](https://github.com/symfony/symfony/blob/2.1/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/FrameworkExtension.php#L158) as the csrf config is loaded whether csrf is enabled or not. It should not be.nnSetting csrf_protection to plain false will unset the node and then no file is loaded (but the parameter is not set - which should IMO also be changed).n",
            "@fabpot we must fix this for 2.1?n",
            "yes it should.n",
            "@vicb ok, then I get it.n",
            "Thanks, you should be able to find all the required details above. You can ping me when you submit the PR if you need a code review.n",
            "@vicb First time contributor, a glance over PR #7888 would be much appreciated if you're still available. Thanks.n",
            "As 2.0 and even 2.1 are unmaintained now, I guess a fix won't be merged anyway and thus this issue can be closed.n"
        ],
        "commits": []
    },
    "11507972": {
        "title": "[DomCrawler] relative links",
        "body": "relative links seems not to be handled correct inside `Link` the classrnrnI would expectrnrn```phprn    public function testRelativeLink()rn    {rn        $dom = new DOMDocument();rn        $dom->loadHTML('<html><a href=../foo>foo</a></html>');rnrn        $node = $dom->getElementsByTagName('a')->item(0);rn        $link = new Link($node, 'http://example.com/bar/');rnrn        $this->assertEquals('http://example.com/foo', $link->getUri());rn    }rn```",
        "comments": [],
        "commits": [
            "merged branch lazyhammer/crawler-relative-links-2.1 (PR #7244)nnThis PR was merged into the 2.1 branch.nnCommitsn-------nna4ec677 [DomCrawler] Fix relative path handling in linksnnDiscussionn----------nn[2.1][DomCrawler] Fix relative path handling in linksnn| Q             | An| ------------- | ---n| Bug fix?      | yesn| New feature?  | non| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #7219n| License       | MITn| Doc PR        | n/annAdded relative path canonicalization according to RFC 3986, section 5.2.4nn---------------------------------------------------------------------------nnby vicb at 2013-03-02T14:48:46Znn@fabpot seems like 2.1 as a deps issue if you look at travis logs"
        ]
    },
    "11338172": {
        "title": "[HTTPFoundation] Use `apache_request_headers` when available",
        "body": "Both my Apache installs strip `Authorization` headers (even though they're not CGI implementations) and don't populate `HTTP_AUTHORIZATION`.rnrnUsing `apache_request_headers` when available, would seem to be more robust.",
        "comments": [
            "This is what I have to do in my app as a workaround:nn``` phpnif (isset(getallheaders()['Authorization'])) {n    $request->headers->set('Authorization', getallheaders()['Authorization']);n}n```n",
            "I am taking care of this one.n",
            "Great! Let me know if I can help.n",
            "Looking into the code, I'm not sure how to implement this the best way. The `$_SERVER` variable is read in the `Request::createFromGlobals`. My first idea was to look if `apache_request_headers` was available and then pass this instead of the `$_SERVER` array.nnBut as `$_SERVER` includes much more keys in a different format, I'm a bit lost. I thought about merging the two and then modifying the `ServerBag->getHeaders()` method to look for both formats, but I'm not sure about it.n",
            "I'm not sure about this either, but it looks good to me.n",
            "Looks like the same as #3551, no?n",
            "Closing in favor of a documentation update: see symfony/symfony-docs#2529n",
            "@fabpot Hmm, I don't think this solves my problem. I'm _not_ running php-cgi, yet my Authorization headers are still stripped.n",
            "@julien-c same problem here, see https://github.com/symfony/symfony/issues/19693. Have you ever found a solution?n",
            "@andig Nope. Not very helpful, but I've switched to a better stack now :)n",
            "In my case I had to add to virtual machine config in Apache:rn`SetEnvIf Authorization (.*) HTTP_AUTHORIZATION=$1`rnAfter this **HTTP_AUTHORIZATION** appeared in **$_SERVER** (with value _Bearer Xxxx_).rnNow I can get it's value from **$request->headers->get('Authorization')**"
        ],
        "commits": []
    },
    "11337837": {
        "title": "Schema relative URLs not working in combination with the TestClient",
        "body": "The schema relative URLs introduced in #3958 are great. However, this does not seem to be working in combination with the TestClient. The URLs that are generated with a relative schema are being prefixed with the configured host and the default schema.rnrnE.g.rnrn```jinjarn{{ url('blog', {}, true) }}rn```rnrnWhen on `http://localhost` test client will try to visit: `http://localhost//localhost/blog` instead of `http://localhost/blog`.rnrn",
        "comments": [
            "The DomCrawler component does not support scheme relative urls. It should be added before https://github.com/symfony/symfony/blob/master/src/Symfony/Component/DomCrawler/Link.php#L123 (checking for `//` at the beginning.n"
        ],
        "commits": [
            "merged branch jfsimon/issue-7169 (PR #7179)nnThis PR was squashed before being merged into the master branch (closes #7179).nnCommitsn-------nnc6fe27f [2.3] [DomCrawler] adds schema relative URL support to linknnDiscussionn----------nn[2.3] [DomCrawler] adds schema relative URL support to linknnAdds support for `//relative/schema` URLs to `DomCrawler` links.nn| Q             | An| ------------- | ---n| Bug fix?      | yesn| New feature?  | non| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #7169nn---------------------------------------------------------------------------nnby stof at 2013-02-25T19:17:10Znn:+1:"
        ]
    },
    "11203908": {
        "title": "[Form] Binding false to a checkbox makes the checkbox being checked by default",
        "body": "I am not sure about whether this is a bug or by design: if a checkbox is bound to a boolean FALSE value, the checkbox is checked by default.rnrnFailing test case:rn```phprn    public function testBindWithFalseValueUnchecked()rn    {rn        $form = $this->factory->create('checkbox', null, array(rn            'value' => '1',rn        ));rn        $form->bind(false);rnrn        $this->assertFalse($form->getData());rn        $view = $form->createView();rn        $this->assertFalse($view->vars['checked']);rn    }rn```",
        "comments": [
            "AFAIK, checkboxes are not submitted when not selected. So the form only checks whether it checkbox name is in the request (basically doing `isset()`).n",
            "That's true. My issue is about binding the form to initial data (domain object) when displaying it, not after submit.nnI'll give a wider example:nn``` phpn$initial_values = array(n    'name' => 'Ville',n    'active' => falsen);n$formBuilder = $this->createFormBuilder();n$formBuilder->add('name','text');n$formBuilder->add('active','checkbox');n$form = $formBuilder->getForm();nn$form->bind($initial_values);n$templateParameters = array('form' => $form->createView());n// Then rendering the templaten```nnTWIG Template:nn``` twignName: {{ form_widget(form.name) }}nIs active: {{ form_widget(form.active) }}n```nnOutcomes:n- Name-field rendered with value Villen- Active-checkbox is checked, even active=false in initial valuesn",
            "Yeah this is surely unexpected.n",
            "`bind()` binds data to the form, transforms and validates it. `setData()` should be used to populate the form with defaults.nnHowever, I can think of scenarios where binding values which not necessarily come from a http request is useful. I think we should support bot `false` and `null`.n",
            "True, you should use setData for that.n",
            "@jakzal if your input is not behaving in the same way than a browser (set/not set) but sendign a boolean, don't use the checkbox type.n",
            "Anyway, closing this as the issue is a misuse.n",
            "@stof ok thanks for your comment.nnFor the convenience and ease of use, I would prefer an option for checkbox type to allow also `false` to be interpreted as not set. I bet checkbox type is very frequently misused exactly for this kind of use cases.n",
            "@vmattila IMO, it does not make sense, as it would not behave like a checkbox anymore. As the binding behavior would be totally different, it should be a different type.n",
            "I agree with @jakzal, on the good should be to support `false` and `null` values. It maybe useful when the request contains content from json data (currently this is can be solved through event listeners).n",
            "@yethee I kind of changed my mind and agree with @stof now ;) It's not a BooleanType but a CheckboxType.n",
            "But then we can not use the one instance of a form in the context of RESTful. We will need to add an additional logic to build the form or have different forms for `application/x-www-form-urlencoded`, `application/json`, etc.n",
            "@yethee you can as soon as you implement BooleanType which would treat both `false` and `null` as `false`.n",
            "I agree that binding `false` should mark the checkbox as unset (for REST requests). There is no situation when `false` will be bound for normal forms anyway. Reopening.n",
            "@bschussek IIRC, this was done this way before 2.0 being stable, and you were the one changing it.n",
            "Yes, although the reason was empty strings. When a checkbox has the value `` and is clicked, you want it to remain clicked. Through a normal form, you will never receive the value `false`, since all values coming from the request are strings.n",
            "Thanks for your comments in general. I would be happy to contribute with this change (to make `false` considered as an unchecked value in CheckboxType)nnDo you think we should enable this `false` behavior by default or based on an option? Or vice versa, disabling the behavior with an option?n",
            "It should be enabled by default. We will add it to 2.3, as this is a behavior change and 2.2 is already feature frozen.n",
            "Since #7789 was merged, this issue can be closed.n",
            "Can we re-open the issue ? The unit test in pr #7789 does not reflect the real word. I added some tests: https://github.com/lyrixx/symfony-standard/blob/sf-debug-form-false/src/Acme/DemoBundle/Tests/Controller/DebugControllerTest.php#L37-L77 ; I used guzzle and buzz.nnResults:nn```n1) AcmeDemoBundleTestsControllerDebugControllerTest::testFormWithHttpTransportWithBuzz with data set #1 ('no', false)nFailed asserting that two strings are identical.n--- Expectedn+++ Actualn@@ @@n-non+yesnn2) AcmeDemoBundleTestsControllerDebugControllerTest::testFormWithHttpTransportWithGuzzle with data set #1 ('no', false)nFailed asserting that two strings are identical.n--- Expectedn+++ Actualn@@ @@n-non+yesnn```nnSo I dig a little: when you submit `false` with Guzzle: `$_POST['value'] === ''` and with buzz:  `$_POST['value'] === '0'`. BTW, I use nginx 1.2.6 and php 5.4.16.nnping @bschussek n",
            "@lyrixx the only way to submit `false` as a boolean is to send the data as json. form-url-encoded data can only submit strings, and an unchecked checkbox is omitted when encoding as form-url, not submitted as an empty string. So the issue is with your test, not with the implementation.n",
            "Or we can add another data-transformer to checkbox that convert `'0'` or `''` to `false` ?n",
            "@lyrixx This would be wrong. `0` and `''` are valid choices for a choice type. Your suggestion would make it impossible to select them in an expanded choice fieldn",
            "@stof is right. The only way to submit `false` to a checkbox is by using some protocol that supports this datatype (JSON, XML, ...). CGI supports strings only, so there is no way to support submitting an unchecked checkbox with this protocol than what we have now.n",
            "Yes, you are all right.nnBut can we provide a small data transformer: `BooleanToStringTransformerABitSpecial` ;) to could do the job.nOf course this data transformer will not be actived by default. It will be the developer responsibility to enable it for only one element. This could be documented in a cookbook entry.n"
        ],
        "commits": [
            "merged branch jakzal/checkbox-type-false (PR #7789)nnThis PR was merged into the master branch.nnDiscussionn----------nn[Form] Allowed binding false to a checkboxnn| Q             | An| ------------- | ---n| Bug fix?      | non| New feature?  | non| BC breaks?    | yesn| Deprecations? | non| Tests pass?   | [![Build Status](https://travis-ci.org/jakzal/symfony.png?branch=checkbox-type-false)](https://travis-ci.org/jakzal/symfony)n| Fixed tickets | #7139n| License       | MITn| Doc PR        | -nnCommitsn-------nn24ef8d2 [Form] Added a SimpleFormTest test case.ne493984 [Form] Allowed binding false to a checkbox."
        ]
    },
    "11110070": {
        "title": "[Process] Add a version check to the code added in #7102",
        "body": "When PHP 5.5 is released, and if the code still seems to work fine, a version check could /should be added to the block added in #7102 so that it's only executed on 5.3/5.4 since these are the buggy versions.",
        "comments": [
            "The fix is going to be released in: 5.4.12 / 5.3.22 / 5.5.0, lower versions of 5.4 and 5.3 are affected and need this workaround.n",
            "@Seldaek ok for you like that ?n",
            "Looks good yes.n",
            "@PierreJoye it seems that PHP builds with `--enable-maintainer-zts` are also affected by this on linux, and even on 5.4.12 it still is present. @loicfrering just helped debug this on travis (where they added this configure flag recently). Seems like https://bugs.php.net/bug.php?id=50524 is related.nnIs there an easy way to detect ZTS builds? That way we could enable this fix for ZTS builds only. Or maybe we should revert to always doing:nn```nif (null === $this->cwd) {n    $this->cwd = getcwd() ?: null;n}n```n",
            "yes, there is a constant for that, ZEND_THREAD_SAFEnnOn Sun, Mar 10, 2013 at 6:58 PM, Jordi Boggiano notifications@github.comwrote:nn> @PierreJoye https://github.com/PierreJoye it seems that PHP builds withn> --enable-maintainer-zts are also affected by this on linux, and even onn> 5.4.12 it still is present. @loicfrering https://github.com/loicfreringjust helped debug this on travis (where they added this configure flagn> recently). Seems like https://bugs.php.net/bug.php?id=50524 is related.n> n> Is there an easy way to detect ZTS builds? That way we could enable thisn> fix for ZTS builds only. Or maybe we should revert to always doing:n> n> if (null === $this->cwd) {n>     $this->cwd = getcwd() ?: null;n> }n> n> u2014n> Reply to this email directly or view it on GitHubhttps://github.com/symfony/symfony/issues/7106#issuecomment-14685623n> .nn## nnPierrenn@pierrejoye | http://blog.thepimp.net | http://www.libgd.orgn",
            "@lizjulien could you update your PR to enable this workaround for any php that has ZEND_THREAD_SAFE for now? Because it seems it's still not fixed in 5.4.12 on linux at least (haven't checked windows).n",
            "@Seldaek Sure, i'll do that. But just to be sure, we remove all check for version and we replace it by a constant check?n",
            "I think it's the only option until we can test for sure that it is fixed in a given version.n",
            "okn"
        ],
        "commits": [
            " #7106 - fix for ZTS builds",
            "#7106 - fix for ZTS builds",
            "merged branch lizjulien/7106 (PR #7248)nnThis PR was submitted for the master branch but it was merged into the 2.1 branch instead (closes #7248).nnDiscussionn----------nn#7106 - check php version for getcwd()nn| Q             | An| ------------- | ---n| Bug fix?      | non| New feature?  | non| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #7106n| License       | MITnnCommitsn-------nn11d3855  #7106 - fix for ZTS builds",
            "Merge branch '2.1' into 2.2nn* 2.1:n  #7106 - fix for ZTS buildsn  Added '@@' escaping strategy for YamlFileLoader and YamlDumpern  [Yaml] fixed bugs with folded scalar parsingn  [Form] made DefaultCsrfProvider using session_status() when availablen  Added unit tests to Dumpern  Update .travis.yml (closes #7355)n  [HttpFoudantion] fixed Request::getPreferredLanguage()n  Revert merged branch jfsimon/issue-6928 (PR #7378)n  Routing issue with installation in a sub-directory ref: https://github.com/symfony/symfony/issues/7129nnConflicts:nt.travis.ymlntsrc/Symfony/Bundle/FrameworkBundle/Routing/Router.phpntsrc/Symfony/Component/Routing/RouteCollection.php",
            "Merge branch '2.2'nn* 2.2:n  #7106 - fix for ZTS buildsn  Added '@@' escaping strategy for YamlFileLoader and YamlDumpern  [Yaml] fixed bugs with folded scalar parsingn  [Form] made DefaultCsrfProvider using session_status() when availablen  Added unit tests to Dumpern  Update .travis.yml (closes #7355)n  [HttpFoudantion] fixed Request::getPreferredLanguage()n  Revert merged branch jfsimon/issue-6928 (PR #7378)n  Routing issue with installation in a sub-directory ref: https://github.com/symfony/symfony/issues/7129"
        ]
    },
    "11023512": {
        "title": "[Process] Orphan temporary files are left on Windows",
        "body": "On Windows `Process::start` creates a temporary file every time because of this code:rn```phprn        if (defined('PHP_WINDOWS_VERSION_BUILD')) {rn            $this->fileHandles = array(rn                self::STDOUT => tmpfile(),rn            );rn```rnWhen being invoked for thousands of times as part of task scheduling pipeline, it leaves thousands of temporary files and eventually hits the limit at 65536 files per directory, after which point it can't create a new temporary file and simply dies.rnrnAfter being used, the temporary file should be deleted.",
        "comments": [
            "@extesy could you provide a failing test or an example code revealing the issue? Technically [files should be automatically removed](http://php.net/manual/en/function.tmpfile.php) when `fclose()` is called or script finishes.n",
            "@jakzal It's quite hard to isolate the small repro case, but here's what I think is going on:n1. Task runner process (the one which spawns worker processes) is always running, so it won't remove temp files because of script finishes condition.n2. The only two places where fileHandles are closed are `stop` function which I don't use, and `processFileHandles` which has its `$closeEmptyHandles` parameter always set to false so it doesn't close handles either.n",
            "Actually, `processFileHandles` is not even being called. I pass `$stdin=null` to Process constructor and this code does an early return from the `start` function:nn``` phpn        if (null === $this->stdin) {n            fclose($this->pipes[0]);n            unset($this->pipes[0]);nn            return;n        }n```nnSo `fclose` on fileHandles is not even called anywhere in the code path.n",
            "@extesy what are the exit statuses of these worker processes?n",
            "@romainneutron Can you have a look at this?n",
            "@extesy @mirkin Can you provide a test script that reproduce the issue systematically ?nnI do not have Windows OS. I tried to reproduce your issue by using file handles explicitely without success, temporary files are removed on process destruction. n",
            "Ok, I'll try to repro it with a test script.n"
        ],
        "commits": [
            "merged branch romainneutron/process-windows (PR #8924)nnThis PR was squashed before being merged into the 2.2 branch (closes #8924).nnDiscussionn----------nn[Process][2.2] Fix Process component on windowsnn| Q             | An| ------------- | ---n| Bug fix?      | yesn| New feature?  | non| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #8836, #8799, #7078n| License       | MITnnThis PR fixes Process on windows (almost, see note below).n - Some unit tests were not Windows compatiblen - Use a file handle for STDERR as well as STDOUT to avoid blockingn - Decouple pipes and descriptors from ProcessnnAs this move some a part of Process in a sub class, I hope merging this in 2.3 and master would not be a PITA. I'm here to make some adjustments after theses merge if needed.nn**Important note** :nnWe are using file handles instead of streams for `proc_open` pipes as described in the code (see [PHP bug #51800](https://bugs.php.net/bug.php?id=51800)). Unfortunately, this workaround may produce corrupted output/error output in some race conditions. That's why `AbstractProcessTest::testProcessPipes` randomly fails when using file handles (on unix and windows).nnCommitsn-------nn4a76c76 [Process][2.2] Fix Process component on windows"
        ]
    },
    "10704019": {
        "title": "[DomCrawler] Uppercase HTTP/HTTPS/FILE not seen as absolute URL",
        "body": "See the line here:rnhttps://github.com/symfony/DomCrawler/blob/master/Link.php#L49rnrnIf a URL from a crawled page is badly formed to use an uppercase URI scheme, DomCrawler will not recognize it as an absolute link.",
        "comments": [],
        "commits": [
            "merged branch cloppy/Dom-Crawler-fix (PR #7127)nnThis PR was merged into the 2.0 branch.nnCommitsn-------nncb03074 [DomCrawler] lowered parsed protocol string (fixes #6986)nnDiscussionn----------nn[DomCrawler] lowered parsed protocol string (fixes #6986)nn| Q             | An| ------------- | ---n| Bug fix?      | yesn| New feature?  | non| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #6986n| License       | MITn| Doc PR        | symfony/symfony-docs#123nnAre UTs needed for this?",
            "Merge branch '2.0' into 2.1nn* 2.0:n  [Form] Fixed label option to accept the value 0n  [DomCrawler] lowered parsed protocol string (fixes #6986)nnConflicts:ntsrc/Symfony/Component/Form/Extension/Core/Type/FieldType.phpnttests/Symfony/Tests/Component/Form/Extension/Core/Type/FieldTypeTest.php",
            "Merge branch '2.1' into 2.2nn* 2.1:n  Defined stable version point of Doctrine.n  [HttpFoundation] Remove Cache-Control when using https download via IE<9 (fixes #6750)n  Update composer.jsonn  [Form] Fixed TimeType not to render a size attribute in select tagsn  [Form] Added test for label option to accept the value 0n  Expanded fault-tolerance for unusual cookie datesn  Fix docblock typen  [Form] Fixed label option to accept the value 0n  merged branch jfcixmedia/2.1 (PR #5838)n  [DomCrawler] lowered parsed protocol string (fixes #6986)nnConflicts:ntcomposer.jsonntsrc/Symfony/Bridge/Twig/Resources/views/Form/form_div_layout.html.twigntsrc/Symfony/Bundle/FrameworkBundle/Resources/views/Form/time_widget.html.phpntsrc/Symfony/Bundle/FrameworkBundle/composer.jsonntsrc/Symfony/Component/Form/Tests/Extension/Csrf/EventListener/CsrfValidationListenerTest.phpntsrc/Symfony/Component/Routing/composer.jsonntsrc/Symfony/Component/Security/composer.jsonntsrc/Symfony/Component/Validator/composer.json",
            "Merge branch '2.2'nn* 2.2:n  Defined stable version point of Doctrine.n  [HttpFoundation] Remove Cache-Control when using https download via IE<9 (fixes #6750)n  Update composer.jsonn  [Form] Fixed TimeType not to render a size attribute in select tagsn  [Form] Added test for label option to accept the value 0n  Expanded fault-tolerance for unusual cookie datesn  Fix docblock typen  [Form] Fixed label option to accept the value 0n  Added greek translationn  merged branch jfcixmedia/2.1 (PR #5838)n  added a note about a BC break for the path info of sub-request (closes #7138)n  [DomCrawler] lowered parsed protocol string (fixes #6986)n  [FrameworkBundle] Fix a BC for Hinclude global templaten  [HttpKernel] fixed locale management when exiting sub-requestsn  fixed HInclude renderer (closes #7113)n  Removed some leaking deprecation warning in the Form componentn  [HttpKernel] hinclude fragment renderer must escape URIs properly to return valid htmlnnConflicts:ntsrc/Symfony/Bundle/FrameworkBundle/composer.jsonntsrc/Symfony/Component/Security/composer.json"
        ]
    },
    "10605836": {
        "title": "BinaryFileResponse - Error on calculate end value",
        "body": "the end is calculated wrong:rnlist($start, $end) = array_map('intval', explode('-', substr($range, 6), 2)) + array(0);rnrn                if ('' !== $end) {rn                    $this->maxlen = $end - $start;rn                } else {rn                    $end = $this->file->getSize() - 1;rn                }rnrnBecause intval function works on every value, the end value of '' is 0. So the if statement is never true.",
        "comments": [
            "Can you submit a pull request with a fix and some unit tests?n",
            "According to the [specification](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1) we're also not handling the `$start` properly. nnFor example: `bytes=-500` should return the final 500 bytes (and not 0-500 bytes).nnThis is something I could help with once I'm finished with my other task.n",
            "I think we have another bug here. The [test expects]((https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Tests/BinaryFileResponseTest.php#L62) to get 3 bytes back for a range 1-4:nn``` phpn$request->headers->set('Range', 'bytes=1-4');nn$this->expectOutputString('IF8');n```nn[rfc2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1) says that the byte positions are inclusive. That means we should rather get 4 bytes back for 1-4 range.n",
            "Can this be closed now? See the merge above.n"
        ],
        "commits": [
            "merged branch jakzal/2.2-binary-response-fixes (PR #7032)nnThis PR was merged into the 2.2 branch.nnCommitsn-------nn381bd7e [HttpFoundation] Added support for partial ranges in the BinaryFileResponse.nd9b9145 [HttpFoundation] Fixed byte ranges in the BinaryFileResponse.nnDiscussionn----------nn2.2 binary response fixesnnFixes two problems described in #6961, related to handling requests with a *Range* header:n* BinaryFileResponse returns wrong number of bytesn* BinaryFileResponse incorrectly handles partial rangesnn| Q              | A                                        |n|--------------|--------------------------------|n| Bug fix?          | yes |n|New feature? | no |n|BC breaks?    | no |n|Deprecations? |tno |n|Tests pass? | yes |n|Fixed tickets | #6961 |n|License | MIT |n|Doc PR | n/a |"
        ]
    },
    "10546193": {
        "title": "[TwigBridge][Translation] TwigExtractor duplicates with trans_default_domain",
        "body": "Given this template, all translations are extracted twice.rnrnOnce for the correct translation domain (as specified by `{% trans_default_domain %}` and once wrongly for the default domain. This applies to the current template, its parent and the embedded one.rnrn```html+jinjarn{% extends '::base.html.twig' %}rnrn{% trans_default_domain users %}rnrn{% block content_header %}rn    <h1>{{ 'heading.create'|trans }}</h1>rn{% endblock %}rnrn{% block content_layout %}rn    {# .. #}rnrn    {% embed ':Layout:content_full_size.html.twig'%}rn        {% trans_default_domain users %}rnrn        {# .. #}rn    {% endembed %}rn{% endblock %}rn```",
        "comments": [
            "Hi, what version of Symfony2 are you using?n",
            "The issue occurred in 2.1.7 and is still there after upgrading to 2.2.0-BETA2.n",
            "Ok, thanks, I'll give it a shot today and see if I can fix it.n",
            "Hi.nnSorry for delay.nI've created the following [gist](https://gist.github.com/dlsniper/4726085) but I've yet to encounter the problem.nAm I doing something wrong?n",
            "That looks the way, we have templates.nnYou don't get `Symfony - Welcome` dumped as key under domain `messages`, but only in the domain `users`?n",
            "@havvg actually the `app/console translation:update --dump-messages --force en AcmeDemoBundle` command will dump only `messages.en.__format__`.nn```nGenerating en translation files for AcmeDemoBundlenParsing templatesnLoading translation filesnnDisplaying messages for domain messages:nn'Symfony - Welcome': '__Symfony - Welcome'nembed: __embedn```nnI'm using Symfony2 2.1.7 as well.n",
            "When I run `php app/console translation:update de_DE OrmigoBundle --dump-messages`, I got this result:nn```nGenerating de_DE translation files for OrmigoBundlenParsing templatesnLoading translation filesnnDisplaying messages for domain messages:nnsettings.header: __settings.headernaccount.my_account: __account.my_accountnaccount.settings: __account.settingsn[ ... ]nnDisplaying messages for domain account:nnsettings.header: Einstellungenn[ ... ]nnDisplaying messages for domain breadcrumb:nnhome: Ormigonaccount.my_account: 'Mein Konto'naccount.settings: Einstellungennn[ ... ]n```nnAdding the `--force` option will write all those into the output format (PDO), including the wrong/duplicate ones.nMaybe, there is something different, that's causing the issue, so I put up this gist with more details on the templates: https://gist.github.com/havvg/3a779bf221e09acb181en",
            "Ah, so you **only** got it in `messages`? That would be wrong, too.nI guess, I got the correct ones, because some of them are already present (translated) in their correct domain.n",
            "@havvg the problem is that `TwigExtractor` seems not to take `trans_default_domain` in account.nI'll try to fix it today.n"
        ],
        "commits": [
            "merged branch jfsimon/issue-6943 (PR #7206)nnThis PR was squashed before being merged into the 2.1 branch (closes #7206).nnCommitsn-------nnbae83c7 [TwigBridge] fixed trans twig extractornnDiscussionn----------nn[TwigBridge] fixed trans twig extractornn| Q             | An| ------------- | ---n| Bug fix?      | non| New feature?  | non| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #6943"
        ]
    },
    "10533801": {
        "title": "[Console] Clean the unit tests",
        "body": "Each of the unit test methods should be splitted in smaller blocks, see InputOptionTest for a bad example.",
        "comments": [
            "I'll pick it up. @vicb I guess it should be done in 2.1?n",
            "master (as not a bug fix)n",
            "thanks... but please wait one day, I am fixing them before :)n",
            "well will be for next beginning of next week, pending a reply for fabpot. Feel free to go ahead before if you wish.n"
        ],
        "commits": [
            "merged branch jakzal/console-tests-cleanup (PR #6989)nnThis PR was merged into the master branch.nnDiscussionn----------nn[Console] Cleaned up the unit tests.nnCleaned up some unit tests in the Console component as suggested in #6935. I didn't fully cleanup the Application tests to not to delay this PR. I might do it later as a separate one.nn| Q              | A                                        |n|--------------|--------------------------------|n| Bug fix?          | no |n|New feature? | no |n|BC breaks?    | no |n|Deprecations? |tno |n|Tests pass? | yes |n|Fixed tickets | #6935 |n|License | MIT |n|Doc PR | n/a |nnCommitsn-------nn5ca04b0 [Console] Cleaned up the unit tests."
        ]
    },
    "9837048": {
        "title": "UniqueEntity in edit/update action",
        "body": "In entity I use: rn@UniqueEntity(fields={email}, groups={new, edit})rnrnbut i have a problem when I try validate in edit mode.rnWhen I submit form with not changed email field, then I get error This value is already used.rn",
        "comments": [
            "@md81 Are you updating the managed entity or a new instance in your edit action ?n",
            "In update action, I use managed entity, like this:n$editForm   = $this->createForm($formType, $entity);n",
            "Hmm, I often have the same problem, but at this moment I can't find any code to paste.n",
            "Does anyone know how to fix it?n",
            "I've found clue.nnProblem exists only in case with cascade validation.nnwhen I use in EditType:n$buildern            ->add('email', 'email')nnvalidation is ok, nbut problem is when I use:n$buildern            ->add('userEdit', new UserEditType(), array(n                'validation_groups'=>array('edit', 'company'),n            ))nnwhere UserEditType contain: n$buildern            ->add('email', 'email')n",
            "The problem also exists when you use a different EntityManager in constraint :n`@UniqueEntity(fields=name, em=my_custom_em)`.n",
            "i have this issue with FOSUserBundle's ProfileFormType. i am using non-default entity manager and it gives me same results while editing/updating.n",
            "the problem seems to be in nSymfonyBridgeDoctrineValidatorConstraintsUniqueEntityValidatornline 120:nn```n$entity === ($result instanceof Iterator ? $result->current() : current($result))n```nncurrent($result)  returns false here, because the $result array is not rewound.nnthere is a rewind for Iterator on line 112:nn```n    if ($result instanceof Iterator) {n        $result->rewind();n    }n```nnso change it tonn```n    if ($result instanceof Iterator) {n        $result->rewind();n    }n    else if (is_array($result)) {n        reset($result);n    }n```n"
        ],
        "commits": [
            "merged branch xabbuh/issue6651 (PR #7906)nnThis PR was squashed before being merged into the 2.1 branch (closes #7906).nnDiscussionn----------nnif the repository method returns an array ensure that it's internal poin...nn...ter is resettednn| Q             | An| ------------- | ---n| Bug fix?      | yesn| New feature?  | non| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #6651n| License       | MITn| Doc PR        |nnCommitsn-------nn0610750 if the repository method returns an array ensure that it's internal poin..."
        ]
    },
    "9836344": {
        "title": "[Console][Bug] Using short options with empty strings cause Uninitialized string offset: 0 notice.",
        "body": "Example:rnphp app/console server:run -d  localhost:8080rnPHP Notice:  Uninitialized string offset: 0 in ~/code/project/vendor/symfony/symfony/src/Symfony/Component/Console/Input/ArgvInput.php on line 222",
        "comments": [
            "see dc2cc6b13c8664ed2ae97611d448f98d1cfae2b8n"
        ],
        "commits": [
            "[Console] fixed input bug when the value of an option is empty (closes #6649, closes #6689)",
            "Merge branch '2.0' into 2.1nn* 2.0:n  [Yaml] fixed default valuen  Added YamlDumper::setIndentation() method to allow a custom indentation level of nested nodes.n  added a way to enable/disable object support when parsing/dumpingn  added a way to enable/disable PHP support when parsing a YAML input via Yaml::parse()n  [Console] fixed input bug when the value of an option is empty (closes #6649, closes #6689)nnConflicts:ntsrc/Symfony/Component/Yaml/Dumper.phpntsrc/Symfony/Component/Yaml/Parser.phpntsrc/Symfony/Component/Yaml/Tests/DumperTest.phpntsrc/Symfony/Component/Yaml/Tests/ParserTest.phpntsrc/Symfony/Component/Yaml/Yaml.php",
            "Merge branch '2.1'nn* 2.1:n  [Yaml] fixed default valuen  Added YamlDumper::setIndentation() method to allow a custom indentation level of nested nodes.n  added a way to enable/disable object support when parsing/dumpingn  added a way to enable/disable PHP support when parsing a YAML input via Yaml::parse()n  fixed CSn  [Process] Fix docblocks, remove `return` from `PhpProcess#start()` as parent returns nothing, cleaned up `ExecutableFinder`n  fixes a bug when output/error output contains a % charactern  [Console] fixed input bug when the value of an option is empty (closes #6649, closes #6689)n  [Profiler] [Redis] Fix sort of profiler rows.n  Fix version_compare() calls for PHP 5.5.n  Removed underscores from test method names to be consistent with other components.n  [Process] In edge cases `getcwd()` can return `false`, then `proc_open()` should get `null` to use default value (the working dir of the current PHP process)n  Fix version_compare() calls for PHP 5.5.n  Handle the deprecation of IntlDateFormatter::setTimeZoneId() in PHP 5.5.n  removed the .gitattributes files (closes #6605, reverts #5674)n  [HttpKernel] Clarify misleading comment in ExceptionListenernnConflicts:ntsrc/Symfony/Bundle/WebProfilerBundle/Resources/views/Profiler/toolbar_style.html.twigntsrc/Symfony/Component/Form/Tests/Extension/Core/Type/DateTimeTypeTest.phpntsrc/Symfony/Component/Form/Tests/Extension/Core/Type/TimeTypeTest.phpntsrc/Symfony/Component/Form/Tests/Util/PropertyPathTest.phpntsrc/Symfony/Component/HttpKernel/Profiler/RedisProfilerStorage.phpntsrc/Symfony/Component/Process/Process.php",
            "Merge branch '2.1'nn* 2.1:n  [Yaml] fixed default valuen  Added YamlDumper::setIndentation() method to allow a custom indentation level of nested nodes.n  added a way to enable/disable object support when parsing/dumpingn  added a way to enable/disable PHP support when parsing a YAML input via Yaml::parse()n  fixed CSn  [Process] Fix docblocks, remove `return` from `PhpProcess#start()` as parent returns nothing, cleaned up `ExecutableFinder`n  fixes a bug when output/error output contains a % charactern  [Console] fixed input bug when the value of an option is empty (closes #6649, closes #6689)n  [Profiler] [Redis] Fix sort of profiler rows.n  Fix version_compare() calls for PHP 5.5.n  Removed underscores from test method names to be consistent with other components.n  [Process] In edge cases `getcwd()` can return `false`, then `proc_open()` should get `null` to use default value (the working dir of the current PHP process)n  Fix version_compare() calls for PHP 5.5.n  Handle the deprecation of IntlDateFormatter::setTimeZoneId() in PHP 5.5.n  removed the .gitattributes files (closes #6605, reverts #5674)n  [HttpKernel] Clarify misleading comment in ExceptionListenernnConflicts:ntsrc/Symfony/Bundle/WebProfilerBundle/Resources/views/Profiler/toolbar_style.html.twigntsrc/Symfony/Component/Form/Tests/Extension/Core/Type/DateTimeTypeTest.phpntsrc/Symfony/Component/Form/Tests/Extension/Core/Type/TimeTypeTest.phpntsrc/Symfony/Component/Form/Tests/Util/PropertyPathTest.phpntsrc/Symfony/Component/HttpKernel/Profiler/RedisProfilerStorage.phpntsrc/Symfony/Component/Process/Process.php",
            "Merge branch '2.1'nn* 2.1:n  [Yaml] fixed default valuen  Added YamlDumper::setIndentation() method to allow a custom indentation level of nested nodes.n  added a way to enable/disable object support when parsing/dumpingn  added a way to enable/disable PHP support when parsing a YAML input via Yaml::parse()n  fixed CSn  [Process] Fix docblocks, remove `return` from `PhpProcess#start()` as parent returns nothing, cleaned up `ExecutableFinder`n  fixes a bug when output/error output contains a % charactern  [Console] fixed input bug when the value of an option is empty (closes #6649, closes #6689)n  [Profiler] [Redis] Fix sort of profiler rows.n  Fix version_compare() calls for PHP 5.5.n  Removed underscores from test method names to be consistent with other components.n  [Process] In edge cases `getcwd()` can return `false`, then `proc_open()` should get `null` to use default value (the working dir of the current PHP process)n  Fix version_compare() calls for PHP 5.5.n  Handle the deprecation of IntlDateFormatter::setTimeZoneId() in PHP 5.5.n  removed the .gitattributes files (closes #6605, reverts #5674)n  [HttpKernel] Clarify misleading comment in ExceptionListenernnConflicts:ntsrc/Symfony/Bundle/WebProfilerBundle/Resources/views/Profiler/toolbar_style.html.twigntsrc/Symfony/Component/Form/Tests/Extension/Core/Type/DateTimeTypeTest.phpntsrc/Symfony/Component/Form/Tests/Extension/Core/Type/TimeTypeTest.phpntsrc/Symfony/Component/Form/Tests/Util/PropertyPathTest.phpntsrc/Symfony/Component/HttpKernel/Profiler/RedisProfilerStorage.phpntsrc/Symfony/Component/Process/Process.php"
        ]
    },
    "9713017": {
        "title": "Finder doesn't respect valid glob syntax in name()",
        "body": "It would seem the Finder component does not respect an otherwise valid glob pattern in the name() method, for example:rnrn```rn->name('*.{jpg,jpeg,gif,png}');rn```rn",
        "comments": [
            "For now, this only works for PhpAdapter which [converts the glob to a regexp](https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Finder/Iterator/FilenameFilterIterator.php#L64). nnBoth Bsd and Gnu adapters are broken since they use `find` command which doesn't support [globs in patterns passed to -name](https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Finder/Adapter/AbstractFindAdapter.php#L171). nnQuote from the [find manual](http://unixhelp.ed.ac.uk/CGI/man-cgi?find):nn> -name patternn>     Base of file name (the path with the leading directories removed) matches shell pattern pattern.n>     The metacharacters ('_',  '?',  and '[]')  match  a '.' at the start of the base name (this is a change n>     in findutils-4.2.2; see section STANDARDS CONFORMANCE below).n>     To ignore a directory and the files under it, use -prune; see an example in the description of -path.n>     *_Braces  are  not  recognised  as being  special, despite the fact that some shells including Bashn>     imbue braces with a special meaning in shell patterns.** The filename matching is performed withn>     the use of the fnmatch(3) library function. **Don't forget to enclose the pattern in quotes  in  ordern>     to protect it from expansion by the shell.**n",
            "Would it be possible to force using the PhpAdapter in this specific case?n",
            "it just seems strange that it says it supports glob, but only partially, and that you would need to write a hard to read regex or chain multiple calls for things like `->name('*.jpg')->name-('*.jpeg')` when something cleaner like `->name('*.{jpg,jpeg}') could do the job. Just my 2 cents!n",
            "@jackmcdade we agree with you, no question about it. The thing is that when you run your code, the finder uses an adapter depending on your platform (to get the best performance possible). The problem is that `PhpAdapter` supports glob but apparently, the find command does not. So my proposal is that when we detect that the developer is using a glob that is not supported by the best adapter, we automatically fallback to PhpAdapter. So, nothing on your side, everything would be done on our side.n",
            "Ahh, I follow you now. Is there a way to force the adapter on my side?n",
            "Yes, you can (not tested):nn``` phpnnuse SymfonyComponentFinderAdapterPhpAdapter;nuse SymfonyComponentFinderFinder;nn$finder = new Finder();n$finder->removeAdapters();n$finder->addAdapter(new PhpAdapter());n```n",
            "Fantastic. Thanks for answering an undoubtedly noobish Symfony question.n",
            "@fabpot another option would be to convert glob to a regex. I'm not sure if that's gonna work, I'll check what's possible.n",
            "@jakzal I agree with you, these complex globs could just be turned into regexs.n"
        ],
        "commits": [
            "merged branch jfsimon/issue-6586 (PR #7190)nnThis PR was squashed before being merged into the master branch (closes #7190).nnCommitsn-------nn6e0d93e [Finder] Adds expandable globs support to shell adaptersnnDiscussionn----------nn[Finder] Adds expandable globs support to shell adaptersnnAs expandable globs, i mean glob following `*.{a,b}` syntax.nn| Q             | An| ------------- | ---n| Bug fix?      | yesn| New feature?  | non| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #6586",
            "merged branch jfsimon/issue-6586 (PR #7190)nnThis PR was submitted for the master branch but it was merged into the 2.2 branch instead (closes #7190).nnCommitsn-------nnb2e9bdb [Finder] Adds expandable globs support to shell adaptersnnDiscussionn----------nn[Finder] Adds expandable globs support to shell adaptersnnAs expandable globs, i mean glob following `*.{a,b}` syntax.nn| Q             | An| ------------- | ---n| Bug fix?      | yesn| New feature?  | non| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #6586"
        ]
    },
    "9649916": {
        "title": "[Form] Make exception handling consistent with other components",
        "body": "The form component currently implements exceptions differently than in other components. This should be made consistent.",
        "comments": [
            "@bschussek Is it resolved or something else should be done?n",
            "ping @bschussek does anybody work on this? or I can get it?n"
        ],
        "commits": [
            "[Form] Make exception handling consistent with other components refs #6544",
            "merged branch Olden/issue_6544 (PR #7706)nnThis PR was merged into the master branch.nnDiscussionn----------nn[Form] Make exception handling consistent with other componentsnn| Q             | An| ------------- | ---n| Bug fix?      | non| New feature?  | non| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #6544n| License       | MITnnCommitsn-------nnbf9382e [Form] Make exception handling consistent with other components"
        ]
    },
    "9245942": {
        "title": "Better naming for ContainerBuilder::findTaggedServiceIds",
        "body": "The name of ContainerBuilder::findTaggedServiceIds does not really fit it's return value. Instead of an array of service IDs (which would be my first guess for the method's return type), it returns and array of tags. The returned array's keys are the promised service IDs. rnrnMaybe this method's name should be changed to ContainerBuilder::findTagsByName or something similar, which reflects the method's purpose better.rnrnIn the same context: doen't the method Definition::getTag return all tags of the definition with a certain name? I don't want to be picky, but I would like these method names to give actual hints about their return values.",
        "comments": [
            "Renaming methods is not an option, but creating new ones and keeping the old ones as aliases would be good enough (the old method would be deprecated and removed in Symfony 3.0).n",
            "After looking at that again, I've decided to close this one as to keep BC would mean to create yet another interface.n"
        ],
        "commits": []
    },
    "8610435": {
        "title": "BinaryFileResponse - hashing strategy",
        "body": "Currently the hashing system in the new BinaryFileResponse has known limitations. It will be greatly beneficial if these are addressed by offering means to overcome these.nnhttps://github.com/symfony/symfony/commit/7322696378e96a812c78c1f23b80606b7fb06ac4#commitcomment-2193066nnAn option is to simplify the logic for hashing, by separating the hashing from the setting of the entity tag and from the file-input. This can be done simply by putting sha1_file() in a different method, that can be easily overridden, or by allowing a more OO approach by injecting the hashing strategy. The latter might be a bit more bulky but allows the most flexibility while maintaining clean separation of concerns.",
        "comments": [],
        "commits": [
            "merged branch povilas/issue_6101 (PR #6708)nnThis PR was submitted for the master branch but it was merged into the 2.2 branch instead (closes #6708).nnCommitsn-------nn90a3e7a [HttpFoundation] moved file hash calculation to own methodnnDiscussionn----------nn[HttpFoundation] moved file hash calculation to own methodnnBug fix: nonFeature addition: nonBackwards compatibility break: nonSymfony2 tests pass: yesnTodo: -nFixes the following tickets: #6101nLicense of the code: MITnDocumentation PR: -nnThis commit adds ability to change default hashing implementation by extending BinaryFileResponse.nn---------------------------------------------------------------------------nnby stloyd at 2013-01-11T16:23:30ZnnIMO it's looks a like overkill...nn---------------------------------------------------------------------------nnby lsmith77 at 2013-01-11T16:39:33Znnhmm yeah .. seems like something that could be done via inheritance ..nn---------------------------------------------------------------------------nnby Tobion at 2013-01-11T17:44:29ZnnI agree, overriting the method is much simpler solution.nn---------------------------------------------------------------------------nnby jalliot at 2013-01-11T18:16:04ZnnBesides the `$autoetag` variable is false by default so you have to explicitly enable this behavior...nn---------------------------------------------------------------------------nnby povilas at 2013-01-11T18:39:31Znn@lsmith77, @Tobion,  you mean, just move hash calculation to separate protected method, and when you want to change hashing you must extend BinaryFileResponse?"
        ]
    },
    "8419747": {
        "title": "Deprecated: IntlDateFormatter::setTimeZoneId():",
        "body": "As i am playing with 5.5.0 alpha1 and a sf application i get this.nn```nDeprecated: IntlDateFormatter::setTimeZoneId(): Use datefmt_set_timezone() instead, which also accepts a plain time zone identifier and for which this function is now an alias in /Users/Henrik/Work/myapp/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/Type/DateType.php line 262n```",
        "comments": [
            "There is one problem with this change, that this function does not exists below 5.5.0alpha1n",
            "@fabpot This can be closed as #6552 was merged.n",
            "Same issue for 5.4.15 (on 2.3)nn```nDeprecated: IntlDateFormatter::setTimeZoneId(): Use datefmt_set_timezone() instead, which also accepts a plain time zone identifier and for which this function is now an alias in /Users/lizjulien/Work/myapp/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/Type/DateType.php on line 271n```n",
            "I'm having this issue on 5.4.17 with Symfony 2.3.n",
            "This is weird. The method is deprecated as of 5.5.0. there is no reason to get this message on 5.4.17 (and the replacement method does not exist in 5.4)n",
            "I think it is the intl version?  I am using 3.0.0:nnhttps://github.com/cataphract/PECL-intl/blob/5cb0ae71d89c0ab9032f8f79657e29ac4300c58f/tests/dateformat_setTimeZoneID_deprecation.phpt#L21n",
            "ah, getting intl from pecl instead of compiling it with PHP ? then you can indeed get a more recent version. nReopening this issuen",
            "I also installed intl with pecl, so it seems I got in the same trouble like kbond. Any ideas how can I fix it now? thxn",
            "We're also seeing this issue on a FreeBSD 9.1 machine with Symfony 2.3.2, PHP 5.4.17 and pecl-intl 3.0.0n",
            "Confirmed issue here.n",
            "I've also seen this:nn```n[2013-09-10 10:08:38] request.CRITICAL: Uncaught PHP Exception PHPUnit_Framework_Error_Deprecated: IntlDateFormatter::setTimeZoneId(): Use datefmt_set_timezone() instead, which also accepts a plain time zone identifier and for which this function is now an alias at [...]vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/Type/DateType.php line 253n```nnAnd the PHP info:nn```n$ php -inphpinfo()nPHP Version => 5.4.17nnSystem => FreeBSD [...] 9.1-RELEASE-p3 FreeBSD 9.1-RELEASE-p3 #0: Mon Apr 29 18:27:25 UTC 2013     root@amd64-builder.daemonology.net:/usr/obj/usr/src/sys/GENERIC amd64nBuild Date => Aug 26 2013 14:33:57nConfigure Command =>  './configure'  '--with-layout=GNU' '--localstatedir=/var' '--with-config-file-scan-dir=/usr/local/etc/php' '--disable-all' '--enable-libxml' '--enable-mysqlnd' '--with-libxml-dir=/usr/local' '--with-pcre-regex=/usr/local' '--with-zlib-dir=/usr' '--program-prefix=' '--disable-cgi' '--with-apxs2=/usr/local/sbin/apxs' '--with-regex=php' '--with-zend-vm=CALL' '--prefix=/usr/local' '--mandir=/usr/local/man' '--infodir=/usr/local/info/' '--build=amd64-portbld-freebsd9.1'n```nnNote: I don't see this warning on my PHP 5.4.19 log.n",
            "Anyone willing to make a PR to fix that? Apparently, we just need to check the version of intl (>=3.0.0) instead of the version of PHP (>=5.0.0) in our if statements.n",
            "The Travis CI build failed https://travis-ci.org/symfony/symfony/builds/11272906nnWould it not be better to check the version of php in addition to intl ?n",
            "what needs to be checked is the version of the Intl extension, not the ICU version (which will always be greater than `3.0.0`)n",
            "I think this should do the trick.nn$intl = new ReflectionExtension('intl');n$IntlVersion = $intl->getVersion();nnSorry, that I can't commit it right now, anyway I hope it helps..n",
            "However, the stub should also be supported (which cannot be done through `new ReflectionExtension('intl')`). Maybe the simpler solution is to use a `method_exists` checkn",
            "That should solve the specific case, something else that might make sense in the long-term is putting the version as a static public method in https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Intl/Intl.php nnNote: I don't work on the SF2 source code so don't take this as direction from someone who does.n",
            "These changes will fail to fix the issue when someone has updated intl manually from PECL. The version number for the pecl version is 'PECL-3.0.0'. Because of that prefix, version_compare will not recognize it as equal to or greater than '3.0.0', which renders all this rather moot, as if the user has intl v3 from PHP 5.5, the old test would have worked, but if they manually updated intl without upgrading PHP, the new test doesn't correctly recognize the version.n",
            "@kalzekdor Well crap, I just got hit with the same thing =/n",
            "Here, too. I'm a year late to this party but don't see the patch mentioned anywhere...n",
            "I know this issue is closed, and this resolution works, but wouldn't it be better to check for the existence of the setTimeZone() method, like so?nnif (method_exists($formatter, 'setTimeZone')) {n$formatter->setTimeZone($timezone);n} else {n$formatter->setTimeZoneId($timezone);n}n",
            "@jeffreydwalter how is it implemented right now?n",
            "if (version_compare($intlVersion, '3.0.0', '>=')) {n            $formatter->setTimeZone('UTC');n        } else {n            $formatter->setTimeZoneId('UTC');n        }n",
            "@jeffreydwalter  hmm.. which version are you using?n",
            "Nevermind, looks like that code has changed in current versions.nn@jeffreydwalter https://github.com/jeffreydwalter hmm.. which version arenyou using?nnu2014nReply to this email directly or view it on GitHubnhttps://github.com/symfony/symfony/issues/6029#issuecomment-168337444.n"
        ],
        "commits": [
            "Fix #6029 : check the version of intl instead of the version of PHP",
            "Fix #6029 : check the version of intl instead of the version of PHP - revert the whitespaces",
            "Fix #6029 : check the version of intl instead of the version of PHP - use intl version, not icu version",
            "merged branch dropfen/master (PR #9015)nnThis PR was submitted for the master branch but it was merged into the 2.2 branch instead (closes #9015).nnDiscussionn----------nnFix #6029 : Use setTimeZone if this method exists.nnThe php version is not a critical factor to choose the method, but we have to use setTimeZone, if it exists.nnCommitsn-------nn7d84cd7 Use setTimeZone if this method exists."
        ]
    },
    "8200475": {
        "title": "[Translation] XLIFF implementation broken by design",
        "body": "We are having an issue with the way the xliff format is implemented inside symfony2. rnThis was brought here before by @schmittjoh in #2252 but was closed down.rnrnI'm proposing to do a BC break here and change the XLIFF to a format where translation tools are actually useful. rne.g. Because we use keys as our translation source the tools like www.getlocalization.com show those keys as a source to be translated which according to the xliff specification is the right thing to do.rnrn```xmlrn<trans-unit id=<id> resname=<resname>>rn  <source>Original string</source>rn  <target>Target language translation</target>rn</trans-unit>rn```rnrnWhere the < id > is somesort of unique id e.g hash of  < resname >, The < resname > is set to translation key or Original string in case that translation is not based on the keys and the < source > tag contains the string in language the translations will be made from.",
        "comments": [
            "I would implement a new Xliff class instead of breaking the existing onen",
            "@mvrhov Are you willing to work on a new Xliff loader? As @beberlei mentioned, I think we need to keep the current one for BC reasons, but a new one would be a good idea.n",
            "Unfortunately I'm fully booked for the rest of the year. And I doubt I'm going to make it for January 6th feature freeze. nSo if anybody else is going to take it until I have more time please let me know. nIMO this issue could be marked as an easy pick.n",
            "What would be the desired approach? Fix this for 2.2 or skip it for 2.3? Also, which option is better:n- new loader / dumpern- BC break existing ones?nnThanks!n",
            "@dlsniper We need to keep the existing ones and create new ones along side.n"
        ],
        "commits": [
            "merged branch jfsimon/issue-5940 (PR #7304)nnThis PR was squashed before being merged into the 2.1 branch (closes #7304).nnCommitsn-------nn5bc30bb [Translation] added xliff loader/dumper with resname supportnnDiscussionn----------nn[Translation] added xliff loader/dumper with resname supportnn| Q             | An| ------------- | ---n| Bug fix?      | non| New feature?  | yesn| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | #5940nn---------------------------------------------------------------------------nnby jfsimon at 2013-03-08T15:49:18Znn@Tobion what do you think of `XliffFileWithResnameDumper` and `XliffFileWithResnameLoader`?nn---------------------------------------------------------------------------nnby robinduval at 2013-03-08T15:49:58Znn:100: great idea !nn---------------------------------------------------------------------------nnby lizjulien at 2013-03-08T15:51:45Znn:star2: better.nn---------------------------------------------------------------------------nnby saro0h at 2013-03-08T15:52:50Znn:+1:  Can't be worse than the previous onenn---------------------------------------------------------------------------nnby dxb at 2013-03-08T16:00:32Znn+1nn---------------------------------------------------------------------------nnby Tobion at 2013-03-08T16:07:59Znn@jfsimon yes the name make sense. It is not possible to add this feature without BC break?nAnd if not, why not simply add an option/enable method to the existing classes. Having new classes for this seems awkward to me.nn---------------------------------------------------------------------------nnby jfsimon at 2013-03-08T16:17:44Znn@Tobion I totaly agree with you, but this has been discussed in #5940.nDoes the presence of the `resname` attribute in the `trans-unit` tags represent a BC break?nWould opening another PR with this solution be a good idea?nn---------------------------------------------------------------------------nnby stof at 2013-03-08T17:01:00ZnnYour XliffFileWithResnameLoader is able to load all files supported by XliffFileLoader so IMO you don't need to add a new class.nn---------------------------------------------------------------------------nnby jfsimon at 2013-03-08T18:21:32Znn@stof would the `resname` attribute addition in the dumped XLIFF be considered as a BC break?nn---------------------------------------------------------------------------nnby jfsimon at 2013-03-09T13:16:32Znn@stof done.n@mvrhov done."
        ]
    },
    "7563119": {
        "title": "[Console] [Windows] recuperation of the console height and width for non english OS",
        "body": "[here](https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Console/Application.php#L853) and [here](https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Console/Application.php#L875), a `exec(mode CON)` is made in order to parse line and column number of the console from Windows command.rnrnThis only work on english Windows.rnrnFor example with french Windows: rn```rn>php -r exec('MODE CON', $output);var_dump($output);rnarray(9) {rn  [0]=>  string(0) rn  [1]=>  string(27) Statut du pu00e9riphu00e9rique CON:rn  [2]=>  string(27) ---------------------------rn  [3]=>  string(26)     Lignesu00a0:          9999rn  [4]=>  string(24)     Colonnesu00a0:        80rn  [5]=>  string(24)     Vitesse clavieru00a0: 31rn  [6]=>  string(23)     Du00e9lai clavieru00a0:   1rn  [7]=>  string(25)     Page de codesu00a0:   437rn  [8]=>  string(0) rn}rn```rnCouldn't find yet a nice and universal way to do it yet. If anyone has an idea :)",
        "comments": [
            "I gues taking line 3/4 and then grabbing the d's at the end of the line would do. Kinda hackish but not much more than the current solution.n"
        ],
        "commits": [
            "[Console] Add support for parsing terminal width/height on localized windows, fixes #5742",
            "merged branch Seldaek/consolfix (PR #6330)nnThis PR was merged into the 2.1 branch.nnCommitsn-------nnd2231d8 [Console] Add support for parsing terminal width/height on localized windows, fixes #5742nnDiscussionn----------nn[Console] Add support for parsing terminal width/height on localized windowsnnFixes #5742nn---------------------------------------------------------------------------nnby pborreli at 2012-12-13T17:44:53Znnthanks",
            "Merge branch '2.1'nn* 2.1:n  [Console] Add support for parsing terminal width/height on localized windows, fixes #5742n  [Form] Fixed treatment of countables and traversables in Form::isEmpty()n  refactor ControllerNameParsern  [Form] Fixed FileType not to throw an exception when bound emptyn  - Test undefined index #n  Maintain array structuren  Check if key # is defined in $valuen  Update src/Symfony/Component/Validator/Resources/translations/validators.pl.xlf",
            "Merge branch '2.1'nn* 2.1:n  [Console] Add support for parsing terminal width/height on localized windows, fixes #5742n  [Form] Fixed treatment of countables and traversables in Form::isEmpty()n  refactor ControllerNameParsern  [Form] Fixed FileType not to throw an exception when bound emptyn  - Test undefined index #n  Maintain array structuren  Check if key # is defined in $valuen  Update src/Symfony/Component/Validator/Resources/translations/validators.pl.xlf"
        ]
    },
    "7409912": {
        "title": "[2.1][Security] Check_path and logout fails on non latin path",
        "body": "RuntimeException: You must activate the logout in your security firewall configurationrnrnIn example:rn``` yamlrn# app/config/security.ymlrnsecurity:rn    firewalls:rn        main:rn            form_login:rnrn                # this is okrn                login_path:  /u0432u0445u043eu0434 rnrn                # check_path failsrn                check_path:  /u0430u0432u0442u043eu0440u0438u0437u0430u0446u0438u044frn            logout:rn                # logout path failsrn                path:   /u0432u044bu0445u043eu0434 rn```rnrnAll this happens because of SymfonyComponentSecurityHttpHttpUtils::checkRequestPath request query string not url decodedrnrn``` phprn    public function checkRequestPath(Request $request, $path)rn    {rn        if ('/' !== $path[0]) {rn            try {rn                $parameters = $this->urlMatcher->match($request->getPathInfo());rnrn                return $path === $parameters['_route'];rn            } catch (MethodNotAllowedException $e) {rn                return false;rn            } catch (ResourceNotFoundException $e) {rn                return false;rn            }rn        }rnrn        /**rn        * var_dump($request->getPathInfo()) ;rn        * var_dump($path);rn        * (/%d0%b2%d1%8b%d1%85%d0%be%d0%b4 === $request->getPathInfo()) truern        * ($path === urldecode($request->getPathInfo())) truern        */rn        return $path === $request->getPathInfo();rn    }rn```",
        "comments": [
            "Yes, seems right. Will you provide a PR with a test? But please use `rawurldecode`.n",
            "Yes. Later. Its not critical.n",
            "Hi, is this still a problem given the latest Routing changes? Thanks!n",
            "No, It's still present.n"
        ],
        "commits": [
            "Merge branch '2.1'nn* 2.1:n  fixed CSn  fixed CSn  [Security] fixed path info encoding (closes #6040, closes #5695)n  [HttpFoundation] added some tests for the previous merge and removed dead code (closes #6037)n  Improved Cache-Control header when no-cache is sentn  removed unneeded commentn  Fix to allow null values in labels arrayn  fix date in changelogn  removed the Travis icon (as this is not stable enough -- many false positive, closes #6186)n  Revert merged branch gajdaw/finder_splfileinfo_fpassthu (PR #4751) (closes #6224)n  Fixed a typon  Fixed: HeaderBag::parseCacheControl() not parsing quoted zero correctlyn  [Form] Fix const inside an anonymous functionn  [Config] Loader::import must return imported datan  [DoctrineBridge] Fixed caching in DoctrineType when choices or preferred_choices is passedn  [Form] Fixed the default value of format in DateType to DateType::DEFAULT_FORMAT if widget is not single_textn  [HttpFoundation] fixed a small regressionnnConflicts:ntsrc/Symfony/Component/HttpFoundation/Tests/Session/Storage/Handler/MongoDbSessionHandlerTest.php"
        ]
    },
    "7344101": {
        "title": "[Console] List available commands in the help command",
        "body": "The help command should at least mention the list command (only if it's enabled though), or just simply list available commands when called on the top level `console --help` (not `console foo --help`). rnrnSee composer/composer#1143",
        "comments": [
            "Not sure if I am missing something but when I run app/console help this appears in the content:nnHelp:n The help command displays help for a given command:nn   php ./app/console help listnn You can also output the help as XML by using the --xml option:nn   php ./app/console help --xml listnnIs this not enough?n",
            "@pgodel Thies does not tell you that running `app/console list` will show you the available commands.n",
            "I'm working on it (currently trying to add tests).n",
            "Oh, @denderello was on it too yesterday, with a slightly different approach though, he should push his code.n",
            "I updated the tests, but they keep failing for some reason and I can't figure out why...nAs anyone any idea on what's going on?nnExample :nn```n2) SymfonyComponentConsoleTestsApplicationTest::testRunn->run() runs the help command if --help is passednFailed asserting that two strings are equal.n--- Expectedn+++ Actualn@@ @@n  The help command displays help for a given command:n-n+ n    php app/console help listn-n+ n  You can also output the help as XML by using the --xml option:n-n+ n    php app/console help --xml listn-n+ n  To display the list of available commands, please use the list command.nn 'nn./symfony/src/Symfony/Component/Console/Tests/ApplicationTest.php:436n```n",
            "End of lines are differents (windows style vs unix typically) or one space ..n",
            "Thanks! I was struggling on end of lines and didn't thought of the extra space in empty lines (which are removed automatically by my IDE).nFixed! The PR can be code reviewed :) .n",
            "I didn't had the time to finish my approach yesterday. :/nnAm 11.10.2012 um 10:53 schrieb Jordi Boggiano notifications@github.com:nn> Oh, @denderello was on it too yesterday, with a slightly different approach though, he should push his code.n> n> u2014n> Reply to this email directly or view it on GitHub.n",
            "I just stumbled over this issue when using Composer and found my way here. I do not think it is properly resolved yet.nnI often do not sit in front of my screen to study each command's help output exactly, but am a lazy addict of some patterns. So it took me a while to realize that `composer help` does not list the commands (duh!) as for example `git help` does.nnI propose this change:nnDo not default `composer help` to mean `composer help help`, but let it be an alias of `composer list`. It is the better overview and also lists the `help` command among the other commands. I argue this would lead to a better UX.n",
            "So basically merge help and list commands?n"
        ],
        "commits": [
            "merged branch gnugat/i5669-console-list-in-help-command (PR #5725)nnThis PR was squashed before being merged into the master branch (closes #5725).nnCommitsn-------nnd6be69a [i5669][Console] Adding a note about the list command in the help commandnnDiscussionn----------nn[i5669][Console] Adding a note about the list command in the help commandnnIn order to fix the issue #5669.nn---------------------------------------------------------------------------nnby gnugat at 2012-10-11T09:45:45ZnnThis PR is ready for a first code review.nn---------------------------------------------------------------------------nnby stof at 2012-10-13T22:25:15Znn@fabpot :+1:"
        ]
    },
    "6841472": {
        "title": "JsonResponse can not be used to return an empty array",
        "body": "I have a REST API that is used for retrieving a list of objects. From our perspective this API could quite legitimately return no matching results (ie an empty array).nnJsonResponse force converts an empty array to an ArrayObject which then gets output as an empty object giving us the wrong results on the client side. Nothing in the JSON spec mandates that the top level element can not be an empty array as such this looks like a bug in the Symfony JsonResponse object.nnThe offending code is viewable [here](https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/JsonResponse.php#L80). Fixing it should just be a matter of removing that if statement.",
        "comments": [
            "There are two reasons to enforce objects at the top level of the JSON responses:n- http://haacked.com/archive/2009/06/25/json-hijacking.aspxn- If you always return something like `{items: []}`, the day you need to return the items + some other stuff (total count for paging, related link, anything really)  you can just add it without breaking the API: `{items:[], stuff:woo}`.n",
            "- The offending line of code in JsonResponse will do nothing to prevent that. It ONLY changes a top level array to an object when the array is empty.n- So a line of code that effectively cripples the JsonResponse from being useful is okay because developers can change the API to something that may not conform to what they need to implement against or want? seriously?n",
            "I was just explaining why it's like that. Regarding the first point you're right though, it should be enforced always or never. And given that if you follow my second point you'd never need this feature anyway - I'd tend to agree with you that this should just be scrapped altogether.n",
            "so big and popular framework and so stu.. bad bug =)n"
        ],
        "commits": [
            "[HttpFoundation] Remove special handling of empty arrays, fixes #5506",
            "merged branch Seldaek/jsonresp (PR #6635)nnThis PR was submitted for the 2.1 branch but it was merged into the master branch instead (closes #6635).nnCommitsn-------nn26aafff [HttpFoundation] Remove special handling of empty arrays, fixes #5506nnDiscussionn----------nn[HttpFoundation] Remove special handling of empty arrays, fixes #5506nnBug fix: yesnFeature addition: nonBackwards compatibility break: tiny/nonSymfony2 tests pass: yesnFixes the following tickets: #5506nLicense of the code: MITnnSee the linked issue for details, IMO it should be removed because it's not consistently applied and just a WTF for people.nn---------------------------------------------------------------------------nnby vicb at 2013-01-09T11:11:06Znn:+1:, could you please update the changelog with the BC break ?nn---------------------------------------------------------------------------nnby Seldaek at 2013-01-09T11:16:44ZnnIf we really consider this as a BC break and document it as such then I guess it should be 2.2 only and not 2.1. @fabpot?nn---------------------------------------------------------------------------nnby vicb at 2013-01-09T11:28:16ZnnIMO there is no such things as tiny BC but BCs are yes/no.nn---------------------------------------------------------------------------nnby fabpot at 2013-01-09T15:09:18ZnnLet's do it in master only and add a note in the CHANGELOG about the BC break.",
            "merged branch davedevelopment/fix-json-test (PR #608)nnThis PR was merged into the master branch.nnCommitsn-------nn48ec9b1 Make test ignore JSON semanticsnnDiscussionn----------nnMake test ignore JSON semanticsnnOne fix for Symfony 2.2, related to #607 and symfony/symfony#5506"
        ]
    },
    "6371759": {
        "title": "the help of the command does not display global options",
        "body": "Options available from the Application itself don't appear when displaying the help of a command by adding ``--help``. Because of this, users need to be aware of the component implementation to know that more options may be available and that they need to call ``app/console help`` without specifying a command name to show them.nnI suggest adding a section ``Global options`` in the help output to show them too, keeping them isolated from command-specific options (btw, weren't they displayed in the list at some point ?)",
        "comments": [],
        "commits": [
            "[Console] fixed #5316",
            "merged branch marfillaster/help-inheritance (PR #5676)nnThis PR was merged into the master branch.nnCommitsn-------nn63b480e [Console] fixed #5316nnDiscussionn----------nn[Console] [Enhancement] fixes #5316nnBug fix: nonFeature addition: yesnBackwards compatibility break: nonSymfony2 tests pass: yesnFixes the following tickets: #5316nn---------------------------------------------------------------------------nnby marfillaster at 2012-10-05T02:14:55ZnnI simplified the change. And the reason why tests for text help do not need changes is because in CommandTest, the commands are executed first which also merges app definition  before invoking asText or asXml  . While in ApplicationTest, commands are never run therefore app definition is not being merged.nn---------------------------------------------------------------------------nnby stof at 2012-10-13T23:13:52Znn@fabpot This looks ready to me. Anything left ?"
        ]
    },
    "5776550": {
        "title": "Wrong display in the timeline when 2 listeners have the same short class name",
        "body": "When 2 listeners have the same short class name, the timeline display them in the same row (as if it was the same listener called twice) instead of using 2 rows.nnI saw it with AsseticBundle and NelmioApiDocBundle which have both a RequestListener (you may need to change the threshold to see them in the timeline as they are faster than 1ms)",
        "comments": [],
        "commits": [
            "displayed the full event listener names to avoid name collisions (closes #5019)",
            "merged branch fabpot/profiler-listeners (PR #5963)nnThis PR was merged into the master branch.nnCommitsn-------nna288521 displayed the full event listener names to avoid name collisions (closes #5019)nnDiscussionn----------nndisplayed the full event listener names to avoid name collisions (closes #5019)nn---------------------------------------------------------------------------nnby stof at 2012-11-09T23:14:41Znn:+1:",
            "displayed the full event listener names to avoid name collisions (closes #5019)"
        ]
    },
    "5397810": {
        "title": "onFlush events with 2 or more dbal connections throw ErrorExceptions",
        "body": "nIn configuration's with 2 connections, onFlush events written to `(appDevDebugProject|appProd)Container.php` contain calls to addEventListener. The method signature for the 2nd connection is incorrect. Changing the order the connection's are specified produces the incorrect signature on whatever happens to be the 2nd connection.nnCompare the signatures for MysqlConnectionService and PlatConnectionService:nnn`appDevDebugProjectContainer.php`n```phpnprotected function getDoctrine_Dbal_MysqlConnectionService()n{n    $c->addEventListener(array(0 => 'onFlush'), $this->get('nrc_notice.notice.notice_listener'));n}nnnprotected function getDoctrine_Dbal_PlatConnectionService()n{n    $c->addEventListener(array(0 => array(0 => 'onFlush')), $this->get('nrc_notice.notice.notice_listener'));n}n```nnError Messagen```textnErrorException: Warning: Illegal offset type in /Applications/MAMP/htdocs/checknet.local/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/ContainerAwareEventManager.php line 115nnin /Applications/MAMP/htdocs/checknet.local/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/ContainerAwareEventManager.php line 115nat ErrorHandler->handle('2', 'Illegal offset type', '/Applications/MAMP/htdocs/checknet.local/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/ContainerAwareEventManager.php', '115', array('events' => array(array('onFlush')), 'listener' => object(NoticeListener), 'hash' => '000000000bfa891500000000295a660c', 'event' => array('onFlush'))) in /Applications/MAMP/htdocs/checknet.local/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/ContainerAwareEventManager.php line 115nat ContainerAwareEventManager->addEventListener(array(array('onFlush')), object(NoticeListener)) in /Applications/MAMP/htdocs/checknet.local/app/cache/dev/appDevDebugProjectContainer.php line 272nat appDevDebugProjectContainer->getDoctrine_Dbal_PlatConnectionService() in /Applications/MAMP/htdocs/checknet.local/app/bootstrap.php.cache line 194nat Container->get('doctrine.dbal.plat_connection') in /Applications/MAMP/htdocs/checknet.local/app/cache/dev/appDevDebugProjectContainer.php line 370nat appDevDebugProjectContainer->getDoctrine_Orm_PlatEntityManagerService() in /Applications/MAMP/htdocs/checknet.local/app/bootstrap.php.cache line 194nat Container->get('doctrine.orm.plat_entity_manager') in /Applications/MAMP/htdocs/checknet.local/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/ManagerRegistry.php line 35n```nnMy `config.yml`n```ymlndoctrine:n    dbal:n        default_connection: mysqln        connections:n            mysql:n                 driver: etc...n            plat:n                 driver_class:   etc...n```nnMy `services.yml`n```ymlnservices:n  nrc_notice.notice.notice_listener:n     class: SomeListenerClassn     arguments:n       container: '@service_container'n     tags:n        - { name: kernel.event_listener, event: nrc_notice.notice.change.approved, method: onNotify }n```",
        "comments": [
            "Similar pattern occurs while adding more connections:nn``` phpnnprotected function getDoctrine_Dbal_MysqlConnectionService()n{n    $c->addEventListener(array(0 => 'onFlush'), $this->get('nrc_notice.notice.notice_listener'));n}nnprotected function getDoctrine_Dbal_Mysql2ConnectionService()n{n    $c->addEventListener(array(0 => array(0 => 'onFlush')), $this->get('nrc_notice.notice.notice_listener'));n}nnprotected function getDoctrine_Dbal_PlatConnectionService()n{n    $c->addEventListener(array(0 => array(0 => array(0 => 'onFlush'))), $this->get('nrc_notice.notice.notice_listener'));n}n```n",
            "I also ran into what seems to be this same issue with multiple `doctrine_mongodb` connectionsn",
            "@trooney Can you re-open this issue on the [DoctrineBundle](https://github.com/doctrine/DoctrineBundle)? It seems to be a configuration issue. nn@tystr Can you open an issue on the [DoctrineMongoDBBundle](https://github.com/doctrine/DoctrineMongoDBBundle)?n",
            "@asm89 the compiler pass is in the Symfony bridge (to share the code between all bundles) so this issue tracker was the right place. Reopeningn",
            "Ah, my bad. I'm looking into it.n",
            "@trooney @tystr Can you too check that the issue is fixed now? :)n",
            "Looks good to me! n",
            "yep, looks good to me as well n"
        ],
        "commits": [
            "[DoctrineBridge] Fix arguments when registering event listeners on multiple connectionsnnFixes #4712",
            "merged branch asm89/issue-4712 (PR #4896)nnCommitsn-------nne97cd61 [DoctrineBridge] Fix arguments when registering event listeners on multiple connectionsn0bf3c06 [DoctrineBridge] Failing testcase for event listeners and multiple connectionsnnDiscussionn----------nn[DoctrineBridge] Fix arguments when registering event listeners on multiple connectionsnnBug fix: yesnFeature addition: nonBackwards compatibility break: nonSymfony2 tests pass: [![Build Status](https://secure.travis-ci.org/asm89/symfony.png?branch=issue-4712)](http://travis-ci.org/asm89/symfony)nFixes the following tickets: #4712nLicense of the code: MIT"
        ]
    },
    "5330186": {
        "title": "HTTP/1.0 and caching",
        "body": "Symfony sends ```cache-control: no-cache``` header by default. This make HTTP/1.1-compatible client and (correctly configured) reverse proxy not to cache the response. nBut if a client supports only HTTP/1.0 protocol, the ```cache-control``` header will be ignored. To prevent caching page in HTTP/1.0 protocol, Symfony should send also Expires or Pragma headers by default.",
        "comments": [
            "I don't think 'always' using this is wise, as there are some problems with using this method on HTTP1.1nInstead we should check if $_SERVER['SERVER_PROTOCOL'] equals HTTP/1.0 and then add those headers.n",
            "@sstok What problems? Is HTTP/1.1 not correctly implemented in some browser or reverse proxy?n",
            "Pragma has some problem's whit IE up to IE8.nhttp://stackoverflow.com/questions/1038707/cant-display-pdf-from-https-in-ie-8-on-64-bit-vistannIE refuses to let PDF downloads work when configured incorrectly (according to IE...).nThe specs say that using Pragma for compatibility is no problem, but it must be configured correctly or else some browsers will work incorrect.n",
            "Anyone willing to work on this one. Should be easy enough to implement.n"
        ],
        "commits": []
    },
    "4892872": {
        "title": "[Form] prependView/appendModelTransformer() is needed in some cases",
        "body": "see #4473",
        "comments": [
            "I'm agree. I have a form where I need to reset the transformers first and latter add my own transformers, because it won't be called otherwise. If I have a way to prepend the transformer, I don't need to do that.n",
            "Working on itn",
            "I'm sorry, can you tell me when the fix to these issues will be available in the 2.0 branch ?n"
        ],
        "commits": [
            "merged branch greg0ire/position_switching (PR #4533)nnCommitsn-------nnf541a54 [Form] implement force append / prependnnDiscussionn----------nnimplement force append / prependnnSee #4494 and #4473nn---------------------------------------------------------------------------nnby travisbot at 2012-06-09T12:33:07ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1575997) (merged b0ed9b26 into 3bb7dc0b).nn---------------------------------------------------------------------------nnby stof at 2012-06-09T12:53:29Znn@fabpot :+1: for me.nn---------------------------------------------------------------------------nnby travisbot at 2012-06-09T12:57:54ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1576150) (merged 5e45b5d3 into 3bb7dc0b).nn---------------------------------------------------------------------------nnby travisbot at 2012-06-09T13:41:05ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1576322) (merged d51c5437 into 3bb7dc0b).nn---------------------------------------------------------------------------nnby fabpot at 2012-06-09T14:47:37ZnnCan you add a mention in the CHANGELOG please?nn---------------------------------------------------------------------------nnby greg0ire at 2012-06-09T14:58:25ZnnCouldn't find anything relevant to update in the CHANGELOG of the form component, but the UPGRADE file contains something I could update.nn---------------------------------------------------------------------------nnby travisbot at 2012-06-09T15:06:27ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1576951) (merged 6b45ba66 into 3bb7dc0b).nn---------------------------------------------------------------------------nnby greg0ire at 2012-06-09T15:06:51ZnnSquashed all the commits into one."
        ]
    },
    "4546032": {
        "title": "suggestion: webprofiler should not hide bottom page content",
        "body": "atm webprofiler has z-index positive to be over content. this is good but if I have some information in last line of output it is hidden under webprofiler. this could probably be fixed with setting for body margin bottom on height of webprofiler bar.",
        "comments": [
            "It was the case previously. It has probably been broken with the redesign. Anyone willing to have a look at this?n",
            "After the redesign one line was removed from the WebProfilerBundle:Profiler:toolbar.html.twig: nn``` htmln<div style=clear: both; height: 40px;></div>n```nn@fabpot What way do you prefer: reinsert the div like before (which works fine) or use the body padding way, as proposed by @nysander.n",
            "body padding is the way to go as this is a style issue. on the other hand, say the user already has body padding, it would need to be added which is not possible with css. so the extra markup might be the better way as it preserves the user style.n",
            "I think the `div` is better as this is less intrusive. What if the page already has a padding bottom?n",
            "Both ways are good. To be clear you set margin not padding in my solution, and adding !important makes this margin overrides any before set body margin bottom. But I think that div will do its job, just add 10px more to its height as currently toolbar has about 10px shadow on hover.n"
        ],
        "commits": [
            "fix #4265 toolbar hiding page content",
            "[WebProfilerBundle] re-added a div that were removed during the last update of the toolbar (closes #4265, #4282)"
        ]
    },
    "4279499": {
        "title": "[Form] nonexistent option `index_generation`",
        "body": "https://github.com/symfony/symfony/blob/76ef8da030b7bee4751790fd0666cacd3ca3278b/UPGRADE-2.1.md mentions the `index_generation` option for choice fields. But this option doesn't seem to exist (anymore).",
        "comments": [
            "@bschussek: Ping.n",
            "This option has been removed again and is not available anymore. The UPGRADE file should be adapted accordingly.nnPS: You don't need to ping me for every ticket that you open. I'm reading them anyway if you file them under Form.n",
            "Alright.nnWhat do you mean by `file them under Form`? I'm not allowed to assign labels to issues in this repo.n",
            "I think you can assign them when you open the issue. In any case, you should prefix the ticket's name with the affected component in square brackets. Then the right people will read it pretty soon.n",
            "@bschussek only repo collaborators can add labels on github issuesn",
            "Oh I see. My bad then.n"
        ],
        "commits": [
            "merged branch jakzal/UpgradeFix (PR #4229)nnCommitsn-------nn942cfc7 [Form] Removed index_generation mention from the UPGRADE instructions as the option no longer exists.nnDiscussionn----------nn[Form] Removed index_generation mention from the UPGRADE instructionsnnThe index_generation option no longer exists.nnBug fix: nonFeature addition: nonBackwards compatibility break: nonSymfony2 tests pass: [![Build Status](https://secure.travis-ci.org/jakzal/symfony.png?branch=UpgradeFix)](http://travis-ci.org/jakzal/symfony)nFixes the following tickets: #4108nn---------------------------------------------------------------------------nnby travisbot at 2012-05-08T13:05:58ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1275789) (merged 942cfc7a into e54f4e46)."
        ]
    },
    "4236377": {
        "title": "[Form] add guess pattern",
        "body": "Bug fix: nornFeature addition: yesrnBackwards compatibility break: nornSymfony2 tests pass: yesrnFixes the following tickets: https://github.com/symfony/symfony/issues/3766rnTodo: -rnrnDue to some trouble when rebase my previous PR i open a new one with Master mergedrnRefs PR: https://github.com/symfony/symfony/pull/3927",
        "comments": [
            "@vicb @bschussek ok for you?n",
            "please do also rephrase the commit message to something clearer, likenn```n[Form] added method `guessPattern` to FormTypeGuesserInterfacen```n",
            "Otherwise this looks good :)n",
            "every changes donen",
            "Thanks!n"
        ],
        "commits": [
            "[Form] added method `guessPattern` to FormTypeGuesserInterfacennrephrase changelog",
            "merged branch ruian/guess_pattern (PR #4077)nnCommitsn-------nnf7200e4 [Form] added method `guessPattern` to FormTypeGuesserInterfacennDiscussionn----------nn[Form] add guess patternnnBug fix: nonFeature addition: yesnBackwards compatibility break: nonSymfony2 tests pass: yesnFixes the following tickets: https://github.com/symfony/symfony/issues/3766nTodo: -nnDue to some trouble when rebase my previous PR i open a new one with Master mergednRefs PR: https://github.com/symfony/symfony/pull/3927nn---------------------------------------------------------------------------nnby fabpot at 2012-04-23T10:25:57Znn@vicb @bschussek ok for you?nn---------------------------------------------------------------------------nnby bschussek at 2012-04-23T10:26:51Znnplease do also rephrase the commit message to something clearer, likenn    [Form] added method `guessPattern` to FormTypeGuesserInterfacenn---------------------------------------------------------------------------nnby bschussek at 2012-04-23T10:27:35ZnnOtherwise this looks good :)nn---------------------------------------------------------------------------nnby ruian at 2012-04-23T10:29:18Znnevery changes done",
            "merged branch bschussek/issue4077 (PR #4085)nnCommitsn-------nnd9e142b [Form] Restored and deprecated method `guessMinLength` in FormTypeGuessernnDiscussionn----------nn[Form] Restored and deprecated method `guessMinLength` in FormTypeGuessernnBug fix: yesnFeature addition: nonBackwards compatibility break: nonSymfony2 tests pass: yesnFixes the following tickets: -nTodo: -nn![Travis Build Status](https://secure.travis-ci.org/bschussek/symfony.png?branch=issue4077)nnThis is a follow-up PR to #4077 (see comments in #3927 for reference).",
            "merged branch lavoiesl/master (PR #4522)nnCommitsn-------nn6f9eda9 [Form][Validator] Fixed generation of HTML5 pattern attribute based on AssertRegex to remove delimiters.nnDiscussionn----------nn[Form][Validator] Fixed generation of HTML5 pattern attribute based on AssertRegex by removing delimiters or using a new option: htmlPattern.nnHopefully, this time is the good oneu2026nn* Fixes: [#3766, #4077, #4513, #4520, #4521]n* Bug fix: yesn* Feature addition: yesn* BC break: non* Symfony2 tests pass: yesnnIn Issue #3766, it was asked that AssertRegex generates HTML5 pattern attribute.nIt was done in PR #4077, but the generated Regex is in delimited format which is not supported by HTML5.nnHence, `/[a-z]+/` would be converted to `[a-z]+`.nIf flags are specified like in `/[a-z]+/i`, it cannot be converted and pattern validation will be disabled client-side. If is however now possible, using a new option, `htmlPattern`, to specify the pattern you want to be used.nnExample:nn```phpn<?phpn/**n * @AssertRegex(pattern=/^[0-9]+[a-z]*$/i, htmlPattern=^[0-9]+[a-zA-Z]*$)n */nprivate $civic_number;n```nn**Note**: [Documentation](http://symfony.com/doc/current/reference/constraints/Regex.html) should be updated accordingly.nn---------------------------------------------------------------------------nnby lavoiesl at 2012-06-08T15:45:17ZnnGod, I just found out you can add more commits to this pull request by pushing to the master branch on lavoiesl/symfonyu2026nn---------------------------------------------------------------------------nnby travisbot at 2012-06-08T15:50:31ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1568634) (merged 2d767b41 into b84b46ba).nn---------------------------------------------------------------------------nnby petajaros at 2012-07-04T14:23:16ZnnAnything new about this issue?nn---------------------------------------------------------------------------nnby lavoiesl at 2012-07-04T16:25:43ZnnAlright, tests are passing using `phpunit -c phpunit.xml.dist --filter 'RegexValidatorTest'`. @travisbot reports errors because he canu2019t even start the tests due to dependencies, which is not relatednn---------------------------------------------------------------------------nnby vicb at 2012-07-04T16:31:13ZnnIt should be ready to merge when you have taken the last comments into account. thanks.nn---------------------------------------------------------------------------nnby lavoiesl at 2012-07-04T16:39:05ZnnSo it seems this PR will finally pass, thanks a lot.nn---------------------------------------------------------------------------nnby vicb at 2012-07-04T17:03:35ZnnThank you for this PR and the changes.nn---------------------------------------------------------------------------nnby fabpot at 2012-07-04T17:10:20Znn@lavoiesl Can you squash your commits before I merge? Thanks.nn---------------------------------------------------------------------------nnby lavoiesl at 2012-07-04T17:25:18ZnnThere. I also left trace of some commits I did.nnThanks"
        ]
    },
    "4213658": {
        "title": "[Guesser] Add some comments in the code",
        "body": "That is basically adding the comments that have been made [in the PR](https://github.com/symfony/symfony/pull/3927#r713663) into the code.rnrnThe following guessers must be commented:rnrn- validator,rn- ORM,rn- ODM,rn- Propel",
        "comments": [
            "Do tests exist for this? If no, they should be added as well to make sure no-one removes this functionality.n",
            "@vicb can you tell me what exactly needs to be commented so that I could fix this issue?nnThanks!n",
            "@dlsniper that was about [returning null value](https://github.com/symfony/symfony/pull/3927#discussion_r682684). The code has changed so much that I can close this issue now.n"
        ],
        "commits": []
    },
    "4206083": {
        "title": "[Finder] Fix regexp detection in FileContentFilterIterator",
        "body": "The iterator accepts both string and regexps, then there is a [test](https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Finder/Iterator/FilecontentFilterIterator.php#L73) to detect regexps.rnrnThe test is flawed:rnrn- http://fr2.php.net/manual/en/regexp.reference.delimiters.php: A delimiter can be any non-alphanumeric, non-backslash, non-whitespace character, delimiters could also be { and }rn- http://fr2.php.net/manual/en/reference.pcre.pattern.modifiers.php: some modifiers are missing and there could be multiple delimiters.rnrnThe test need to be enhanced (and tested)",
        "comments": [
            "There  is the same issue in the FilenameFilterIterator.nnThe test could be factorized in the parent class MultiplePcreFilterIterarorn",
            "Can you work on a fix?n",
            "working on fixing thisn"
        ],
        "commits": [
            "merged branch vicb/finder/regex (PR #4028)nnCommitsn-------nnf728463 [Finder] Fixes in the iteratorsnnDiscussionn----------nn[Finder] Fixes in the iteratorsnnfix: #4023nref: #4011nn- Fix regex detectionn- call `file_get_contents()` only once (vs once per pattern)nn[![Build Status](https://secure.travis-ci.org/vicb/symfony.png?branch=finder/regex)](http://travis-ci.org/vicb/symfony)nn@gajdaw thoughts ?"
        ]
    },
    "4205402": {
        "title": "Yaml parsing problem",
        "body": "Extracted from https://github.com/fabpot/yaml/issues/10:rnrnthe method parseQuotedScalar is used for two purposes, parsing a delimited string, and a plain string, but when its being given a plain string, it still treats it as delimited, and thus only returns the first string it matches.rnrnIf you use something like this, it doesn't really work:rnrntest: 'don't do somthin' like that'rnrnyou'd get 'test' to simply equal 'don'.rnrni'm using this package to do a bit of yaml validation, so i added this snippit to the methodrnrn    if ((!$delimiters) && (strlen($match[0]) < strlen($scalar))) {rn      throw new InvalidArgumentException(sprintf(Malformed YAML (check your use of apostrophes and quotes): n %s., substr($scalar, $i)));rn    }rnrnI'm sure this isn't the ideal fix, but I didn't want to battle with modifying the validation regex.rn",
        "comments": [
            "Hi Fabien,nnWhat is the best method to patch it in your opinion? nnModification of `REGEX_QUOTED_STRING`?n",
            "But I think the snippet you gave is invalid in YAMLnn``` yamlntest: 'don't do somthin' like that'n```nnSingle quotes need to be escaped by doubling them so it should benn``` yamlntest: 'don''t do somthin'' like that'n```n",
            "@stof: correct. The problem is that the parser does not emit any error, it just ignores the end of the string, which is wrong.n",
            "I've created a test to ensure the previously mentioned string causes a SymfonyComponentYamlExceptionParseException .nnJust posting fix and then will create pull request.n",
            "Another test to consider:n    `test: dont do somthin like that`nnWhich shouldn't parse either (but currently does), fixed in above pull request.n",
            "Whoops, I guess I posted on the wrong repo, thanks for pulling the bug report to the right place.n",
            "Minor amendments made as per @fabpot 's requestn"
        ],
        "commits": [
            "merged branch paul-matthews/master (PR #4042)nnCommitsn-------nn478227d Fixed quoting issues with Yaml Inline ParsernnDiscussionn----------nn[Yaml] fix parsing quotes problemnnAdded some basic checking for quotes on their own within strings. Used single quote ' followed by , and : to denote the end of the current string to test.nnBug fix: yesnFeature addition: nonBackwards compatibility break: nonSymfony2 tests pass: yesnFixes the following tickets: #4021nTodo: N/Ann---------------------------------------------------------------------------nnby fabpot at 2012-05-07T09:22:56ZnnAfter doing the requested changes, can you squash your commits? Thanks.nn---------------------------------------------------------------------------nnby paul-matthews at 2012-05-09T13:29:45ZnnResolved and squashednn---------------------------------------------------------------------------nnby travisbot at 2012-05-09T13:30:30ZnnThis pull request [fails](http://travis-ci.org/symfony/symfony/builds/1285048) (merged 5ce6d4e1 into 6c714095).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-09T13:31:06ZnnThis pull request [fails](http://travis-ci.org/symfony/symfony/builds/1285057) (merged 3592fcec into e54f4e46).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-09T13:33:40ZnnThis pull request [fails](http://travis-ci.org/symfony/symfony/builds/1285094) (merged e209f786 into e54f4e46).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-09T13:37:42ZnnThis pull request [fails](http://travis-ci.org/symfony/symfony/builds/1285153) (merged 0967b513 into e54f4e46).nn---------------------------------------------------------------------------nnby fabpot at 2012-05-09T14:00:29ZnnIt looks like that another commit is in your PR that should not be there.nn---------------------------------------------------------------------------nnby paul-matthews at 2012-05-09T15:52:35ZnnRight-o will removenn---------------------------------------------------------------------------nnby paul-matthews at 2012-05-09T15:54:15Znnresolvednn---------------------------------------------------------------------------nnby travisbot at 2012-05-09T15:57:15ZnnThis pull request [fails](http://travis-ci.org/symfony/symfony/builds/1286339) (merged fc276209 into e66a0bb3).nn---------------------------------------------------------------------------nnby fabpot at 2012-05-10T05:20:18ZnnApparently, some tests do not pass anymore after the patch. Can you have a look at them? Thanks.nn---------------------------------------------------------------------------nnby paul-matthews at 2012-05-10T11:20:45ZnnSure - looking into it.nn---------------------------------------------------------------------------nnby paul-matthews at 2012-05-10T17:55:53ZnnI believe that's fixed.nnThe entire suite works locally now.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-10T17:55:54ZnnThis pull request [fails](http://travis-ci.org/symfony/symfony/builds/1297641) (merged 884c02ed into fae4523f).nn---------------------------------------------------------------------------nnby paul-matthews at 2012-05-10T17:57:03ZnnUnsure why travis fails.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-10T18:00:28ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1297650) (merged 478227d9 into fae4523f).nn---------------------------------------------------------------------------nnby stof at 2012-06-09T13:24:52Znn@fabpot :+1:",
            "Fixed quoting issues with Yaml Inline Parsernn* Added test parse error in parseQuotedScalarn  * Expecting to throw tests, previously trimmed stringn  * More details on issue: https://github.com/symfony/symfony/issues/4021n* Enforces single quote escaping when within string quotesn  * Shortens the scope of the validation matchn  * Stricter matching rulesn* Ensures double quoted strings are not parsed incorrectlyn* Split quote matching into 2 types of quotesn  * Separates single and double quotesn  * Fixes intollerence for un escaped double quote",
            "Fixed quoting issues with Yaml Inline Parsernn* Added test parse error in parseQuotedScalarn  * Expecting to throw tests, previously trimmed stringn  * More details on issue: https://github.com/symfony/symfony/issues/4021n* Enforces single quote escaping when within string quotesn  * Shortens the scope of the validation matchn  * Stricter matching rulesn* Ensures double quoted strings are not parsed incorrectlyn* Split quote matching into 2 types of quotesn  * Separates single and double quotesn  * Fixes intollerence for un escaped double quote"
        ]
    },
    "4187300": {
        "title": "[Form] property path for violations is incorrect",
        "body": "I have the following situation:rnrnThere is a form which shows a list of entities of some kind, kind of similar to a collection form. However, the entities need to be shown in some kind of hierarchy, so even though the app Data is a plain array, the clientData and form it self are built in the following way:rnrn```rnform:rn  Mon:rn    0: entityrn    1: entityrn  Tue:rn    0: entityrn```rnetc...rnrnThe transformation between the two is done using a DataTransformer on the topmost form: https://gist.github.com/2419554rnrnThe form works fine except for validation, for some reason all errors bubble up all the way to the top form, even if they should display on the bottom forms (form.Mon.0, form.Mon.1, etc). While trying to find out what was wrong, I came to the conclusion that the property path of the violations was incorrect, or at least not conform to the way the form was build up:rnrndata[0].fieldrndata[0].field2rndata[1].fieldrnrnrather thanrnrndata[Mon][0].fieldrndata[Mon][0].field2rndata[Mon][1].fieldrnrnThis causes them to bubble all the way up, as they cannot be mapped to the form.",
        "comments": [
            "When the DelegatingValidationListener is refactored (see #3903), this can be implemented. What you want is basically a custom mapping function that maps the property pathsnndata[0]ndata[1]nnto the formsnnchildren[Mon].children[0]nchildren[Mon].children[1]nnA second solution for your problem is to make the forms Mon, Tue etc. _virtual_. Virtual forms are used for presentation only and are not mapped directly to the domain model, resulting in the mapping:nndata[0] <-> children[Mon].children[0]ndata[1] <-> children[Mon].children[1]ndata[2] <-> children[Tue].children[2]nnTo do this, you would have to move your value transformer logic to a form listener that rebuilds the form every time your data is set.n",
            "Thanks for your explanation. For now I'll keep it as-is and wait for #3903 to be resolved. The form between the base and the entity forms also contain quite some logic which would probably result in a lot of refactoring and possibly unclean code. I'll resort to the _virtual_ solution if I'll find myself running out of time before the issue is resolvedn",
            "Can you please verify if this is fixed by #4341?n",
            "@bschussek it appears the bug still exists. The error is still mapped to data[2].break rather than data[Wed][0].break (or something similar)nnAnything I can do to help you debug?n",
            "I think that the mapping function I described above is not really feasible. I rather think now that your use case is exactly the use case of virtual forms.nnCould you test whether virtual forms fix your problem?n",
            "@bschussek When the deadline approached a while ago, I implemented the work-a-round you provided around a month ago, and this indeed worked fine.nnDoes this mean that the way the form was before, is actually not intended use?n",
            "Yes, forms are not intended to be used like that. A form that does not map to a property of the underlying data should either be unmapped (property_path => false, or mapped => false as of #4341) or virtual (virtual => true).n",
            "See also symfony/symfony-docs#1387n"
        ],
        "commits": []
    },
    "4169155": {
        "title": "UPGRADE-2.1.md is missing the switch from Symfony's DoctrineBundle to Doctrine's",
        "body": "One of the steps involved in upgrading Symfony from 2.0 to 2.1 is that the namespace of the DoctrineBundle needs to be changed in the AppKernel.phprnrn```rnnew SymfonyBundleDoctrineBundleDoctrineBundle(),rn```rnrnShould becomernrn```rnnew DoctrineBundleDoctrineBundleDoctrineBundle(),rn```rnrnThis information seems to be missing in the upgrade guide",
        "comments": [],
        "commits": [
            "Fix #3971",
            "merged branch rouffj/fix-3971 (PR #3998)nnCommitsn-------nn991076a Fix #3971nnDiscussionn----------nnFix #3971"
        ]
    },
    "4117969": {
        "title": "[Form] [DoctrineBridge] Better field type guessing for array doctrine type and array validator type",
        "body": "Bug fix: nornFeature addition: yesrnBackwards compatibility break: nornSymfony2 tests pass: yesrnFixes the following tickets: #1692rnTodo: -",
        "comments": [
            "Could you please add an entry to the CHANGELOG and squash your commits into one?n",
            "Donen"
        ],
        "commits": [
            "[DoctrineBridge][Form] added collection guess for array Doctrine type and array constraint typennFixes #1692",
            "merged branch pvanliefland/ticket_1692 (PR #3945)nnCommitsn-------nn8bdff01 [DoctrineBridge][Form] added collection guess for array Doctrine type and array constraint typennDiscussionn----------nn[Form] [DoctrineBridge] Better field type guessing for array doctrine type and array validator typennBug fix: nonFeature addition: yesnBackwards compatibility break: nonSymfony2 tests pass: yesnFixes the following tickets: #1692nTodo: -nn---------------------------------------------------------------------------nnby bschussek at 2012-04-18T08:45:17ZnnCould you please add an entry to the CHANGELOG and squash your commits into one?nn---------------------------------------------------------------------------nnby pvanliefland at 2012-04-18T17:20:39ZnnDone"
        ]
    },
    "4104878": {
        "title": "[Form] add guess pattern",
        "body": "Bug fix: nornFeature addition: yesrnBackwards compatibility break: nornSymfony2 tests pass: yesrnFixes the following tickets: https://github.com/symfony/symfony/issues/3766rnTodo: -",
        "comments": [
            "You need to revert change of permissions.n",
            "Some file permissions have been changed in your commit, they should be revertedn",
            "What do you mean by please revert all permission changes because i did not change any permissions by myself :/n",
            "@ruian which OS are you using ? If you are on windows, you should configure git to ignore file permissions (as Windows cannot handle them). Msysgit should do it by default but some other tools don't configure git this way: http://stackoverflow.com/questions/6476513/git-file-permissions-on-windows-7n",
            "@stof i'm on linux but i did not change any chmod or chown since a clone the repon",
            "@ruian In your pull request, you are changing file permissions from 644 to 755. This is what should be revertedn",
            "Can you squash your commits ?n",
            "you mean rebase ? If it the case i have never testn",
            "Look at [the doc](http://symfony.com/doc/master/contributing/code/patches.html#id1) at the end of the page ;)n",
            "Yep i will look at itn",
            "@stof  I squash my commits. It's ok ?n",
            "It looks good to me. @fabpot @bschussek ready for the final reviewnn@ruian could you send PRs to https://github.com/doctrine/DoctrineMongoDBBundle https://github.com/doctrine/DoctrinePHPCRBundle and https://github.com/doctrine/DoctrineCouchDBBundle to add the new method ?n",
            "yep suren",
            "@stof I made all Doctrine PRs to respect this new onen",
            "@bschussek any comments on this PR ?n",
            "Hi @ruian, thank you for the PR! I added some comments and hope you can check them soon. If you need help, just drop a message.n",
            "@bschussek thx for your comments, i will do this as soon as possiblen",
            "@bschussek should i remove all call to guessMinLength ?n",
            "@ruian Yes, guessMinLength() can be removed entirely (and all references to it).n",
            "ping @bschussek is it good like this ?n",
            "@bschussek @vicb i think it's good now, and i think i understood the diff between Size and SizeLength Constraint ValueGuess (One is for numeric and the other for string). It was not clear in my mind when i made the change. But now it's okayn",
            "Please squash the commits once you're done. You should also update the CHANGELOG.n",
            "This needs to be rebased with also as it currently wont merge. (git fetch; git rebase origin/master).n",
            "something is strange with this PR .. why is it marked as merged by @ruian? and why are there no changes in the diff? and why was it labeled as no BC break?n",
            "@lsmith77 I don't know, what append, i merge the master into my branch...nSo a recreate a PR https://github.com/symfony/symfony/pull/4077 but it seems alright now.n",
            "@lsmith77 You are right, this should be marked as BC break. I originally thought that guessMinLength() was only introduced after 2.0, but it was not. I will update the documentation.n",
            "@bschussek do you want i create a new PR for the changelog ?n",
            "@ruian I already did this. Thanks anyway!n"
        ],
        "commits": []
    },
    "4058998": {
        "title": "[Form] form named search with a field named search => can't set default data",
        "body": "A form class named search with a single field named search sent over GET leads to the following url:rn```/?search=mysearchstring```rnIf the form is rendered using ```{{ form_widget(form) }}```rnrnI kinda like this behavior as it gives good looking url but on the other hand, you can't set default data properly.rnrn```$form->bindRequest($request);``` throws ```Expected argument of type array, string given```.rnrn```phprn$defaultData = array('search' => $request->query->get('search', ));rn$form = $this->createForm(new SearchFormType(), $defaultData);rn```rnfills the search field with the string ```Array```.rnrnWith a form named test and a single field named test you get the proper: ```/?test[test]=mysearchstring```.rnrnWhy does search provoke a unique behavior?rnHow can I have a simple url (?search=mysearchstring) while not breaking default data setting?rnrnFor reference here is the class I use:rnrn```phprn<?phprnrnnamespace AcmeSiteBundleFormType;rnrnuse SymfonyComponentFormAbstractType;rnuse SymfonyComponentFormFormBuilder;rnrnclass SearchFormType extends AbstractTypern{rn    public function buildForm(FormBuilder $builder, array $options)rn    {rn        $builderrn            ->add('search')rn        ;rn    }rnrn    public function getDefaultOptions(array $options)rn    {rn        return array(rn            'csrf_protection' => false,rn        );rn    }rnrn    public function getName()rn    {rn        return 'search';rn    }rn}rn```rnrnSymfony 2.0.11",
        "comments": [
            "Support for forms with an empty root name (to have a field named `search` instead of `myform[search]`) has been added for 2.1n",
            "It seems that the form rendering shouldn't be any different when you use a field named search in a form named search. There might be something wrong going on.nnAnyway, 2.1 will fix my use case so I'll close this report.n",
            "Are you sure there is a difference between a form named `search` vs any other name? Can you provide a test case for it?n",
            "With the above form class:nn```n{{ form_widget(form) }}n```nngivesnn``` htmln<input type=search id=search name=search required=required />n```nnwhereasnn``` twign{{ form_errors(form) }}n{{ form_rest(form) }}n```nngivesnn``` htmln<div><label for=search_search class= required>Search</label><input type=text id=search_search name=search[search] required=required /></div>n```nnWith a form named test and a field named search both methods lead to the same HTML, and the same goes for a form named test with a single field named test.n",
            "That's strange. Is it also true for current master? If yes, you can reopen the ticket I think,n",
            "Yeah same with the master branch.nThe inital issue was about setting default data but the actual bug seems to be in `form_widget(form)` in twig with a form where the name and the single field it contains are named search. See my comment above for more details.n",
            "Task for the BHD: Create a failing test casen",
            "I will have a look at this one today.n",
            "The reason is, that there is already a built-in type search. nn```n{{ form_widget(form) }} n```nndoes display the form with the search_widget block. This doesn't work.nnYou must not give your form types the same name as built-in types. Naming the form radio or checkbox fails as well :)n",
            "the type name is an identifier. If you reuse the same name, it replaces the previous type in the factory.n",
            "Does this mean we can close this issue?n",
            "Well yes. You can override the built-in type search. But if you want to display the search form as described in the issue correctly, you also have to override the search_widget block from form_div_layout.html.twig. nnMcDouls problem is that as soon as he names his form search, it will be rendered by the search_widget block instead of the form_widget block. I think this is expected behaviour and not a bug.n",
            "IMO this should be documented in docs to make it clear.n",
            "Good. Please open an issue in the docs.n"
        ],
        "commits": []
    },
    "3948095": {
        "title": "[Form] Constraint Assert/Regex does not use HTML5 pattern attribute",
        "body": "```phprn#Customer.phprnrnclass Customer {rn# (...)rnrn   /**rn    * @var string $phonern    * @AssertNotBlank()rn    * @AssertRegex(/^(d{2}) d{4}-d{4}$/)rn    * @ORMColumn(name=phone, type=string, length=14)rn    */rn   private $phone;rnrn# (...)rn}rn```rn```phprn#CustomerType.phprnrnclass CustomerType extends AbstractTypern{rn# (...)rn   public function buildForm(FormBuilder $builder, array $options)rn   {rn       $builderrn           ->add('phone', null, array('label' => 'Telefone'))rn       ;rn   }rn# (...)rn}rn```rnrnHTML Result:rnrn```htmlrn<input type=text id=paggy_admin_customer_phone name=paggy_admin_customer[phone] required=required maxlength=14 class=input-text>rn```rnrn*Workaround:* If I add the pattern property, duplicating the code of entity, it works as expected:rnrn```phprn#CustomerType.phprnrnclass CustomerType extends AbstractTypern{rn# (...)rn   public function buildForm(FormBuilder $builder, array $options)rn   {rn       $builderrn           ->->add('phone', 'text', array('label' => 'Telefone', 'pattern' => '^rn(d{2}) d{4}-d{4}$'))rn       ;rn   }rn# (...)rn}rn```rnrnHTML Result:rnrn```htmlrn<input type=text id=paggy_admin_customer_phone name=paggy_admin_customer[phone] required=required maxlength=14 pattern=^(d{2}) d{4}-d{4}$ class=input-text>rn```rnrnThanks!rn",
        "comments": [
            "Re-qualifying it as a feature request as the form component never advocated guessing the pattern option.n",
            "i believe the option was there once, but the errors that browsers gave when it didn't validate was so obscure, that it was removed. I can't find the specific commit, thoughn",
            "The pattern is in fact set when a @MinLength constraint is set. I think we should add a guessPattern() method to FormTypeGuesserInterface (task for the BHD).n",
            "I'm working on a patchn",
            "I look forward to updates =)n",
            "fixed by PR #4077n",
            "It seems it doesn't works anymore in Symfony 2.5.6. No pattern is added in html. nnFrom what I can see in FormFactory, the call to guessPattern is only made when calling createBuilderForProperty, but not when calling createBuilder.n"
        ],
        "commits": [
            "merged branch lavoiesl/master (PR #4522)nnCommitsn-------nn6f9eda9 [Form][Validator] Fixed generation of HTML5 pattern attribute based on AssertRegex to remove delimiters.nnDiscussionn----------nn[Form][Validator] Fixed generation of HTML5 pattern attribute based on AssertRegex by removing delimiters or using a new option: htmlPattern.nnHopefully, this time is the good oneu2026nn* Fixes: [#3766, #4077, #4513, #4520, #4521]n* Bug fix: yesn* Feature addition: yesn* BC break: non* Symfony2 tests pass: yesnnIn Issue #3766, it was asked that AssertRegex generates HTML5 pattern attribute.nIt was done in PR #4077, but the generated Regex is in delimited format which is not supported by HTML5.nnHence, `/[a-z]+/` would be converted to `[a-z]+`.nIf flags are specified like in `/[a-z]+/i`, it cannot be converted and pattern validation will be disabled client-side. If is however now possible, using a new option, `htmlPattern`, to specify the pattern you want to be used.nnExample:nn```phpn<?phpn/**n * @AssertRegex(pattern=/^[0-9]+[a-z]*$/i, htmlPattern=^[0-9]+[a-zA-Z]*$)n */nprivate $civic_number;n```nn**Note**: [Documentation](http://symfony.com/doc/current/reference/constraints/Regex.html) should be updated accordingly.nn---------------------------------------------------------------------------nnby lavoiesl at 2012-06-08T15:45:17ZnnGod, I just found out you can add more commits to this pull request by pushing to the master branch on lavoiesl/symfonyu2026nn---------------------------------------------------------------------------nnby travisbot at 2012-06-08T15:50:31ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1568634) (merged 2d767b41 into b84b46ba).nn---------------------------------------------------------------------------nnby petajaros at 2012-07-04T14:23:16ZnnAnything new about this issue?nn---------------------------------------------------------------------------nnby lavoiesl at 2012-07-04T16:25:43ZnnAlright, tests are passing using `phpunit -c phpunit.xml.dist --filter 'RegexValidatorTest'`. @travisbot reports errors because he canu2019t even start the tests due to dependencies, which is not relatednn---------------------------------------------------------------------------nnby vicb at 2012-07-04T16:31:13ZnnIt should be ready to merge when you have taken the last comments into account. thanks.nn---------------------------------------------------------------------------nnby lavoiesl at 2012-07-04T16:39:05ZnnSo it seems this PR will finally pass, thanks a lot.nn---------------------------------------------------------------------------nnby vicb at 2012-07-04T17:03:35ZnnThank you for this PR and the changes.nn---------------------------------------------------------------------------nnby fabpot at 2012-07-04T17:10:20Znn@lavoiesl Can you squash your commits before I merge? Thanks.nn---------------------------------------------------------------------------nnby lavoiesl at 2012-07-04T17:25:18ZnnThere. I also left trace of some commits I did.nnThanks",
            "merged branch ruian/guess_pattern (PR #4077)nnCommitsn-------nnf7200e4 [Form] added method `guessPattern` to FormTypeGuesserInterfacennDiscussionn----------nn[Form] add guess patternnnBug fix: nonFeature addition: yesnBackwards compatibility break: nonSymfony2 tests pass: yesnFixes the following tickets: https://github.com/symfony/symfony/issues/3766nTodo: -nnDue to some trouble when rebase my previous PR i open a new one with Master mergednRefs PR: https://github.com/symfony/symfony/pull/3927nn---------------------------------------------------------------------------nnby fabpot at 2012-04-23T10:25:57Znn@vicb @bschussek ok for you?nn---------------------------------------------------------------------------nnby bschussek at 2012-04-23T10:26:51Znnplease do also rephrase the commit message to something clearer, likenn    [Form] added method `guessPattern` to FormTypeGuesserInterfacenn---------------------------------------------------------------------------nnby bschussek at 2012-04-23T10:27:35ZnnOtherwise this looks good :)nn---------------------------------------------------------------------------nnby ruian at 2012-04-23T10:29:18Znnevery changes done"
        ]
    },
    "3416929": {
        "title": "[Form] Choice List in a Form",
        "body": "Hi.rnrnHere is my form [ProductType](https://github.com/umpirsky/symfony-standard/blob/f59d47767a07bf1e06d55a2ebff13a13ae6aa199/src/Acme/DemoBundle/Form/ProductType.php) and [this](https://github.com/umpirsky/symfony-standard/blob/f59d47767a07bf1e06d55a2ebff13a13ae6aa199/src/Acme/DemoBundle/Controller/ProductController.php#L51) is how I use it in action.rnrnI expect it to render available categories in choice list, but it renders text field for category, I read the doc, and [this](http://epixa.com/2011/08/create-and-validate-a-choice-list-in-a-symfony-2-form.html) article, and tried the same, but all I get is a text field for category.rnrnIt renders available categories in choice list only if I remove [getDefaultOptions()](https://github.com/umpirsky/symfony-standard/blob/f59d47767a07bf1e06d55a2ebff13a13ae6aa199/src/Acme/DemoBundle/Form/ProductType.php#L23) from [ProductType](https://github.com/umpirsky/symfony-standard/blob/f59d47767a07bf1e06d55a2ebff13a13ae6aa199/src/Acme/DemoBundle/Form/ProductType.php) and explicitly pass [Product](https://github.com/umpirsky/symfony-standard/blob/f59d47767a07bf1e06d55a2ebff13a13ae6aa199/src/Acme/DemoBundle/Entity/Product.php) as a second parameter to [$this->createForm()](https://github.com/umpirsky/symfony-standard/blob/f59d47767a07bf1e06d55a2ebff13a13ae6aa199/src/Acme/DemoBundle/Controller/ProductController.php#L53), but I guess that is not the right way to do it.",
        "comments": [
            "Hi @umpirsky !nIf I correctly understand your issue, you should explicitly use the `entity` field type: http://symfony.com/doc/current/reference/forms/types/entity.html. nMoreover, you should use the google group for questions like this one.n",
            "Thanks @michelsalib.nnI would like to try your fix but I'm stuck with [composer](https://github.com/symfony/symfony-standard/issues/278) and can't install vendors.nnHowever, don't you think that form component should be intelligent enough and guess the type for `category` field, since [Product](https://github.com/umpirsky/symfony-standard/blob/f59d47767a07bf1e06d55a2ebff13a13ae6aa199/src/Acme/DemoBundle/Entity/Product.php) contains `category` member which is of [Category](https://github.com/umpirsky/symfony-standard/blob/f59d47767a07bf1e06d55a2ebff13a13ae6aa199/src/Acme/DemoBundle/Entity/Category.php) type (entity)?nnThank you very much for your response, really appreciate it.n",
            "I posted a new question on http://groups.google.com/group/symfony2/browse_frm/thread/f9402d2f5a744d18n",
            "Can you please verify whether #3789 fixes your problem?n",
            "Task for the BHD: Validate this bug and create a failing test case, if possiblen",
            "I tried to reproduce the issue but it appears to work fine with the current master branch.nnI defined a ManyToOne field in the entity and added the field in the form without any explicit field type or option, and the field is built as an EntityType.nnI can provide a test case if necessary but I think this issue can be closed.n",
            "@pvanliefland Thanks.n"
        ],
        "commits": []
    },
    "3100645": {
        "title": "[Form][DelegatingValidator] Fix path mapping for embedded forms",
        "body": "Bug fix: yesrnFeature addition: nornBackwards compatibility break: nornSymfony2 tests pass: DelegatingValidatorTestrnFixes the following tickets: [#1917](https://github.com/symfony/symfony/issues/1917), [#3018](https://github.com/symfony/symfony/issues/3018)rnrnTried to fix the bug where multi-input types (i.e. date, radio) of embedded forms get wrong path mappingrnrn    children[subForm][choiceType].datarnshould bernrn    children[subForm].data.choiceType",
        "comments": [
            "The mapping algorithm is fragile and it breaks easily. @bschussek: any idea on how we can make it more reliable (without generating all the possible paths which would make everything really slow for bigger forms)?n",
            "@fabpot: Yes, the mapping algorithm was something quick and dirty that long needs to be fixed. I'm not sure whether a recursive solution works (due to maximum function nesting level), but I want to work on this soon. nnRelated issues: #1810, #1971, #2729, #2801, #3018n",
            "Can you please verify if this is fixed by #4341?n",
            "This is fixed by #4341, although a different error exists that is described in #4368.n"
        ],
        "commits": [
            "merged branch Seldaek/fixtests (PR #3438)nnCommitsn-------nne67f8d4 Properly skip memcached tests when no memcached server is presentn005d86f Broaden timer tests limitsn001c4fd Fix windows fs testsnnDiscussionn----------nnFix testsnn- Some windows fixesn- Skip memcached for real when it's not there - by the way I think those tests are insane since they seem to run a purge() on the memcached server. If you run this by accident somewhere where it matters it could hurt. I think they should be put in a group disabled by default, I'll be happy to add that change if it's deemed useful.n- Fixed the timer tests for good on windows (which seems to be quite bad at `usleep`). I also documented them so you actually know how it failed when it does, the false instead of true wasn't super useful.",
            "[AbstractRememberMeServices] Add support for the remember_me parameter in the query",
            "merged branch bschussek/issue3903 (PR #4341)nnCommitsn-------nn1422506 [Form] Clarified the usage of constraints in the UPGRADE filenaf41a1a [Form] Fixed typosnac69394 [Form] Allowed native framework errors to be mapped as welln59d6b55 [Form] Fixed: error mapping aborts if reaching an unsynchronized formn9eda5f5 [Form] Fixed: RepeatedType now maps all errors to the first fieldn215b687 [Form] Added capability to process . rules in error_mappingnc9c4900 [Form] Fixed: errors are not mapped to unsynchronized forms anymorenc8b61d5 [Form] Renamed FormMapping to MappingRule and moved some logic there to make rules more extendablend0d1fe6 [Form] Added more information to UPGRADE and CHANGELOGn0c09a0e [Form] Made $name parameters optional in PropertyPathBuilder:replaceBy(Index|Property)n081c643 [Form] Updated UPGRADE and CHANGELOGnbbffd1b [Form] Fixed index checks in PropertyPath classesnea5ff77 [Form] Fixed issues mentioned in the PR commentsn7a4ba52 [EventDispatcher] Added class UnmodifiableEventDispatchern306324e [Form] Greatly improved the error mapping done in DelegatingValidationListenern8f7e2f6 [Validator] Fixed: @Valid does not recurse the traversal of collections anymore by defaultn5e87dd8 [Form] Added tests for the case when property_path is null or false. Instead of setting property_path to false, you should set mapped to false instead.n2301b15 [Form] Tightened PropertyPath validation to reject any empty value (such as false)n7ff2a9b Revert [Form] removed a constraint in PropertyPath as the path can definitely be an empty string for errors attached on the main form (when using a constraint defined with the 'validation_constraint' option)n860dd1f [Form] Adapted Form to create a deterministic property path by defaultn03f5058 [Form] Fixed property name in PropertyPathMapperTestnc2a243f [Form] Made PropertyPath deterministic: [prop] always refers to indices (array or ArrayAccess), prop always refers to propertiesn2996340 [Form] Extracted FormConfig class to simplify the Form's constructornnDiscussionn----------nn[Form] Improved the error mapping and made property paths deterministicnnBug fix: yesnFeature addition: nonBackwards compatibility break: **yes**nSymfony2 tests pass: yesnFixes the following tickets: #1971, #2945, #3272, #3308, #3903, #4329nProbably fixes: #2729nTodo: -nnThis PR is ready for review.nnThe algorithm for assigning errors to forms in the form tree was improved a lot. Also the error mapping works better now. There are still a few features to be added (e.g. wildcards *), but these can be implemented now pretty easily.nnThis PR breaks PR in that a form explicitely needs to set the data_class option if it wants to map to an object and needs to leave that option empty if it wants to map to an array.nnFurthermore, property paths must be deterministic now: `foo` now only maps to `(g|s)etFoo()`, but not the index `[foo]` (array or ArrayAccess), while `[foo]` only maps to the latter but not the former. See #3903 for more information.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-19T21:35:24ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1377086) (merged 9e346990 into 22294617).nn---------------------------------------------------------------------------nnby Tobion at 2012-05-20T01:47:48ZnnGood stuff in general :)nn---------------------------------------------------------------------------nnby bschussek at 2012-05-20T09:19:18ZnnFixed everything mentioned here so far.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-20T09:22:22ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1379548) (merged 49918bef into 22294617).nn---------------------------------------------------------------------------nnby Tobion at 2012-05-20T14:29:14Znnmany occurences of two spaces after `@param` (should be only one space).nn---------------------------------------------------------------------------nnby Koc at 2012-05-20T14:40:18ZnnSorry, I'm cannot observe all changes for form component in 2.1, so I have a question:nn```phpn<?phpnnprotected $isPrivate;nnpublic function isPrivate() {}nnpublic function setPrivate() {}n```nnIs it possible validate this property with accessors/mutators from code above in 2.1 now?nn---------------------------------------------------------------------------nnby bschussek at 2012-05-20T14:41:09ZnnThe type after `@param` used to be aligned with the type of the `@return` tag. Let's get the PHPDoc-guidelines straight before nitpicking more on these trivialities.nn---------------------------------------------------------------------------nnby bschussek at 2012-05-20T14:42:34Znn@Koc Please move your question to the user mailing list, let's keep this PR on topic.nn---------------------------------------------------------------------------nnby bschussek at 2012-05-20T14:45:42ZnnFixed everything mentioned until now.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-20T14:47:48ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1380903) (merged 03d60a03 into f433f6b0).nn---------------------------------------------------------------------------nnby bschussek at 2012-05-20T15:18:12ZnnCHANGELOG/UPGRADE is now updated.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-20T15:19:39ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1381047) (merged 48cc3eca into f433f6b0).nn---------------------------------------------------------------------------nnby Tobion at 2012-05-20T16:16:51ZnnAll the deprecated methods and changed constructor arguments should probably be mentioned in the changelog/upgrade.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T07:31:47ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1386621) (merged c0ef69a1 into 1407f112).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T08:01:46ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1386826) (merged 4f3fc1fe into 1407f112).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T09:22:30ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1387263) (merged e3675050 into 1407f112).nn---------------------------------------------------------------------------nnby bschussek at 2012-05-21T09:43:08ZnnThis PR now fixes #1971.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T09:45:51ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1387370) (merged de33f9ef into 1407f112).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T11:06:53ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1387838) (merged da3b562e into 1407f112).nn---------------------------------------------------------------------------nnby bschussek at 2012-05-21T11:07:45ZnnThis PR now fixes #2945.nn---------------------------------------------------------------------------nnby bschussek at 2012-05-21T15:33:33ZnnNative errors (such as invalid, extra_fields etc.) are now respected by the error_mapping option as well. The option validation_constraint was deprecated, constraints is its replacement and a lot handier, because it allows you to work easily with arrays.nn```phpn<?phpn$buildern    ->add('name', 'text', array(n        'constraints' => new NotBlank(),n    ))n    ->add('phoneNumber', 'text', array(n        'constraints' => array(n            new NotBlank(),n            new MinLength(7),n            new Type('numeric')n        )n    ));n```nnReady for review again.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T15:33:45ZnnThis pull request [fails](http://travis-ci.org/symfony/symfony/builds/1390239) (merged e162f56d into ea33d4d3).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T15:40:02ZnnThis pull request [fails](http://travis-ci.org/symfony/symfony/builds/1390367) (merged e8729a7f into ea33d4d3).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T16:06:03ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1390663) (merged ef39aba4 into ea33d4d3).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-22T08:54:36ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1398153) (merged af41a1a5 into e4e3ce6c).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-22T09:26:12ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1398415) (merged 14225067 into e4e3ce6c)."
        ]
    },
    "3065657": {
        "title": "[Dependency Injection] Service declaration tags should allow array types",
        "body": "Hello,rnrnUsing the following yml service declation:rn```(...)tags:rn        - { name: acme.myservice, sections:{main:true, side:true} }```rnrnproduces a correct array when parsed in a ComplierPass, but then throws:rnrn```ErrorException: Warning: DOMElement::setAttribute() expects parameter 2 to be string, rnarray given in (...)vendor/symfony/src/Symfony/Component/DependencyInjection/Dumper/XmlDumper.php line 141```",
        "comments": [
            "I think it should actually be the other way around: it should not accept arrays & should throw an exception when loading the yaml (to make it consistent with xml).n",
            "I'd volunteer to solve this one.n",
            "@denderello any news about a fix for this ?n",
            "Task for the BHD: update the YamlFileLoader to check for scalar types (in order to be consistent with the XML format), add unit tests.n",
            "Should be fixed with: https://github.com/symfony/symfony/pull/3921n",
            "@phreaknerd: Can this be closed? Github didn't auto-close this because Fix issue #3251 probably wasn't picked up by its own issue-closing hook.n"
        ],
        "commits": [
            "Fix issue #3251: Check attribute type of service tagsnnThe attributes of service tags have to be of a scalar type.nIt was possible to add arrays here with yaml-configuration.",
            "merged branch phreaknerd/fix_issue_#3251_for_2.0 (PR #3926)nnCommitsn-------nn3ae826a Fix issue #3251: Check attribute type of service tagsnnDiscussionn----------nnFix issue #3251: Check attribute type of service tagsnnThe attributes of service tags have to be of a scalar type.nIt was possible to add arrays here with yaml-configuration."
        ]
    },
    "2949851": {
        "title": "[Validator] StaticMethodLoader invokes wrong method",
        "body": "    interface FooInterface {rnrn        public static function loadValidatorMetadata($metadata);rn    }rnrn    class Bar implements FooInterface {rnrn        private $baz = 'bogus';rnrn        public static function loadValidatorMetadata($metadata) {rn            $metadata->addPropertyConstraint('baz', new AssertMinLength(10));rn        }rnrn    }rnrn    $validator = new Validator(rn                    new ClassMetadataFactory(new StaticMethodLoader()),rn                    new ConstraintValidatorFactory()rn    );rn    $violations = $validator->validate(new Bar);rn    if ($violations->count()) {rn        throw new Exception($violations);rn    }rnrnI have classes that needs to be validated with ```SymfonyComponentValidator``` and this classes uses ```StaticMethodLoader``` strategy for validation. I declared ```loadValidatorMetadata``` method in interface but ```StaticMethodLoader``` invokes wrong method and following error occures.rnrn    Fatal error: Uncaught exception 'ReflectionException' with message 'Trying to invoke abstract method FooInterface::loadValidatorMetadata()' in Symfony/Component/Validator/Mapping/Loader/StaticMethodLoader.php on line 44rnrn    ReflectionException: Trying to invoke abstract method HeatbeatFooInterface::loadValidatorMetadata() in /Symfony/Component/Validator/Mapping/Loader/StaticMethodLoader.php on line 44rnrnrnLooks like there is a problem with Reflection. ",
        "comments": [
            "What's the point of a static method in an interface?n",
            "I'm using `SymfonyComponentValidator` for validating some Yaml files and i need to declare loadValidatorMetadata for this `Validateable` objects. Only interfaces can have static methods in PHP and does not supports `abstract static function`.n",
            "Are you saying that if you remove the method from the interface, the validator complains?n",
            "Well, it is probably the same kind of issue than #2841: the validator uses Reflection, which means it will not take care of inheritance. So if the validation rule is applied on a parent class or an interface, it will call this method, not the child one. The same stuff seems to occur heren",
            "@bschussek No, when i remove it from interface, Reflection calls correct method. Only i want to use an concept / interface for my `Validateable` objects. nnNow i changed my static method validation constraints to collection constraints and i'm validating it like this https://github.com/import/heatbeat/blob/feature/nodes-and-leafs/lib/Heatbeat/Leaf/AbstractLeaf.php#L54n",
            "Task for the BHD: Add a failing test case to StaticMethodLoaderTest and (optionally) fix it by adding a check to StaticMethodLoader:35 that returns false if the method is abstract.n",
            "> Task for the BHD: Add a failing test case to StaticMethodLoaderTest and (optionally) fix it by adding a check to StaticMethodLoader:35 that returns false if the method is abstract.nnIt's not really possible to have a static abstract method (at least in strict mode). My PR is invalid as it only checks for abstract class.n",
            "reopening as the fix has been revertedn",
            "I know this is an old issue, but I faced the same problem, but with abstract classes. When I declare the loadValidatorMetadata method in an abstract class, this method is called, not the overriding method in the child class.nnSolution is simple: we just need to call isAbstract method on the $reflMethod object in StaticMethodLoader class and return false if is it true.n",
            "@ntomka Can you submit a PR or open a new issue?n"
        ],
        "commits": [
            "Fix for issue #3179",
            "merged branch jakzal/2.0-StaticMethodLoaderFix (PR #3937)nnCommitsn-------nn089188f [Validator] Fixed StaticMethodLoader when used with abstract methods.nnDiscussionn----------nn[Validator] Fixed StaticMethodLoader when used with abstract methods.nnBug fix: yesnFeature addition: nonBackwards compatibility break: nonSymfony2 tests pass: yesnFixes the following tickets: #3179",
            "merged branch bschussek/issue3179 (PR #5069)nnCommitsn-------nn9f4178b [Validator] Fixed: StaticMethodLoader does not try to invoke methods of interfaces anymorennDiscussionn----------nn[Validator] Fixed: StaticMethodLoader does not try to invoke methods of interfaces anymorennBug fix: yesnFeature addition: nonBackwards compatibility break: nonSymfony2 tests pass: yesnFixes the following tickets: #3179nTodo: -"
        ]
    },
    "2915647": {
        "title": "[Validator] UniqueEntityValidator can't validate values of proxy objects",
        "body": "If you have an association and have that as one of your fields for using the SymfonyBridgeDoctrineValidatorConstraintsUniqueEntityValidator the unique validation wont work if your object is a proxy and hasn't had the identifier field hydrated yet.rnrnI didn't know how to put this into a unit test but did work out a very crude fix in the validator that i'm sure isn't suitable to be a patch but I think helps illustrate the problem better.rnrn```phprn            if (isset($class->associationMappings[$fieldName])) {rnrn                // very crude fix to the problemrn                if ($criteria[$fieldName] instanceof DoctrineORMProxyProxy) {rn                    $criteria[$fieldName]->__load();rn                }rnrn                $relatedClass = $em->getClassMetadata($class->associationMappings[$fieldName]['targetEntity']);rn                $relatedId = $relatedClass->getIdentifierValues($criteria[$fieldName]);rnrn                if (count($relatedId) > 1) {rn                    throw new ConstraintDefinitionException(sprintf('Associated entities are not allowed to have more than one identifier field to be part of a unique constraint in %s#%s.', $class->name, $fieldName));rn                }rn                $criteria[$fieldName] = array_pop($relatedId);rn            }rnrn```rnrnI experienced this on Symfony 2.0.9, running on OS X Lion",
        "comments": [
            "I'll take this one.n"
        ],
        "commits": [
            "[DoctrineBridge] Initialize proxies in UniqueEntityValidatornnFixes #3163",
            "merged branch jmikola/doctrine-unique-proxies (PR #3933)nnCommitsn-------nn41bdf26 [DoctrineBridge] Initialize proxies in UniqueEntityValidatornnDiscussionn----------nn[DoctrineBridge] Initialize proxies in UniqueEntityValidatornnBug fix: yesnFeature addition: nonBackwards compatibility break: nonSymfony2 tests pass: [![Build Status](https://secure.travis-ci.org/jmikola/symfony.png?branch=master)](http://travis-ci.org/jmikola/symfony)nFixes the following tickets: #3163nn---------------------------------------------------------------------------nnby stof at 2012-04-13T18:17:57ZnnI think you should use ``$em->initializeObject($value)`` instead (which is a no-op for other objects)nn---------------------------------------------------------------------------nnby jmikola at 2012-04-13T18:24:22Znn@stof: Thanks for the suggestion. I wasn't aware of that method."
        ]
    },
    "2777072": {
        "title": "[Form][Guesser] The prototype is an empty string for a collection which is not one-to-many",
        "body": "The prototype is an empty string for a collection which is not backed by one-to-many relationshiprnrn```phprn{% debug form_widget(form.extraAttributes.get('prototype')) %}rn```rnreturns `string(0) `rnrnrnbuildForm methodrnrn```phprn$builderrn            ->add('images', 'collection', array('type' => new ProductimageType(), 'allow_add' => true, 'allow_delete' => true, 'label'=> 'Imagini', 'prototype' => true ))rn            ->add('extraAttributes', 'collection', array('type' => 'hidden', 'allow_add' => true, 'allow_delete' => true, 'label'=> 'Attribute', 'prototype' => true))rn        ;rn```rn`images` ,which is one-to-many relationship in Doctrine2, displays the prototype properly, whereas `extraAttributes` prototype is emptyrnrnrnField definitions:rnrn```phprn /**rn     * @ORMOneToMany(targetEntity=Productimage, mappedBy=product, orphanRemoval=true, cascade={persist})rn     */rn    private $images;rnrn  /**rn     * @var arrayrn     * @ORMColumn(name=Other, type=array, nullable=true)rn     */rn    private $extraAttributes;rn```rnrnI add rnrn```htmlrn<input class=form-hidden type=hidden id=product_extraAttributes_0_type name=product[extraAttributes][0][type]>rn```rnmanually via javascript, and the engine properly adds fields as intended, so basically everything works except the prototype generation.rn",
        "comments": [
            "I have things working fine for a field mapped as array (and it makes no difference for the Form itself).nnthe real issue is probably about using hidden as type in the collection.n",
            "Same issue for me and no hidden type.nn```n$builder            n        ->add('photos', 'collection', array(n                'type' => new PhotoItemType(),n                'allow_add'    => true,n                'allow_delete' => true,n                'prototype' => true,n        ))n;n```nn`PhotoItemType`nn```n    $buildern        ->add('name', 'text', array(n            'required' => false,n        ))n    ;n```nn`Template`nn```n{{ form.photos.get('prototype') }}n```nn=> outputs an empty stringnnBut the wrapper around the subform has the good value for data-prototype attribute.n",
            "`{{ form.photos.get('prototype') }}` (or alternatively `{{ form.photos.vars.prototype }}`) returns a FormView object that doesn't feature a __toString() method. I'm not sure how Twig handles this case, but it could well be that it simply swallows the error here.nnCan you try `{{ form_widget(form.photos.vars.prototype) }}` instead?n",
            "Task for the BHD: Validate this bug and create a failing test in AbstractLayoutTestn",
            "Could not reproduce this with the latest version (installed by cloning symfony-standard today). The api has changed, so I had to write this : `{% debug form_widget(form.extraAttributes.getVar('prototype')) %}` which outputs this : `string '<input type=hidden id=acme_demobundle_producttype_extraAttributes___name__ name=acme_demobundle_producttype[extraAttributes][__name__] />' (length=143)`n",
            "Ok. Closing.n",
            "i've experienced this issue too with sf 2.1.3 nni was doing smth like nn```n<form>n        {% for hst in form.WorkingHist %}n           <li>{{ form_row(hst) }}</li>n        {% endfor %}n</form>nn<script type=text/javascript>n  prot = {{ form_widget(form.WorkingHist.get('prototype'))|e('js') }};n</script>n```nnAnd my prototype was alway empty .when the collection has 0 elements ... but it was fine if there were at least one element.nni had to put the get prototype before my for loop, then it worked correctly n",
            "@eMerzh Could you please create a fork of symfony-standard that reproduces the problem?n",
            "I have the same issue, and i just solved the problem by moving the prototype above the loop rendering the widget. Thank you for that workaround.n"
        ],
        "commits": []
    },
    "2638748": {
        "title": "[Form][DelegatingValidator] Duplicated error when using a DataTransformer and a NotBlank constraint",
        "body": "If a DataTransformer fails, the value is set to ``null`` in the underlying object. This is logical as we don't have any value to set in it reliably (think for instance of the case where your DataTransformer transforms an id into an object and the setter uses a typehint). But this leads to an issue if the validation has a NotBlank or NotNull constraint on the field as you will then see an error ``This value should not be blank`` on the field (which was not blank in the client data).rnrnSee #2413 for a place where this error occurs often: the repeated type.",
        "comments": [
            "Do we have any updates on this?nAny ideas on how to fix it?nI want to help. Where can I start looking for the solution?n",
            "@bschussek @fabpot do you have time to give your mind on this ?n",
            "DelegatingValidator needs to ignore validation errors on non-synchronized fields. Scheduled for the DelegatingValidator refactoring.n",
            "Interesting. I'd like keep an eye on this.nnCurrently, I use a dirty workaround to simply ignore notblank message.nn``` jinjan            {% set pswdUnmatched = false %}n            {% for error in form.vars.errors if error.messageTemplate == 'password.unmatched' %}n                {% set pswdUnmatched = true  %}n            {% endfor %}n            {% if pswdUnmatched %}n                <ul>n                {% for error in form.vars.errors %}n                    {% if error.messageTemplate != 'Please enter a password' %}n                    <li>{{ error.messageTemplate|trans(error.messageParameters, 'validators') }}</li>n                    {% endif %}n                {% endfor %}n                </ul>n            {% else %}n                {{ form_errors(form) }}n            {% endif %}n```n",
            "@bschussek pingn",
            "Can you please verify if this is fixed by #4341?n",
            "This is fixed by #4341.n",
            "What do we need to get this fix ?n",
            "@fpoirier1 using Symfony 2.1 (currently in RC2)n",
            "Oh I see thanksnnOn Thu, Aug 30, 2012 at 4:41 PM, Christophe Coevoet <nnotifications@github.com> wrote:nn> @fpoirier1 https://github.com/fpoirier1 using Symfony 2.1 (currently inn> RC2)n> n> u2014n> Reply to this email directly or view it on GitHubhttps://github.com/symfony/symfony/issues/2945#issuecomment-8173701.n"
        ],
        "commits": [
            "merged branch bschussek/issue3903 (PR #4341)nnCommitsn-------nn1422506 [Form] Clarified the usage of constraints in the UPGRADE filenaf41a1a [Form] Fixed typosnac69394 [Form] Allowed native framework errors to be mapped as welln59d6b55 [Form] Fixed: error mapping aborts if reaching an unsynchronized formn9eda5f5 [Form] Fixed: RepeatedType now maps all errors to the first fieldn215b687 [Form] Added capability to process . rules in error_mappingnc9c4900 [Form] Fixed: errors are not mapped to unsynchronized forms anymorenc8b61d5 [Form] Renamed FormMapping to MappingRule and moved some logic there to make rules more extendablend0d1fe6 [Form] Added more information to UPGRADE and CHANGELOGn0c09a0e [Form] Made $name parameters optional in PropertyPathBuilder:replaceBy(Index|Property)n081c643 [Form] Updated UPGRADE and CHANGELOGnbbffd1b [Form] Fixed index checks in PropertyPath classesnea5ff77 [Form] Fixed issues mentioned in the PR commentsn7a4ba52 [EventDispatcher] Added class UnmodifiableEventDispatchern306324e [Form] Greatly improved the error mapping done in DelegatingValidationListenern8f7e2f6 [Validator] Fixed: @Valid does not recurse the traversal of collections anymore by defaultn5e87dd8 [Form] Added tests for the case when property_path is null or false. Instead of setting property_path to false, you should set mapped to false instead.n2301b15 [Form] Tightened PropertyPath validation to reject any empty value (such as false)n7ff2a9b Revert [Form] removed a constraint in PropertyPath as the path can definitely be an empty string for errors attached on the main form (when using a constraint defined with the 'validation_constraint' option)n860dd1f [Form] Adapted Form to create a deterministic property path by defaultn03f5058 [Form] Fixed property name in PropertyPathMapperTestnc2a243f [Form] Made PropertyPath deterministic: [prop] always refers to indices (array or ArrayAccess), prop always refers to propertiesn2996340 [Form] Extracted FormConfig class to simplify the Form's constructornnDiscussionn----------nn[Form] Improved the error mapping and made property paths deterministicnnBug fix: yesnFeature addition: nonBackwards compatibility break: **yes**nSymfony2 tests pass: yesnFixes the following tickets: #1971, #2945, #3272, #3308, #3903, #4329nProbably fixes: #2729nTodo: -nnThis PR is ready for review.nnThe algorithm for assigning errors to forms in the form tree was improved a lot. Also the error mapping works better now. There are still a few features to be added (e.g. wildcards *), but these can be implemented now pretty easily.nnThis PR breaks PR in that a form explicitely needs to set the data_class option if it wants to map to an object and needs to leave that option empty if it wants to map to an array.nnFurthermore, property paths must be deterministic now: `foo` now only maps to `(g|s)etFoo()`, but not the index `[foo]` (array or ArrayAccess), while `[foo]` only maps to the latter but not the former. See #3903 for more information.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-19T21:35:24ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1377086) (merged 9e346990 into 22294617).nn---------------------------------------------------------------------------nnby Tobion at 2012-05-20T01:47:48ZnnGood stuff in general :)nn---------------------------------------------------------------------------nnby bschussek at 2012-05-20T09:19:18ZnnFixed everything mentioned here so far.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-20T09:22:22ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1379548) (merged 49918bef into 22294617).nn---------------------------------------------------------------------------nnby Tobion at 2012-05-20T14:29:14Znnmany occurences of two spaces after `@param` (should be only one space).nn---------------------------------------------------------------------------nnby Koc at 2012-05-20T14:40:18ZnnSorry, I'm cannot observe all changes for form component in 2.1, so I have a question:nn```phpn<?phpnnprotected $isPrivate;nnpublic function isPrivate() {}nnpublic function setPrivate() {}n```nnIs it possible validate this property with accessors/mutators from code above in 2.1 now?nn---------------------------------------------------------------------------nnby bschussek at 2012-05-20T14:41:09ZnnThe type after `@param` used to be aligned with the type of the `@return` tag. Let's get the PHPDoc-guidelines straight before nitpicking more on these trivialities.nn---------------------------------------------------------------------------nnby bschussek at 2012-05-20T14:42:34Znn@Koc Please move your question to the user mailing list, let's keep this PR on topic.nn---------------------------------------------------------------------------nnby bschussek at 2012-05-20T14:45:42ZnnFixed everything mentioned until now.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-20T14:47:48ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1380903) (merged 03d60a03 into f433f6b0).nn---------------------------------------------------------------------------nnby bschussek at 2012-05-20T15:18:12ZnnCHANGELOG/UPGRADE is now updated.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-20T15:19:39ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1381047) (merged 48cc3eca into f433f6b0).nn---------------------------------------------------------------------------nnby Tobion at 2012-05-20T16:16:51ZnnAll the deprecated methods and changed constructor arguments should probably be mentioned in the changelog/upgrade.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T07:31:47ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1386621) (merged c0ef69a1 into 1407f112).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T08:01:46ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1386826) (merged 4f3fc1fe into 1407f112).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T09:22:30ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1387263) (merged e3675050 into 1407f112).nn---------------------------------------------------------------------------nnby bschussek at 2012-05-21T09:43:08ZnnThis PR now fixes #1971.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T09:45:51ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1387370) (merged de33f9ef into 1407f112).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T11:06:53ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1387838) (merged da3b562e into 1407f112).nn---------------------------------------------------------------------------nnby bschussek at 2012-05-21T11:07:45ZnnThis PR now fixes #2945.nn---------------------------------------------------------------------------nnby bschussek at 2012-05-21T15:33:33ZnnNative errors (such as invalid, extra_fields etc.) are now respected by the error_mapping option as well. The option validation_constraint was deprecated, constraints is its replacement and a lot handier, because it allows you to work easily with arrays.nn```phpn<?phpn$buildern    ->add('name', 'text', array(n        'constraints' => new NotBlank(),n    ))n    ->add('phoneNumber', 'text', array(n        'constraints' => array(n            new NotBlank(),n            new MinLength(7),n            new Type('numeric')n        )n    ));n```nnReady for review again.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T15:33:45ZnnThis pull request [fails](http://travis-ci.org/symfony/symfony/builds/1390239) (merged e162f56d into ea33d4d3).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T15:40:02ZnnThis pull request [fails](http://travis-ci.org/symfony/symfony/builds/1390367) (merged e8729a7f into ea33d4d3).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T16:06:03ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1390663) (merged ef39aba4 into ea33d4d3).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-22T08:54:36ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1398153) (merged af41a1a5 into e4e3ce6c).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-22T09:26:12ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1398415) (merged 14225067 into e4e3ce6c)."
        ]
    },
    "2356260": {
        "title": "[Form][DelegatingValidator] Form error bubbles to the top with @Collection constraint and arrays",
        "body": "With the following code, errors related to Post->date['year'] are attached to the form instead of the 'year' element:rnrn``` phprn<?phprnclass Postrn{rn    /** @Collection(fields={year=@NotBlank}) */rn    public $date = array('year' => null);rn}rnrn$dateForm = $this->get('form.factory')rn    ->createNamedBuilder('form', 'date')rn    ->add('year', 'text');rnrn$form = $this->get('form.factory')rn    ->createBuilder('form', new Post)rn    ->add($dateForm)rn    ->getForm()rn    ;rnrn$form->bind(array());rnrnecho $form->getErrorsAsString();rnrn```rnrngetErrorsAsString output:rnrn```rnERROR: This value should not be blankrndate:rn    year:rn        No errorsrn```rnrnExpected output:rnrnrn```rndate:rn    year:rn        ERROR: This value should not be blankrn```",
        "comments": [
            "I've managed to workaround this problem by specifying the property path of the year element:nn```n->createBuilder('form', new Post, array(n    'error_mapping' => array(n        'date[year]' => 'date.year',n    ),n))n```nnI've noticed a similar issue when mixing camelCase and under_score names:nn``` phpn<?phpnnclass Postn{n    /** @NotBlank */n    private $userName = 'Joe';nn    function getUserName()n    {n        return $this->userName;n    }nn    function setUserName($name)n    {n        $this->userName = $name;n    }n}nn$form = $this->get('form.factory')n    ->createBuilder('form', new Post)n    ->add('user_name')n    ->getForm()n    ;nn$form->bind(array());nnecho $form->getErrorsAsString();n```nnResult:nn```nERROR: This value should not be blanknuser_name:n    No errorsn```nnThe form works properly, only errors aren't mapped correctly.n",
            "when mixing camelCase and underscores, the result is normal. `userName` and `user_name` can be different properties. The only reason why `user_name` works for the form here is because the conventions to guess the getter name result in the same name in both cases. If you were doing this with a code using reflection instead of the form using the getters, it would fail.n",
            "@arnaud-lb can you check again with master ?n",
            "Task for the BHD: Verify this bug on master and create a failing test case in DelegatingValidatorTestn",
            "@stof @bschussek I can confirm the bug on current mastern",
            "Can you please check whether this is fixed by #4341?n",
            "> Can you please check whether this is fixed by #4341?nnYes it does :) Thanks !n"
        ],
        "commits": [
            "merged branch bschussek/issue3903 (PR #4341)nnCommitsn-------nn1422506 [Form] Clarified the usage of constraints in the UPGRADE filenaf41a1a [Form] Fixed typosnac69394 [Form] Allowed native framework errors to be mapped as welln59d6b55 [Form] Fixed: error mapping aborts if reaching an unsynchronized formn9eda5f5 [Form] Fixed: RepeatedType now maps all errors to the first fieldn215b687 [Form] Added capability to process . rules in error_mappingnc9c4900 [Form] Fixed: errors are not mapped to unsynchronized forms anymorenc8b61d5 [Form] Renamed FormMapping to MappingRule and moved some logic there to make rules more extendablend0d1fe6 [Form] Added more information to UPGRADE and CHANGELOGn0c09a0e [Form] Made $name parameters optional in PropertyPathBuilder:replaceBy(Index|Property)n081c643 [Form] Updated UPGRADE and CHANGELOGnbbffd1b [Form] Fixed index checks in PropertyPath classesnea5ff77 [Form] Fixed issues mentioned in the PR commentsn7a4ba52 [EventDispatcher] Added class UnmodifiableEventDispatchern306324e [Form] Greatly improved the error mapping done in DelegatingValidationListenern8f7e2f6 [Validator] Fixed: @Valid does not recurse the traversal of collections anymore by defaultn5e87dd8 [Form] Added tests for the case when property_path is null or false. Instead of setting property_path to false, you should set mapped to false instead.n2301b15 [Form] Tightened PropertyPath validation to reject any empty value (such as false)n7ff2a9b Revert [Form] removed a constraint in PropertyPath as the path can definitely be an empty string for errors attached on the main form (when using a constraint defined with the 'validation_constraint' option)n860dd1f [Form] Adapted Form to create a deterministic property path by defaultn03f5058 [Form] Fixed property name in PropertyPathMapperTestnc2a243f [Form] Made PropertyPath deterministic: [prop] always refers to indices (array or ArrayAccess), prop always refers to propertiesn2996340 [Form] Extracted FormConfig class to simplify the Form's constructornnDiscussionn----------nn[Form] Improved the error mapping and made property paths deterministicnnBug fix: yesnFeature addition: nonBackwards compatibility break: **yes**nSymfony2 tests pass: yesnFixes the following tickets: #1971, #2945, #3272, #3308, #3903, #4329nProbably fixes: #2729nTodo: -nnThis PR is ready for review.nnThe algorithm for assigning errors to forms in the form tree was improved a lot. Also the error mapping works better now. There are still a few features to be added (e.g. wildcards *), but these can be implemented now pretty easily.nnThis PR breaks PR in that a form explicitely needs to set the data_class option if it wants to map to an object and needs to leave that option empty if it wants to map to an array.nnFurthermore, property paths must be deterministic now: `foo` now only maps to `(g|s)etFoo()`, but not the index `[foo]` (array or ArrayAccess), while `[foo]` only maps to the latter but not the former. See #3903 for more information.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-19T21:35:24ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1377086) (merged 9e346990 into 22294617).nn---------------------------------------------------------------------------nnby Tobion at 2012-05-20T01:47:48ZnnGood stuff in general :)nn---------------------------------------------------------------------------nnby bschussek at 2012-05-20T09:19:18ZnnFixed everything mentioned here so far.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-20T09:22:22ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1379548) (merged 49918bef into 22294617).nn---------------------------------------------------------------------------nnby Tobion at 2012-05-20T14:29:14Znnmany occurences of two spaces after `@param` (should be only one space).nn---------------------------------------------------------------------------nnby Koc at 2012-05-20T14:40:18ZnnSorry, I'm cannot observe all changes for form component in 2.1, so I have a question:nn```phpn<?phpnnprotected $isPrivate;nnpublic function isPrivate() {}nnpublic function setPrivate() {}n```nnIs it possible validate this property with accessors/mutators from code above in 2.1 now?nn---------------------------------------------------------------------------nnby bschussek at 2012-05-20T14:41:09ZnnThe type after `@param` used to be aligned with the type of the `@return` tag. Let's get the PHPDoc-guidelines straight before nitpicking more on these trivialities.nn---------------------------------------------------------------------------nnby bschussek at 2012-05-20T14:42:34Znn@Koc Please move your question to the user mailing list, let's keep this PR on topic.nn---------------------------------------------------------------------------nnby bschussek at 2012-05-20T14:45:42ZnnFixed everything mentioned until now.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-20T14:47:48ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1380903) (merged 03d60a03 into f433f6b0).nn---------------------------------------------------------------------------nnby bschussek at 2012-05-20T15:18:12ZnnCHANGELOG/UPGRADE is now updated.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-20T15:19:39ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1381047) (merged 48cc3eca into f433f6b0).nn---------------------------------------------------------------------------nnby Tobion at 2012-05-20T16:16:51ZnnAll the deprecated methods and changed constructor arguments should probably be mentioned in the changelog/upgrade.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T07:31:47ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1386621) (merged c0ef69a1 into 1407f112).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T08:01:46ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1386826) (merged 4f3fc1fe into 1407f112).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T09:22:30ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1387263) (merged e3675050 into 1407f112).nn---------------------------------------------------------------------------nnby bschussek at 2012-05-21T09:43:08ZnnThis PR now fixes #1971.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T09:45:51ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1387370) (merged de33f9ef into 1407f112).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T11:06:53ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1387838) (merged da3b562e into 1407f112).nn---------------------------------------------------------------------------nnby bschussek at 2012-05-21T11:07:45ZnnThis PR now fixes #2945.nn---------------------------------------------------------------------------nnby bschussek at 2012-05-21T15:33:33ZnnNative errors (such as invalid, extra_fields etc.) are now respected by the error_mapping option as well. The option validation_constraint was deprecated, constraints is its replacement and a lot handier, because it allows you to work easily with arrays.nn```phpn<?phpn$buildern    ->add('name', 'text', array(n        'constraints' => new NotBlank(),n    ))n    ->add('phoneNumber', 'text', array(n        'constraints' => array(n            new NotBlank(),n            new MinLength(7),n            new Type('numeric')n        )n    ));n```nnReady for review again.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T15:33:45ZnnThis pull request [fails](http://travis-ci.org/symfony/symfony/builds/1390239) (merged e162f56d into ea33d4d3).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T15:40:02ZnnThis pull request [fails](http://travis-ci.org/symfony/symfony/builds/1390367) (merged e8729a7f into ea33d4d3).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T16:06:03ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1390663) (merged ef39aba4 into ea33d4d3).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-22T08:54:36ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1398153) (merged af41a1a5 into e4e3ce6c).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-22T09:26:12ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1398415) (merged 14225067 into e4e3ce6c)."
        ]
    },
    "2279872": {
        "title": "[Validator] what about to have MinCount and MaxCount validators",
        "body": "Let's say we have a bloger which can assign from one to five tags to his blog. While submiting the server should count  tags and check whether the collection in the allowed range. It can be done with `Choice` validator and `min` and `max` options. But in this case we have such problems:rnrn* It should fetch all tags from db to check that choices are valid, rn* Very hard to define callback in case of using `$repository->findAll()`rnrnFrom another side we have `MinMax` and `MinLengthMaxLength` validators but they very restrictive (the first takes only integers and second one only strings)rnrnSo I am thinking of moving count validation rules from Choice to a new validators called `MinCount` and `MaxCount`rnrnBTW I can do a PR if you find it useful.",
        "comments": [
            "I agree.nBut I don't know what the best solution:n- Solution 1: Keep `min` and `max` options in `Choice` validator (it's useful) and create new additionals validators called `MinCount` / `MaxCount` n- Solution 2: Move count validation rules from `Choice` to news validators called `MinCount` / `MaxCount` nnI have a preference for the first solution.n",
            "It also could be one valldator `Count` with two options `min` and `max` (instead of `MinCount / MaxCount`)n",
            "Yes, I think it's bettern",
            "@bschussek what do you think about it ?n",
            "I would prefer a `Size` validator that works on arrays.n",
            "Task for the BHD: Change SizeValidator to accept any Countable object.n",
            "fixed by #4149 (and the [Size](https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Validator/Constraints/Size.php) constraint)n"
        ],
        "commits": []
    },
    "2170024": {
        "title": "[HttpFoundation] UploadedFile needs Locale parameter to pass",
        "body": "Because function basename() is locale aware, the constructor need to pass a locale parameter and set it in constructor. Without setting a locale non-latin first characters cut off from beginning until a latin letter or a non-letter character found in the name.rnrnfrom HttpFoundationFileUploadedFile.phprnrn      rn        $this->originalName = basename($originalName);rn        $this->mimeType = $mimeType ?: 'application/octet-stream';rn        $this->size = $size;rn        $this->error = $error ?: UPLOAD_ERR_OK;rn        $this->test = (Boolean) $test;rnrn        parent::__construct($path, UPLOAD_ERR_OK === $this->error);rn    }rnrnShould be like this (an example):rn        setlocale(LC_ALL, 'ru_RU.UTF8');rn        $this->originalName = basename($originalName);rn        $this->mimeType = $mimeType ?: 'application/octet-stream';rn        $this->size = $size;rn        $this->error = $error ?: UPLOAD_ERR_OK;rn        $this->test = (Boolean) $test;rnrn        parent::__construct($path, UPLOAD_ERR_OK === $this->error);rn    }",
        "comments": [
            "Maybe just :nn``` phpn<?phpn$this->originalName = substr(strrchr(str_replace('', '/', $originalName), '/'), 1);n```nnBTW why use `basename` ?n",
            "@fabpot pingn",
            "@fabpot pingn",
            "@fabpot pingn",
            "@fabpot pingn",
            "Imho, this should not modify the value that comes from the browser - one might need it as raw value.nnThis check should matter only if you are trying to directly save the uploaded file without specifying a filename to be used.n",
            "@fabpot pingn",
            "@dinamic this value could be forged so sanitization is required.nnCould anyone submit a PR with the fix suggested by @stealth35 + unit tests.nnThanks.n",
            "@vicb I meant to say that the sanitization which is performed is going to be needed _only_ if you rely on the $originalName to return you a value, which would be safe to use on the current system. Doing so however should fall beyond the scope of this class.nnLet me explain more promptly my point of view.nnI will give you an example case:n- I want to upload a file named auxn- The server is powered by Windows NTnnWhile this is perfectly valid case and you will have no troubles running it under *NIX, you will fall into trouble if your hosting service is running on Windows-based OS, as the AUX is a reserved filename there.nnMore information: http://en.wikipedia.org/wiki/Filename#Reserved_characters_and_wordsnnImho, the value of originalName should not be filtered and it has to be up for the developer to choose a filename for the uploaded file. If some filtration has to be applied, it should be minimal and the developer should have access to the unmodified value.nn_Note: if we accept that the value would not be filtered, it has to be reflected into the docs and stress how important is to not rely on the safety of the value._n",
            "The purpose of the sanitization is not the make the name bullet proof but to prevent security issues (there is no way to prevent a developer from using it even if he must not) - the $originalName can still contain reserved characters or be a reserved name.nn`getClientOriginalName()` already has a warning in its phpDoc: `Then is should not be considered as a safe value.`nnWhat would be the advantage of having access to the unfiltered name ?n",
            "Well, it would prevent us from getting one value from the client of our website and display a different one.nnWe could filter it, off course, but it has to be up for the developer to decide it and the framework should not force filtration. Otherwise, some developers might just go backward and use the $_FILES array to get the job done.n",
            "The sanitization removes the path segment and leaves only the basename. I have just re-tested (w/ chrome & ff) and only the basename is sent by the browser, meaning that the sanitization is transparent and will only have an effect on forged values.nnThere must be something I don't get ?n",
            "Dunno, I just hate it when there's a restriction which might cause a bug in your application and you can't get the raw value and process it by yourself. Right now, we have multiple opened issues because of this and I cannot implement a workaround without actually modifying the sf2 code or completely handle the upload process, validation and entity creation by myself.nnI just want a getter method which would return the unaltered value, so if the new sanitization blocks me or anyone else - he could handle it gracefully until fixed.n",
            "> Dunno, I just hate it when there's a restriction which might cause a bug in your application and you can't get the raw value and process it by yourself. Right now, we have multiple opened issues because of this and I cannot implement a workaround without actually modifying the sf2 code or completely handle the upload process, validation and entity creation by myself.nnAs stated in my last comment, you'll get the raw value unless someone forges a request, how could that cause issues ?n",
            "Well, I believe the same intention applied while setting `basename()` in first place :)n"
        ],
        "commits": [
            "[HttpFoundation] Fix the UploadedFilename name sanitization (fix #2577)",
            "merged branch vicb/uploadedfile2.0 (PR #4358)nnCommitsn-------nn8223632 [HttpFoundation] Fix the UploadedFilename name sanitization (fix #2577)nnDiscussionn----------nn[HttpFoundation] Fix the UploadedFilename name sanitization (fix #2577)nnBug fix: yesnFeature addition: nonBackwards compatibility break: nonSymfony2 tests pass: [![Build Status](https://secure.travis-ci.org/vicb/symfony.png?branch=uploadedfile2.0)](http://travis-ci.org/vicb/symfony)nFixes the following tickets: #2577nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T14:00:22ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1389203) (merged 82236324 into 87bb3661).",
            "Merge branch '2.0'nn* 2.0:n  fixed CSn  [HttpFoundation] Fix the UploadedFilename name sanitization (fix #2577)",
            "merged branch helios-ag/patch (PR #5496)nnThis PR was squashed before being merged into the 2.0 branch (closes #5496).nnCommitsn-------nn9872d26 [HttpFoundation] Fix name sanitization after perfoming movennDiscussionn----------nn[HttpFoundation] Fix name sanitization after perfoming movennBug fix: yesnFeature addition: nonBackwards compatibility break: nonSymfony2 tests pass: yesnFixes the following tickets: #2577nLicense of the code: MITnnFurther work on #2577, fixes name sanitization, after moving file name with new name with non latin characters in the beginning.nn---------------------------------------------------------------------------nnby stloyd at 2012-09-12T09:52:05ZnnYou must revert chmod changes.nn---------------------------------------------------------------------------nnby helios-ag at 2012-09-12T14:30:36Znn@stloyd fixednn---------------------------------------------------------------------------nnby stof at 2012-10-13T21:12:43Znn@fabpot what is the status of this PR ?"
        ]
    },
    "2056030": {
        "title": "[Validator] Allow Callback validator to be put on a field",
        "body": "Hey there,rnrnIs there a reason I'm missing that the callback validator *must* be applied to a class and not to a property?rnI need to blacklist values from a property and I'm forced to apply the validator to the class.",
        "comments": [
            "Because Constraints called on a property level are called with direct reference to validated property, they do not have access to validated object, thus they can't call methods on it.n",
            "@bschussek pingn",
            "@canni Did you ever send a pull request for the commit referencing the issue ?n",
            "I'll try to do itn",
            "@stof my implementation was somehow ugly, thats why I never done a PR for thisn",
            "Closing this issue as PR #3939 is where the discussion happens now.n"
        ],
        "commits": [
            "[Validator] Allow Callback validator to be defined on property levelnIssue #2480",
            "merged branch bschussek/issue2480 (PR #9133)nnThis PR was merged into the master branch.nnDiscussionn----------nn[Validator] Simplified usage of the Callback constraintnn| Q             | An| ------------- | ---n| Bug fix?      | non| New feature?  | yesn| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | fixes #2480, replaces #3939n| License       | MITn| Doc PR        | symfony/symfony-docs#3012nnCommitsn-------nncccb1db [Validator] Simplified usage of the Callback constraint"
        ]
    },
    "1415333": {
        "title": "[Form][DelegatingValidator] RepeatedType error keeps on bubbling to root form",
        "body": "When RepeatedType is nested inside another form, error messages such as This value should not be blank bubble up to the root form, instead of appearing above the field in the nested form.rnrnTo illustrate this issue, I have put together the following example:rnrn* Two types where one is nested in the other (child inside parent).rn* Both types have the RepeatedType field.rn* Both RepeatedType fields are NotBlank.rnrnAs you can see, the error message for the RepeatedType in the main type, appears right above the fields, but this doesn't happen for the nested type.rnrn![Screenshot](https://lh4.googleusercontent.com/-J-fC_SSILqM/Tkh8HkaFA9I/AAAAAAAAABg/rhRPP52nizQ/screenshot.png)rnrnHere are the types and models that can be used to demonstrate the issue:rnrn    class RegistrationParentrn    {rn        public $registrationChild;rnrn        /**rn         * @AssertNotBlank()rn         */rn        public $plainPassword;rn    }rnrnrn    class RegistrationChildrn    {rn        /**rn         * @AssertNotBlank()rn         */rn        public $plainPassword;rn    }rnrnrn    class RegistrationParentFormType extends AbstractTypern    {rn       public function buildForm(FormBuilder $builder, array $options)rn       {rn       $builderrn          ->add('registrationChild', new RegistrationChildFormType())rn          ->add('plainPassword', 'repeated', array(rn             'type' => 'password',rn          ))rn       ;rn     }rnrnrn    class RegistrationChildFormType extends AbstractTypern    {rn       public function buildForm(FormBuilder $builder, array $options)rn       {rn          $builderrn             ->add('plainPassword', 'repeated', array(rn                'type' => 'password',rn             ))rn          ;rn     }rn",
        "comments": [
            "I have this same issue. Any luck figuring out a fix or workaround?n",
            "Nope, I kind of gave up on it... To put a workaround together you would need to know the form and validation architecture inside-out, and I have not gotten that far yet.n",
            "I was able to workaround the issue on the repeated password field. But I'm having the same issue in a form with FOSUserBundle password reset form now with no hope of fixing it...n",
            "Do you mind sharing your workaround solution?n",
            "Sure, I just used the password field as type password, then included another field with property_path set to false. then created a validation method to set an error like this... n...nuse SymfonyComponentFormFormBuilder;nuse SymfonyComponentFormFormError;nuse SymfonyComponentFormCallbackValidator;n....nnpublic function buildForm(FormBuilder $builder, array $options)n{n    $buildern        ->add('Password', 'password')n        ->add('Confirm', 'password', array('property_path' => false))n}nn$builder->addValidator(new CallbackValidator(function($form)n{n    if($form['Confirm']->getData() != $form['Password']->getData()) {n        $form['Confirm']->addError(new FormError('Passwords must match.'));n    }n}));nnThen I created a form theme to style the error message. But I cant figure out how to do this in the password reset form in FOSUserBundle for the Current field. I'm guessing because the field doesn't exist in the Model, the error belongs to the form? ugh... n",
            "RepeatedType should use the error_mapping option, which currently is not able of coping with this situation. To be fixed in the DelegatingValidator refactoring.n",
            "I have the same issue, but when I have nested forms.n",
            "@bschussek pingn",
            "have the same issue when having nested formsn",
            "Task for the BHD: Add failing tests to Abstract[Div|Table]LayoutTestn",
            "I'm looking into this.n",
            "Can you please verify if this is fixed by #4341?n",
            "Fixed by #4341.n",
            "So, I have the same issue. Is it fixed in version 2.1 or is there a patch possibility for version 2 as well?n",
            "@babelduo This ticket is closed because it has been fixed in 2.1. There is no patch possible for 2.0 as fixing the issue required rewriting the way error are mapped on forms, which is not a simple bugfix.n"
        ],
        "commits": [
            "merged branch bschussek/issue3903 (PR #4341)nnCommitsn-------nn1422506 [Form] Clarified the usage of constraints in the UPGRADE filenaf41a1a [Form] Fixed typosnac69394 [Form] Allowed native framework errors to be mapped as welln59d6b55 [Form] Fixed: error mapping aborts if reaching an unsynchronized formn9eda5f5 [Form] Fixed: RepeatedType now maps all errors to the first fieldn215b687 [Form] Added capability to process . rules in error_mappingnc9c4900 [Form] Fixed: errors are not mapped to unsynchronized forms anymorenc8b61d5 [Form] Renamed FormMapping to MappingRule and moved some logic there to make rules more extendablend0d1fe6 [Form] Added more information to UPGRADE and CHANGELOGn0c09a0e [Form] Made $name parameters optional in PropertyPathBuilder:replaceBy(Index|Property)n081c643 [Form] Updated UPGRADE and CHANGELOGnbbffd1b [Form] Fixed index checks in PropertyPath classesnea5ff77 [Form] Fixed issues mentioned in the PR commentsn7a4ba52 [EventDispatcher] Added class UnmodifiableEventDispatchern306324e [Form] Greatly improved the error mapping done in DelegatingValidationListenern8f7e2f6 [Validator] Fixed: @Valid does not recurse the traversal of collections anymore by defaultn5e87dd8 [Form] Added tests for the case when property_path is null or false. Instead of setting property_path to false, you should set mapped to false instead.n2301b15 [Form] Tightened PropertyPath validation to reject any empty value (such as false)n7ff2a9b Revert [Form] removed a constraint in PropertyPath as the path can definitely be an empty string for errors attached on the main form (when using a constraint defined with the 'validation_constraint' option)n860dd1f [Form] Adapted Form to create a deterministic property path by defaultn03f5058 [Form] Fixed property name in PropertyPathMapperTestnc2a243f [Form] Made PropertyPath deterministic: [prop] always refers to indices (array or ArrayAccess), prop always refers to propertiesn2996340 [Form] Extracted FormConfig class to simplify the Form's constructornnDiscussionn----------nn[Form] Improved the error mapping and made property paths deterministicnnBug fix: yesnFeature addition: nonBackwards compatibility break: **yes**nSymfony2 tests pass: yesnFixes the following tickets: #1971, #2945, #3272, #3308, #3903, #4329nProbably fixes: #2729nTodo: -nnThis PR is ready for review.nnThe algorithm for assigning errors to forms in the form tree was improved a lot. Also the error mapping works better now. There are still a few features to be added (e.g. wildcards *), but these can be implemented now pretty easily.nnThis PR breaks PR in that a form explicitely needs to set the data_class option if it wants to map to an object and needs to leave that option empty if it wants to map to an array.nnFurthermore, property paths must be deterministic now: `foo` now only maps to `(g|s)etFoo()`, but not the index `[foo]` (array or ArrayAccess), while `[foo]` only maps to the latter but not the former. See #3903 for more information.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-19T21:35:24ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1377086) (merged 9e346990 into 22294617).nn---------------------------------------------------------------------------nnby Tobion at 2012-05-20T01:47:48ZnnGood stuff in general :)nn---------------------------------------------------------------------------nnby bschussek at 2012-05-20T09:19:18ZnnFixed everything mentioned here so far.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-20T09:22:22ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1379548) (merged 49918bef into 22294617).nn---------------------------------------------------------------------------nnby Tobion at 2012-05-20T14:29:14Znnmany occurences of two spaces after `@param` (should be only one space).nn---------------------------------------------------------------------------nnby Koc at 2012-05-20T14:40:18ZnnSorry, I'm cannot observe all changes for form component in 2.1, so I have a question:nn```phpn<?phpnnprotected $isPrivate;nnpublic function isPrivate() {}nnpublic function setPrivate() {}n```nnIs it possible validate this property with accessors/mutators from code above in 2.1 now?nn---------------------------------------------------------------------------nnby bschussek at 2012-05-20T14:41:09ZnnThe type after `@param` used to be aligned with the type of the `@return` tag. Let's get the PHPDoc-guidelines straight before nitpicking more on these trivialities.nn---------------------------------------------------------------------------nnby bschussek at 2012-05-20T14:42:34Znn@Koc Please move your question to the user mailing list, let's keep this PR on topic.nn---------------------------------------------------------------------------nnby bschussek at 2012-05-20T14:45:42ZnnFixed everything mentioned until now.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-20T14:47:48ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1380903) (merged 03d60a03 into f433f6b0).nn---------------------------------------------------------------------------nnby bschussek at 2012-05-20T15:18:12ZnnCHANGELOG/UPGRADE is now updated.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-20T15:19:39ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1381047) (merged 48cc3eca into f433f6b0).nn---------------------------------------------------------------------------nnby Tobion at 2012-05-20T16:16:51ZnnAll the deprecated methods and changed constructor arguments should probably be mentioned in the changelog/upgrade.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T07:31:47ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1386621) (merged c0ef69a1 into 1407f112).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T08:01:46ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1386826) (merged 4f3fc1fe into 1407f112).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T09:22:30ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1387263) (merged e3675050 into 1407f112).nn---------------------------------------------------------------------------nnby bschussek at 2012-05-21T09:43:08ZnnThis PR now fixes #1971.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T09:45:51ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1387370) (merged de33f9ef into 1407f112).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T11:06:53ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1387838) (merged da3b562e into 1407f112).nn---------------------------------------------------------------------------nnby bschussek at 2012-05-21T11:07:45ZnnThis PR now fixes #2945.nn---------------------------------------------------------------------------nnby bschussek at 2012-05-21T15:33:33ZnnNative errors (such as invalid, extra_fields etc.) are now respected by the error_mapping option as well. The option validation_constraint was deprecated, constraints is its replacement and a lot handier, because it allows you to work easily with arrays.nn```phpn<?phpn$buildern    ->add('name', 'text', array(n        'constraints' => new NotBlank(),n    ))n    ->add('phoneNumber', 'text', array(n        'constraints' => array(n            new NotBlank(),n            new MinLength(7),n            new Type('numeric')n        )n    ));n```nnReady for review again.nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T15:33:45ZnnThis pull request [fails](http://travis-ci.org/symfony/symfony/builds/1390239) (merged e162f56d into ea33d4d3).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T15:40:02ZnnThis pull request [fails](http://travis-ci.org/symfony/symfony/builds/1390367) (merged e8729a7f into ea33d4d3).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-21T16:06:03ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1390663) (merged ef39aba4 into ea33d4d3).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-22T08:54:36ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1398153) (merged af41a1a5 into e4e3ce6c).nn---------------------------------------------------------------------------nnby travisbot at 2012-05-22T09:26:12ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1398415) (merged 14225067 into e4e3ce6c)."
        ]
    },
    "1346672": {
        "title": "An exception is thrown when the firewall matches a inexistent url and try to redirect to a route using the locale",
        "body": "When using a login route with the pattern ``/{_locale}/login``, the redirection works well when accessing an existing url secured by the firewall. But when accessing a inexistent url that matches the access control rule (easy when the rule secures ``^/admin``), the redirection to the login url fails with this exception:rnrn```rnThe fos_user_security_login route has some missing mandatory parameters (_locale).rn500 Internal Server Error - MissingMandatoryParametersException rn```",
        "comments": [
            "To improve this, i18n routing would need to be supported by the Routing component. Right now, this implementation is a bit hackish.n",
            "Btw, are you using one of these bundles JMSI18nRoutingBundle, BeSimpleI18nRoutingBundle ?n",
            "In this case, no. Simply the core router.n",
            "I don't think we can fix this in core, you'll need to overwrite the HttpUtils class and add whatever logic is necessary to determine the correct locale.n",
            "Well, I'm using only the core tool in this case so it should be fixed in the core.nIMO, it should default to the locale from the session when it does not have it from the route (just like the router does, except that the logic of the router has not been done yet when the firewall is used as it is run after intentionally)n",
            "I thought that was the case already, but after looking at the code this part of the code seems to be unreachable atm.n",
            "This should be fixed now as the hackish part of HttpUtils has been removed. Can you confirm and close? Thanks.n",
            "There is the same bug inside error 404 page (with or without firewall).nnFor example (the `homepage` route has the pattern `/{_locale}/home`) :nThe `app/Resources/TwigBundle/views/Exception/error404.html.twig` file :nn```n{% extends '::layout.html.twig' %}nn{% block body %}n        <h1>{% trans %}Error 404{% endtrans %}</h1>n        {% trans %}Page not found{% endtrans %}n{% endblock %}n```nnAnd the `app/Resources/views/layout.html.twig` :nn```n<!DOCTYPE html>n<html lang={{ app.session.locale }}>n    <head>n        ....n    </head>n    <body>n        ....n        <div id=menu>n            <a href={{ path('homepage') }}>Home</a>n        </div>n        ....n        {% block body %}{% endblock %}n    </body>n</html>n```nnWhen accessing a inexistent url, the exception is thrown: nn```nException thrown when handling an exception (Twig_Error_Runtime: An exception has been thrown during the rendering of a template (The homepage route has some missing mandatory parameters (_locale).) in ::layout.html.twign```nnIs it necessary to open a new issue ?n",
            "Task for the BHD: check if the issue still exists in 2.0 / 2.1n",
            "The error is still here. i'm searching to fix it.n",
            "so i talked with fabpot, and the _locale is passed throw the url, and because of a 404 error, we can't know what is the _local from the url who is unknown.nSo to prevent this kind of error you need to passe default _locale into your routing or with the {{path()}} function.nBut there is no full support for this problem.n",
            "this isssue can be claused (source @fabpot )n"
        ],
        "commits": []
    },
    "1322186": {
        "title": "$_format is lost on failure_forward",
        "body": "I've been debugging this for the past few days but to no avail.rnrnThis is the excerpt from my security file:rnrn```rnsecurity:rn    firewalls:rn        default_json:rn            poshtar_login:rn                login_path: /login.jsonrn                check_path: /login.jsonrn                failure_forward: truern            context: storern            anonymous:  ~rn            logout:     { path: /logout }rn            pattern:    /.*rn            provider:   poshtarrn```rnrnWhat I was able to figure out using a debugger is that the content type for subresponse? is set correctly to json, but sometime later, when responses get merged? and the request is asked again for a format the request returns html as the attributes bag is empty (controller resolver set the proper format in subrequest) so data sent to the browser has a wrong content type.",
        "comments": [
            "@mvrhov did #3564 fix your issue ?n",
            "Can you give me a couple of days to confirm. I have to update an app using ~one year old experimental forms branch, which is also using custom auth providers.n",
            "I still haven't had the time to fully update my code to be able confirm this.n",
            "Task for the BHD: check if this issue still exists in 2.0 / 2.1n",
            "@vicb: aa53b887d111aca141682258f85d279139f11079 (i.e. the #3564 fix) did not fix the issue, but 347053c363aac66e79e91a3c0a205e417521c153 did; therefore the issue exists in [v2.0.15](https://github.com/symfony/symfony-standard/tree/v2.0.15) but not in [v2.1.0-BETA1](https://github.com/symfony/symfony-standard/tree/v2.1.0-BETA1). A test case is available at https://gist.github.com/3007325n",
            "@vicb This issue is fixed then?n",
            "Closing this issue as it is fixed in master.n"
        ],
        "commits": []
    },
    "1288490": {
        "title": "http basic authentication broken with PHP as cgi/fastCGI under Apache",
        "body": "The keys PHP_AUTH_USER and PHP_AUTH_PW are not present in the superglobal $_SERVER, so http basic authentication needs to be handled a little differently.rnrnThis also affects functional tests which require http basic auth to authenticate.rnrnBasically the workaround is two parts:rnrn1. A rewrite rule to pack the username and password into an environment variable:rnrn    <IfModule mod_rewrite.c>rn        RewriteEngine onrn        RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization},L]rn    </IfModule>rnrn2. Extract the info from the environment variable:rnrn    list($_SERVER['PHP_AUTH_USER'], $_SERVER['PHP_AUTH_PW']) = explode(':' , base64_decode(substr($_SERVER['HTTP_AUTHORIZATION'], 6)));rnrnrnSee below for more details.rnrnhttp://orangejuiceliberationfront.com/http-auth-with-php-in-cgi-mode-e-g-on-dreamhost/rnhttp://www.besthostratings.com/articles/http-auth-php-cgi.htmlrnrnrn",
        "comments": [
            "What about using the `apache_request_headers()` function ?nnSee: https://github.com/symfony/symfony/issues/1510n",
            "@fabpot, should we maybe add some extra abstraction for this to the Request class?n",
            "+1, the request should definitly abstract this.n",
            "The following works as a temporary workaround:nnapp_dev.php:nn```nif( !isset($_SERVER['PHP_AUTH_USER']) )n{n    if (isset($_SERVER['HTTP_AUTHORIZATION']) && (strlen($_SERVER['HTTP_AUTHORIZATION']) > 0)){n        list($_SERVER['PHP_AUTH_USER'], $_SERVER['PHP_AUTH_PW']) = explode(':', base64_decode(substr($_SERVER['HTTP_AUTHORIZATION'], 6)));n        if( strlen($_SERVER['PHP_AUTH_USER']) == 0 || strlen($_SERVER['PHP_AUTH_PW']) == 0 )n        {n            unset($_SERVER['PHP_AUTH_USER']);n            unset($_SERVER['PHP_AUTH_PW']);n        }n    }n}n```nnweb/.htaccessnn```n<IfModule mod_rewrite.c>nRewriteEngine OnnRewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization},L] RewriteCond %{REQUEST_FILENAME} !-fnRewriteRule ^(.*)$ app.php [QSA,L]n</IfModule>n```n",
            "It works fine for me with FastCGI and Nginx.nnCan you paste the whole output of `$_SERVER` when not using the workaround?n",
            "Here is the output of $_SERVER without the workaround:nn```n    Arrayn    (n        [ALLUSERSPROFILE] => C:ProgramDatan        [APPDATA] => C:windowssystem32configsystemprofileAppDataRoamingn        [asl_log] => Destination=filen        [CLASSPATH] => .;C:Program FilesJavajre6libextQTJava.zipn        [CommonProgramFiles] => C:Program FilesCommon Filesn        [COMPUTERNAME] => HPn        [ComSpec] => C:windowssystem32cmd.exen        [DB2INSTANCE] => DB2n        [FP_NO_HOST_CHECK] => NOn        [LOCALAPPDATA] => C:windowssystem32configsystemprofileAppDataLocaln        [NUMBER_OF_PROCESSORS] => 4n        [OnlineServices] => Online Servicesn        [OS] => Windows_NTn        [Path] => C:windowssystem32;C:windows;C:windowsSystem32Wbem;C:windowsSystem32WindowsPowerShellv1.0;c:Program FilesHewlett-PackardDrive Encryption;C:Program FilesWIDCOMMBluetooth Software;C:Program FilesBroadcomBroadcom 802.11Driver;C:Program FilesQuickTimeQTSystem;C:Program FilesZendZendServerbinn        [PATHEXT] => .COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSCn        [PCBRAND] => sn        [PHPRC] => C:Program FilesZendZendServeretcn        [PHP_FCGI_MAX_REQUESTS] => 10000n        [Platform] => BNBn        [PROCESSOR_ARCHITECTURE] => x86n        [PROCESSOR_IDENTIFIER] => x86 Family 6 Model 37 Stepping 5, GenuineInteln        [PROCESSOR_LEVEL] => 6n        [PROCESSOR_REVISION] => 2505n        [ProgramData] => C:ProgramDatan        [ProgramFiles] => C:Program Filesn        [PSModulePath] => C:windowssystem32WindowsPowerShellv1.0Modulesn        [PTSM_install_path] => c:Program FilesHewlett-PackardHP ProtectTools Security ManagerBinn        [PUBLIC] => C:UsersPublicn        [QTJAVA] => C:Program FilesJavajre6libextQTJava.zipn        [SystemDrive] => C:n        [SystemRoot] => C:windowsn        [TEMP] => C:UsersUserAppDataLocalTempn        [TMP] => C:windowsTEMPn        [USERDOMAIN] => WORKGROUPn        [USERNAME] => HP$n        [USERPROFILE] => C:windowssystem32configsystemprofilen        [windir] => C:windowsn        [AP_PARENT_PID] => 688n        [_FCGI_CLIENT_PID_] => 2244n        [_FCGI_MUTEX_] => 776n        [_FCGI_NTAUTH_IMPERSONATE_] => 1n        [_FCGI_SHUTDOWN_EVENT_] => 772n        [FCGI_ROLE] => RESPONDERn        [HTTP_HOST] => localhostn        [HTTP_USER_AGENT] => Mozilla/5.0 (Windows NT 6.1; rv:8.0) Gecko/20100101 Firefox/8.0n        [HTTP_ACCEPT] => text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8n        [HTTP_ACCEPT_LANGUAGE] => en-us,en;q=0.5n        [HTTP_ACCEPT_ENCODING] => gzip, deflaten        [HTTP_ACCEPT_CHARSET] => ISO-8859-1,utf-8;q=0.7,*;q=0.7n        [HTTP_CONNECTION] => keep-aliven        [HTTP_COOKIE] => __utma=1.441182227.1321189418.1322498628.1323267653.4; __utmz=1.1321189418.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); ZDEDebuggerPresent=php,phtml,php3; PHPSESSID=nqtap9dur6uja1rjjumcttmc25n        [HTTP_CACHE_CONTROL] => max-age=0n        [PATH] => C:windowssystem32;C:windows;C:windowsSystem32Wbem;C:windowsSystem32WindowsPowerShellv1.0;c:Program FilesHewlett-PackardDrive Encryption;C:Program FilesWIDCOMMBluetooth Software;C:Program FilesBroadcomBroadcom 802.11Driver;C:Program FilesZendZendServerbin;C:Program FilesZendZendServershareZendFrameworkbin;C:Program FilesZendMySQL51bin;C:Program FilesGitcmd;C:Program FilesGitbin;C:Program FilesTortoiseSVNbin;C:Program FilesCommon FilesHPDigital Imagingbin;C:Program FilesHPDigital Imagingbin;C:Program FilesHPDigital ImagingbinQtQt 4.3.3;C:Program FilesQuickTimeQTSystem;n        [COMSPEC] => C:windowssystem32cmd.exen        [WINDIR] => C:windowsn        [SERVER_SIGNATURE] => n        [SERVER_SOFTWARE] => Apache/2.2.16 (Win32) mod_ssl/2.2.16 OpenSSL/0.9.8on        [SERVER_NAME] => localhostn        [SERVER_ADDR] => 127.0.0.1n        [SERVER_PORT] => 80n        [REMOTE_ADDR] => 127.0.0.1n        [DOCUMENT_ROOT] => C:/Program Files/Zend/Apache2/htdocsn        [SERVER_ADMIN] => admin@example.comn        [SCRIPT_FILENAME] => C:/Program Files/Zend/Apache2/htdocs/MySite/web/app_dev.phpn        [REMOTE_PORT] => 1740n        [GATEWAY_INTERFACE] => CGI/1.1n        [SERVER_PROTOCOL] => HTTP/1.1n        [REQUEST_METHOD] => GETn        [QUERY_STRING] => n        [REQUEST_URI] => /MySite/web/app_dev.php/n        [SCRIPT_NAME] => /MySite/web/app_dev.phpn        [PATH_INFO] => /n        [PATH_TRANSLATED] => C:Program FilesZendApache2htdocsindex.htmln        [PHP_SELF] => /MySite/web/app_dev.php/n        [REQUEST_TIME] => 1324019271n        [argv] => Arrayn            (n            )nn        [argc] => 0n    )nn```n",
            "Finally I've made a working patch for that, I'll submit it as soon as I figure out how to submit a patch... ;)n",
            "http://help.github.com/send-pull-requests/n",
            "Task for the BHD: update the associated PR #3551 (there are some comments there)n",
            "working on this issue today...n",
            "has a working PR, just needs review: #3551n",
            "private $username = 'test';n    private $password = 'test';npublic function test_auth() {n       if($this->authenticate_user()){n           echo 'login';exit;n       }else{n           echo 'failed';exit;n       }n    }nn```npublic function authenticate_user(){n    if( !isset($_SERVER['PHP_AUTH_USER']) )n    {n        header('HTTP/1.0 401 Unauthorized');n        header('HTTP/1.1 401 Unauthorized');n        header('WWW-Authenticate: Basic realm=Realm');n        echo You must login to use this service; // User sees this if hit canceln        die();            n    }else{n        if($this->username != $_SERVER['PHP_AUTH_USER'] || $this->password != $_SERVER['PHP_AUTH_PW']){n            header('HTTP/1.0 401 Unauthorized');n            header('HTTP/1.1 401 Unauthorized');n            header('WWW-Authenticate: Basic realm=Realm');n            echo You must login to use this service; // User sees this if hit canceln            die();n        }else{n            return true;n        }n    }n}n```n",
            "    # make HTTP Basic Authentication work on php5-fcgi installsrn    <IfModule mod_fcgid.c>rn        RewriteCond %{HTTP:Authorization} .rn        RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]rn    </IfModule>",
            "thanks for this post, bug fixes and comments - I got this workaround to work on non symfony, managed to patched thttpd web server and PHP Navigator file manager with your workarounds."
        ],
        "commits": [
            "[HttpFoundation] HTTP Basic authentication is broken with PHP as cgi/fastCGI under ApachennBug fix: yesnFeature addition: nonBackwards compatibility break: nonSymfony2 tests pass: yesnFixes the following tickets: #1813nTodo: -nnIn order to work, add this to the .htaccess:nnRewriteEngine onnRewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]nRewriteCond %{REQUEST_FILENAME} !-fnRewriteRule ^(.*)$ app.php [QSA,L]",
            "merged branch kepten/ticket_1813 (PR #3551)nnCommitsn-------nna450d00 [HttpFoundation] HTTP Basic authentication is broken with PHP as cgi/fastCGI under ApachennDiscussionn----------nn[HttpFoundation] HTTP Basic authentication is broken with php-cgi under ApachennBug fix: yesnFeature addition: nonBackwards compatibility break: nonSymfony2 tests pass: yesnFixes the following tickets: #1813nTodo: -nnIn order to work, add this to the .htaccess:nnRewriteEngine onnRewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]nRewriteCond %{REQUEST_FILENAME} !-fnRewriteRule ^(.*)$ app.php [QSA,L]nn---------------------------------------------------------------------------nnby stof at 2012-03-10T17:34:26Znnyou should also add a unit test for thisnn---------------------------------------------------------------------------nnby kepten at 2012-03-11T15:34:04ZnnThanks for the feedback, I committed the changes.nn---------------------------------------------------------------------------nnby stof at 2012-04-04T01:59:53Znn@fabpot could you review it ?nn---------------------------------------------------------------------------nnby fabpot at 2012-04-04T07:15:34ZnnMy comments:nn * `ServerBag` represents what we have in the `$_SERVER` global variables. As such, the code should be moved to the `getHeaders()` method instead like the other tweaks we do for the HTTP headers.nn * A comment must be added explaining why this is needed and the configuration the user must have to make it work (then remove the Github URLs).nn * The code should only be executed when `PHP_AUTH_USER` is not available (to not have any overhead when not needed).nn---------------------------------------------------------------------------nnby danielholmes at 2012-04-14T13:27:09ZnnA quick note on that .htaccess/apache configuration required, if adding to the Symfony SE htaccess file, then it will need to look like this:nn```n<IfModule mod_rewrite.c>n    RewriteEngine Onnn    RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]nn    RewriteCond %{REQUEST_FILENAME} !-fn    RewriteRule ^(.*)$ app.php [QSA,L]n</IfModule>n```nnNOTE: No **,L** in the Authorization Rewrite as in the original example - it prevents the front controller rewrite from happeningnn---------------------------------------------------------------------------nnby towards at 2012-04-20T16:12:49Znn@kepten you were faster than me applying @fabpot's comments :) nevertheless part of the bug hunt day I also modified the ServerBag class and tested them on a productive LAMP hosting server using Apache and FastCGInn---------------------------------------------------------------------------nnby kepten at 2012-04-20T16:15:57Znnok, so is my PR is useless or should I still fix problems?nn---------------------------------------------------------------------------nnby towards at 2012-04-20T16:20:26Znnyour PR is fine for sure and I don't want to interfere, just wanted to mention thatu00a0part of the bug hunt day of Symfony I had a go at this PR as an exercise but just saw later on that you already fixed the problem, so you can ignore my pushesnn---------------------------------------------------------------------------nnby vicb at 2012-04-20T16:20:36ZnnI have been working with @towards: your PR is useful, please implement his comments and squash your PR.nn---------------------------------------------------------------------------nnby kepten at 2012-04-20T16:59:07Znnnever squashed before, is it okay now? :)nn---------------------------------------------------------------------------nnby stof at 2012-04-20T17:21:07Znnit isnn---------------------------------------------------------------------------nnby vicb at 2012-05-20T19:57:51Znn@fabpot this should be ready to be merged",
            "merged branch mvrhov/1813_regression (PR #4551)nnCommitsn-------nn5d88255 Authorization header should only be rebuild when Basic Auth scheme is usednnDiscussionn----------nn[Regression fix] Authorization header should only be rebuild when Basic Auth scheme is usednnBug fix: yesnFeature addition: nonBackwards compatibility break: nonSymfony2 tests pass: yesnFixes the following tickets: fixes regression introduced by #1813nTodo: N/AnLicense of the code: MITnn---------------------------------------------------------------------------nnby travisbot at 2012-06-11T14:40:28ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1592604) (merged cf5ee26a into 27100ba4).nn---------------------------------------------------------------------------nnby mvrhov at 2012-06-12T06:13:01Znnfixednn---------------------------------------------------------------------------nnby travisbot at 2012-06-12T06:14:55ZnnThis pull request [passes](http://travis-ci.org/symfony/symfony/builds/1598555) (merged 5d88255d into 27100ba4).",
            "merged branch shouze/fix/auth-digest (PR #8952)nnThis PR was submitted for the master branch but it was merged into the 2.2 branch instead (closes #8952).nnDiscussionn----------nn[HttpFoundation] Fixing broken http auth digest in some circumstances.nn| Q             | An| ------------- | ---n| Bug fix?      | yesn| New feature?  | non| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets | can be refered in issue #1813n| License       | MITn| Doc PR        | n/annWith some apache + php-fpm setup we need to set ```PHP_AUTH_DIGEST``` value if not already setted in GLOBAL vars.nnAdded some unit tests too.nnCommitsn-------nn9fc994b [HttpFoundation] Fixing broken http auth digest in some circumstances (php-fpm + apache).",
            "Debug help on HTTP Basic Auth failsnnPHP_AUTH_PW might be empty in case of Apache2 + FastCGI-PHP Setup.rnSee https://github.com/symfony/symfony/issues/1813"
        ]
    },
    "1288124": {
        "title": "[Form][DelegatingValidator] Conflict between a field and collection field with the same name",
        "body": "Use case : http://gist.github.com/1106538rnrnWhen the Entry title input value is blank, the form error is rendered next to the title input field of the specs field instead of the title one.rnrnIn the EntrySpecType, If i change the name of the title field to whateverisnotitle, everything goes fine, and i assure you i've just changed that ! ;-)rnrnThat's a bit inconvenient.rnrnrn",
        "comments": [
            "@benjamindulau can you check with the master branch ?n",
            "Could you please correct your Gist? There's stuff missing (how does SpecElementType look like?) and I can't reconstruct your problem.n",
            "@bschussek i've updated the gist. I just tried with Symfony 2.0.12 and the issue is still present.nnI'm trying with master branch right now.nnedit: added the form template to the gistn",
            "Task for the BHD: Create a failing test casen",
            "Working on this onen",
            "Checked against the master branch with the code in the gist, looks fine to me. I cannot be 100% sure that I reproduced exactly what @benjamindulau as I don't have the controller or the entity code, but I'm positive that the error is associated (and displayed next) to the parent form (Entry) and not in one of the embedded form.nnI can provide a test in AbstractLayout, but I am not sure it is necessary.n",
            "Ok. I will close this issue then. Please reopen it if necessary.n"
        ],
        "commits": []
    },
    "1219548": {
        "title": "[Form][Guesser] Symfony should guess a better field type for Doctrine 'array' type",
        "body": "Currently defaults to a textbox which just displays 'Array'.",
        "comments": [
            "Symfony don't use Doctrine mapping to do the field guessing but validation constraints.nnMaybe `@AssertType(type=array)` should be guessed as a collection type...n",
            "Symfony uses both for the guessingn",
            "@stof, right, sorry. guessing for collection with doctrine `array` are even here, but commentednn``` phpn<?phpn//... n 53             //case 'array':n 54             //  return new TypeGuess('Collection', array(), Guess::HIGH_CONFIDENCE);n//...n```n",
            "Can't get far enough in the history of the guesser to understand why it's commented, any information ? Moreover, why there is an uppercase C on Collection ? Is is because a long time ago types began with upercases ?n",
            "Reading the history, this is commented since the first implementation of the guesser: https://github.com/symfony/symfony/commit/3bf9f7782debd42bc1cd050ea0b51ef14fbf8e17n",
            "@bschussek what was the reason to comment the guessing for the array fields ?n",
            "@stof Simply that I didn't know what to do back then. What should we guess? collection?n",
            "Task for the BHD: guess collection for both Doctrine arrays & `@AssertType(type=array)`n",
            "Working on it right nown"
        ],
        "commits": [
            "merged branch pvanliefland/ticket_1692 (PR #3945)nnCommitsn-------nn8bdff01 [DoctrineBridge][Form] added collection guess for array Doctrine type and array constraint typennDiscussionn----------nn[Form] [DoctrineBridge] Better field type guessing for array doctrine type and array validator typennBug fix: nonFeature addition: yesnBackwards compatibility break: nonSymfony2 tests pass: yesnFixes the following tickets: #1692nTodo: -nn---------------------------------------------------------------------------nnby bschussek at 2012-04-18T08:45:17ZnnCould you please add an entry to the CHANGELOG and squash your commits into one?nn---------------------------------------------------------------------------nnby pvanliefland at 2012-04-18T17:20:39ZnnDone"
        ]
    },
    "19628175": {
        "title": "[DomCrawler] SymfonyComponentDomCrawlerCrawler::addContent guess charset from html?",
        "body": "I just download this page.rnhttp://search.jd.com/Search?keyword=%E6%96%87%E5%AD%A6&enc=utf-8&area=22&book=yrnit do not send a header of charset in http response header and I put it content to Crawler::addContent,Then Crawler use wrong charset ISO-8859-1.rnIt works fine if I use follow code:rn```rn        $crawler = new Crawler();rn        $crawler->addHtmlContent($content,'GBK');rn```rnIs there some way to guess charset from html meta?",
        "comments": [
            "for reference, here is how Behat MinkGoutteDriver is extending Goutte to guess the charset from the content when there is no content type header: https://github.com/Behat/MinkGoutteDriver/blob/master/src/Behat/Mink/Driver/Goutte/Client.php#L32nnThis could be reused to implement it directly in DomCrawler (the Mink code is under MIT)n"
        ],
        "commits": [
            "merged branch bronze1man/pr-2.2-crawler (PR #9074)nnThis PR was squashed before being merged into the 2.2 branch (closes #9074).nnDiscussionn----------nn[DomCrawler]Crawler guess charset from htmlnn| Q             | An| ------------- | ---n| Bug fix?      | non| New feature?  | yesn| BC breaks?    | non| Deprecations? | non| Tests pass?   | yesn| Fixed tickets |  #9061n| License       | MITn| Doc PR        | n/annCommitsn-------nne5282e8 [DomCrawler]Crawler guess charset from html"
        ]
    }
}
=======
{
  "18230678": {
    "github_issue_id": 8786,
    "state": "open",
    "title": "Add @since tags to core",
    "body": "I think that we should add `@since` tags to all classes and methods in core:\r\n\r\n```php\r\n/**\r\n * @since 2.1.0\r\n */\r\nclass Foo\r\n{\r\n    /**\r\n     * @since 2.2.1\r\n     */\r\n    public function bar() { ... }\r\n}\r\n```\r\n\r\nThis greatly facilitates maintenance, because if I discover a bug in class `Foo` or method `Foo::bar()`, I immediately know which branch to fix it on. Currently, you have to do a lot of Git blaming or trial and error to find out which branch to fix something on."
  },
  "16262415": {
    "github_issue_id": 8404,
    "state": "open",
    "title": "CssSelector should be configured properly when used for HTML or XML",
    "body": "... but that's not really possible when using it from BrowserKit as the Crawler is created directly.\r\n\r\nFrom #8286:\r\n\r\n    In functional test, since the crawler is instanciated by the de browser kit (which \r\n    know the content-type), Can we imagine the browser kit call for us\r\n    disableHtmlExtension or enableHtmlExtension"
  },
  "15752417": {
    "github_issue_id": 8311,
    "state": "open",
    "title": "BrowserKit CookieJar is totally ignorant of RFC 6265 edge cases",
    "body": "The `BrowserKit/CookieJar` code [uses exact domain and path matches](https://github.com/symfony/BrowserKit/blob/master/CookieJar.php#L58) to store and retrieve cookies:\r\n\r\n`$this->cookieJar[$domain][$path][$name]`\r\n\r\nThis utterly fails the [requirements of RFC 6265 for matching domains](http://tools.ietf.org/html/rfc6265#section-4.1.2.3):\r\n\r\n> For example, if the value of the Domain attribute is \"example.com\", the user agent will include the cookie in the Cookie header when making HTTP requests to example.com, www.example.com, and www.corp.example.com.\r\n\r\n\r\nIf you load any google resource you'll receive a cookie with `domain=.google.com`. According to the RFC this cookie should match any domain ending in .google.com as well as google.com itself.\r\n\r\nSimilar problems exist with path matching where leading and trailing slashes figure in to whether or not a cookie matches what's stored in the `CookieJar`. From [the relevant RFC section](http://tools.ietf.org/html/rfc6265#section-4.1.2.4):\r\n\r\n> The user agent will include the cookie in an HTTP request only if the path portion of the request-uri matches (or is a subdirectory of) the cookie's Path attribute, where the %x2F (\"/\") character is interpreted as a directory separator.\r\n\r\nExact path matches aren't sufficient -- subdirectory paths should also be matched."
  },
  "13800942": {
    "github_issue_id": 7884,
    "state": "open",
    "title": "[FR] [Process] tweaks",
    "body": "In Symfony\\Component\\Process\\Process\r\n1. Provide a way to clear the $stdout and $stderr (in case when executable program produces too much output and we use incremental output)\r\n2. Add getter (or change private to protected) for processInformation (it's impossible now to get PID for example)"
  },
  "13169284": {
    "github_issue_id": 7672,
    "state": "open",
    "title": "[DomCrawler] need for submitting invalid choice values",
    "body": "It seems to be not possible to submit an invalid value for a choice field in a form using BrowserKit's Client. This is prevented by https://github.com/symfony/symfony/blob/v2.1.9/src/Symfony/Component/DomCrawler/Field/ChoiceFormField.php#L140, which doesn't make sense when writing integration tests, as I'd like to see the expected form validation errors.\r\n\r\nWhat's the purpose of those checks and, if they are needed, how can they be disabled for tests?"
  },
  "11098174": {
    "github_issue_id": 7103,
    "state": "open",
    "title": "[security] Enable a firewall to a specific host (subdomain)",
    "body": "Symfony 2.2 introduces a possibility to point a route to a specific host, or a subdomain.\r\n\r\nNow, it should be possible to define a specific host to a firewall. I believe it should be like this:\r\n\r\n```yml\r\nfirewalls:\r\n\tmanager:\r\n        pattern: ^/.*\r\n        host: manager.domain.com\r\n        ...\r\n```"
  },
  "10412830": {
    "github_issue_id": 6908,
    "state": "open",
    "title": "[BrowserKit] Form names with . are converted to _ (breaks compatibility with non-PHP forms)",
    "body": "Symfony/Component/BrowserKit/Client->submit uses $form->getPhpValues() which uses parsestr which automagically converts . to _, this breaks compatibility with forms intended for non-PHP services.\r\n\r\n**Background**\r\nI am trying to write a functional test for connecting to an OpenID2 implementation in ASP.NET, however this requires use of a (auto-submitted by javascript) form with names like hidden form names like openid.mode.\r\n\r\n"
  },
  "9374910": {
    "github_issue_id": 6406,
    "state": "open",
    "title": "[3.0] [HttpFoundation] consider renaming Request::getPathInfo() to getPath()",
    "body": "The method name for `Request::getPathInfo()` is so bad because\r\n1. it returns the path of a URI and not a \"path info\" (there is no such thing in the URI spec)\r\n2. it suggest to return \"more info\" in form of an array like the php function [pathinfo](http://php.net/manual/en/function.pathinfo.php]) does, but it only returns the plain path\r\n\r\nSo the name is really confusing as it does not behave similar to phps pathinfo() and is also semantically wrong.\r\n\r\nI suggest to deprecate `getPathInfo()` and introduce `getPath()`.\r\nWorking with it bothered me ever since. And I think we should fix that now before it's too late."
  },
  "9103421": {
    "github_issue_id": 6239,
    "state": "open",
    "title": "Form fields and buttons do not follow the ownership overwrite defined by form-attributes",
    "body": "I was redirected here from Goutte, on the issue of form fields with a \"form\" attribute not getting correctly processed.\n\nThe gist of it is: the \"form\" attribute (placed on fields and buttons and such) is an overwrite to the form ownership property of the element. This means that regardless of where the field (or button) is it should behave as-if it were inside the form identified by the ID defined by the value of the attribute. \n\nSome official docs:\nhttp://dev.w3.org/html5/spec/single-page.html#attr-fae-form\n\nWith the exception of IE (10 included), all modern browsers support it fine. In the case of IE it's a simple javascript fix\u2014just like every other normal html5 feature. For the case of tests and such it would be very useful for the standard behavior to work (especially when there's no real way to work around it).\n\nThe following is a basic behat test (assume Goutte driver), so as to avoid very wordy explanations on other points related to it.\n~~~\n@environment\nFeature: test environment drivers\n  In order perform tests successfully\n  As a Developer\n  Test drivers must conform to standards\n\n  Background:\n\tGiven I am on the test site\n\t  And I am on \"/tests/form-attribute.php\"\n\n  Scenario: press button_1 of form_1 from inside of form_1\n\tGiven I press \"Capture fields\"\n\t Then I should see \"form_name is form_1\"\n\t  And I should see \"2 apples\"\n\t  And I should see \"0 oranges\"\n\t  And I should see \"button_1 present\"\n\t  And I should see \"button_2 not present\"\n\t  And I should see \"button_3 not present\"\n\t  And I should see \"outer_field present\"\n\n  Scenario: press button_3 of form_1 from inside of form_2\n\tGiven I press \"Submit from outside the form\"\n\t Then I should see \"form_name is form_1\"\n\t  And I should see \"2 apples\"\n\t  And I should see \"0 oranges\"\n\t  And I should see \"button_1 not present\"\n\t  And I should see \"button_2 not present\"\n\t  And I should see \"button_3 present\"\n\t  And I should see \"outer_field present\"\n\n  Scenario: press button_2 of form_2 from inside of form_1\n\tGiven I press \"Submit form_2\"\n\t Then I should see \"form_name is form_2\"\n\t  And I should see \"0 apples\"\n\t  And I should see \"3 oranges\"\n\t  And I should see \"button_1 not present\"\n\t  And I should see \"button_2 present\"\n\t  And I should see \"button_3 not present\"\n\t  And I should see \"outer_field not present\"\n      \n~~~\n\nWhere `/tests/form-attribute.php` is as follows...\n~~~\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<title>Test Case</title>\n\n<?php if ($_SERVER['REQUEST_METHOD'] !== 'POST'): ?>\n\n\t<form id=\"form_1\" action=\"<?= $_SERVER['REQUEST_URI'] ?>\" method=\"POST\">\n\t\t<input type=\"checkbox\" name=\"apples[]\" value=\"1\" checked/>\n\t\t<input form=\"form_1\" type=\"hidden\" name=\"form_name\" value=\"form_1\"/>\n\t\t<button form=\"form_1\" type=\"submit\" name=\"button_1\">Capture fields</button>\n\t\t<button form=\"form_2\" type=\"submit\" name=\"button_2\">Submit form_2</button>\n\t</form>\n\n\t<input form=\"form_1\" type=\"checkbox\" name=\"apples[]\" value=\"2\" checked/>\n\n\t<form id=\"form_2\" action=\"<?= $_SERVER['REQUEST_URI'] ?>\" method=\"POST\">\n\t\t<input form=\"form_2\" type=\"checkbox\" name=\"oranges[]\" value=\"1\" checked/>\n\t\t<input form=\"form_2\" type=\"checkbox\" name=\"oranges[]\" value=\"2\" checked/>\n\t\t<input form=\"form_2\" type=\"checkbox\" name=\"oranges[]\" value=\"3\" checked/>\n\t\t<input form=\"form_2\" type=\"hidden\" name=\"form_name\" value=\"form_2\"/>\n\t\t<input form=\"form_1\" type=\"hidden\" name=\"outer_field\" value=\"success\"/>\n\t\t<button form=\"form_1\" type=\"submit\" name=\"button_3\">Submit from outside the form</button>\n\t</form>\n\n<?php else: ?>\n\n<?\n\techo 'form_name is '.(isset($_POST['form_name']) ? $_POST['form_name'] : 'undefined').\"<br/>\\n\";\n\techo (isset($_POST['apples']) ? \\count($_POST['apples']) : 0).\" apples<br/>\\n\";\n\techo (isset($_POST['oranges']) ? \\count($_POST['oranges']) : 0).\" oranges<br/>\\n\";\n\n\tforeach (['button_1', 'button_2', 'button_3', 'outer_field'] as $key)\n\t{\n\t\techo $key.' '.(isset($_POST[$key]) ? 'present' : 'not present').\"<br/>\\n\";\n\t}\n\n\techo \"<hr/>\\n\";\n\n\t\\var_dump($_POST);\n?>\n\n<?php endif; ?>\n~~~\n"
  },
  "8214440": {
    "github_issue_id": 5946,
    "state": "open",
    "title": "[Form] Improve default form error messages",
    "body": "I think that in order to provide a better user experience, we should improve the error messages shipped with the Form component by default. I am **not** talking about the error messages in the Validator component.\r\n\r\nIf I use the Validator component stand-alone, getting an error such as \"This value is not a valid number\" is fine. If I use the Form component, displaying that message for a form field is a bit awkward. Even worse are the tons of \"This value is invalid\" messages.\r\n\r\nI suggest to\r\n\r\n1. Set sensible defaults for the \"invalid_message\" options in all core types. These defaults should be user friendly, such as \"Please enter a valid email address.\" (or better, if you have suggestions)\r\n2. Duplicate the error messages of the Validator component into the Form component and change the translations to be more user friendly (in the web form context, again, such as \"Please enter a valid number\" or better). This will mean a bit more maintenance work, but much better UX.\r\n\r\nOpinions? How would you ideally like the error messages to be when you submit an erroneous field?"
  },
  "7723266": {
    "github_issue_id": 5791,
    "state": "open",
    "title": "[Form] Rename \"empty_value\" option to \"placeholder\"",
    "body": "See #4715 for reference.\r\n\r\nThe \"empty_value\" option of ChoiceType (and consequentially EntityType) is used to configure the displayed values of the dropdowns when the field is empty. This is analogous to the \"placeholder\" HTML5 attribute of other field types.\r\n\r\nI propose to deprecate \"empty_value\" and add a new option \"placeholder\" to\r\n\r\n* ChoiceType\r\n* all types represented by input widgets that support this attribute"
  },
  "6816718": {
    "github_issue_id": 5500,
    "state": "open",
    "title": "make Translation:update Command more robust",
    "body": "Nowadays i'm often getting Error's if I try to update translation-file like this:\n  [Twig_Error_Runtime]                                                       \n  Attribute \"value\" does not exist for Node \"Twig_Node_Expression_GetAttr\". \n\nIt seem's it come's from dynamic part of a transaltion. The Problem is, that it abort on the first twig error, it would be nice if the command run through and make what he can make. --ignore-expetions\n\nOr just get in a prefix-viewfolder as argument:\n\n\n\n```\n    $extractor->extract($foundBundle->getPath().'/Resources/views/'.$viewfolder, $catalogue);"
  },
  "6379747": {
    "github_issue_id": 5322,
    "state": "open",
    "title": "[Feature Request] Absolute asset URL",
    "body": "Hey guys!\n\nCurrently, there's no standard way of retrieving the absolute URL to an asset. This would be useful when generating asset paths in a template for an email. Would be cool a function like:\n\n```twig\n{{ asset_url('images/foo.jpg') }}\n```\n\nThe current solution is not pratical and breaks when using CDN.\n\nThanks,\nMarcos"
  },
  "5827000": {
    "github_issue_id": 5040,
    "state": "open",
    "title": "ParameterBag's remove function only allows to remove one level deep",
    "body": "If a parameter is an array it cannot remove elements inside the array, only the array itself. \nFor instance I have the following request using the SonataMediaBundle:\n\n[common_mybundle_mytype] => array(\n    [media] => array(\n        [binaryContent] => null\n    ),\n    [title] => 'Message title',\n    [text] => 'Message text\n)\n\nSay I want to remove the media only. With the current function I can only remove the full request. I have rewritten the function to the following:\n\n    File: Symfony\\Component\\HttpFoundation\\ParameterBag\n\n    public function remove($key)\n    {\n        if(is_array($key))\n        {\n            $c = '$this->parameters';\n\n            foreach($key as $k)\n            {\n                $c .= '[\\'' . $k . '\\']';\n            }\n            eval(\"unset($c);\");\n        }\n        else\n        {\n            unset($this->parameters[$key]);\n        }\n    }"
  },
  "5567424": {
    "github_issue_id": 4871,
    "state": "open",
    "title": "HttpCache files getting too big",
    "body": "When using the HttpCache, there are files created in the app/cache/prod/http_cache/md for each url. Each time this url is accessed with a differente cookie, an entry is added (because we do vary on cookie). After some days or weeks this file is getting too big. The expired entries are not removed. I don't know if its best to create a command to remove old items, or to do it after lookup, or after write. Maybe just need to clear the cache every night :)\n\nhttps://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpKernel/HttpCache/HttpCache.php\nhttps://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpKernel/HttpCache/Store.php"
  },
  "1887255": {
    "github_issue_id": 2387,
    "state": "open",
    "title": "[Form][Guesser] ValidatorTypeGuesser does not consider validation_groups option",
    "body": "The `ValidatorTypeGuesser` does not consider the current form's `validation_groups` option when guessing type. This could be fixed by passing the options array to the guesser methods. The signature of the `FormTypeGuesserInterface` methods would look like this:\r\n\r\n    function guessType($class, $property, array $options = array());\r\n\r\nThe default argument is provided for BC."
  },
  "1184805": {
    "github_issue_id": 1581,
    "state": "open",
    "title": "[Validator] Improve EmailValidator",
    "body": "We really should migrate away from filter_var to a stronger solution like http://code.google.com/p/isemail/source/browse/PHP/trunk/is_email.php which seems like the only solution mentioning RFCs, being maintained, and not being dependent on a specific PHP version.\r\n\r\nI emailed the author to see if he would be willing to migrate it to a more class-based approach and remove all those constants from the global namespace."
  },
  "19047724": {
    "github_issue_id": 8941,
    "state": "closed",
    "title": "UPGRADE docs doesn't mention remove of addViolationAtPath",
    "body": "The UPGRADE docs document doesn't mention the remove of the method the remove of the method `addViolationAtPath()`."
  },
  "17502295": {
    "github_issue_id": 8629,
    "state": "closed",
    "title": "Process filling up temp directory on Windows",
    "body": "Symfony\\Component\\Process\r\nI'm getting this error after running a process for a long time\r\nA temporary file could not be opened to write the process output to, verify that your TEMP environment variable is writable\r\nSeems to be the windows workaround in getDescriptors()\r\nI found the problem to be 65,000 temp files created by this file in my windows temp but not removed. I have to clear these out daily.\r\nPHP should remove the files but they slowly build up."
  },
  "14401746": {
    "github_issue_id": 8065,
    "state": "closed",
    "title": "php.ini \"post_max_size = 0\" clash with form validator",
    "body": "If in the php.ini \"post_max_size\" is set to 0, there is no limitation in the post size:\r\n[from php.ini]\r\n; Maximum size of POST data that PHP will accept.\r\n; Its value may be 0 to disable the limit. It is ignored if POST data reading\r\n; is disabled through enable_post_data_reading.\r\n; http://php.net/post-max-size\r\npost_max_size = 0\r\n\r\nHowever, in this case, the validator (tested via Form) trigger always\r\n\"The uploaded file was too large. Please try to upload a smaller file.\"\r\n\r\n[Fix]\r\nEnable the control only if post_max_size > 0"
  },
  "14273793": {
    "github_issue_id": 8030,
    "state": "closed",
    "title": "[DependencyInjection] Dumping out container may produce syntax error code",
    "body": "Create a service where name contains \"-\" and there will be a syntax error.\r\n\r\nI think the root of the problem is that PhpDumper uses Container::camelize to generate function names which doesn't comply with PHP labels.\r\n\r\nIn my opinion, PhpDumper should use an internal function to generate PHP label-safe identifiers from service names, it would be more general solution than restrict service names.\r\n\r\nIf you agree i would like to push this change.\r\n\r\n"
  },
  "14259080": {
    "github_issue_id": 8024,
    "state": "closed",
    "title": "Use more explicit namespaces in composer definitions",
    "body": "Please note namespace declarations should end in `\\\\` to make sure the autoloader responds exactly. For example `Foo` would match in `FooBar` so the trailing backslashes solve the problem: `Foo\\\\` and `FooBar\\\\` are distinct.\r\n\r\nFor reference: https://github.com/composer/composer/pull/1891/files"
  },
  "13998113": {
    "github_issue_id": 7948,
    "state": "closed",
    "title": "[Console] Improve abbreviation recognition",
    "body": "1. For example I have 2 commands:\r\n```\r\nxxx:foo:bar\r\nyyy:faa:zoo\r\n```\r\nWhen I try to call\r\n```\r\nphp test.php xxx:f:b\r\n```\r\nI get an InvalidArgumentException - The namespace \"xxx:f\" is ambiguous (foo, faa).\r\nbut the namespace xxx:faa not defined!\r\n\r\n2. If I have \r\n```\r\nxxx:foo:bar\r\nxxx:faa:zoo\r\n```\r\nand call `x:f:z` then it should run xxx:faa:zoo (because no more command has same abbreviation)\r\n\r\n"
  },
  "13963217": {
    "github_issue_id": 7929,
    "state": "closed",
    "title": "[BrowserKit] on followRedirect, client doesn't resend HTTP headers",
    "body": "In this simple case \r\n\r\n```\r\n$headers = array('HTTP_Content_Type' => 'application/vnd.custom+xml');\r\n$crawler = $client->request($method, $uri, $params, array(), $headers);\r\n```\r\n\r\nwhen server returns redirect, ```Content-Type``` header will not be sent to new location."
  },
  "13435189": {
    "github_issue_id": 7731,
    "state": "closed",
    "title": "BrowserKit recursive redirect",
    "body": "If a redirect-header is returned by a request of some url and the redirect-url is just the same as the requested url (thus its a recursive redirect) then the BrowserKit client will follow the recursive tree until the php maximum function nesting level, which by default is 100.\r\n\r\nBrowserKit should have a configurable (?) maximum for following redirects and the ->request() call should return nicely (at least with a clean exception?) if it reaches the maximum."
  },
  "13254373": {
    "github_issue_id": 7683,
    "state": "closed",
    "title": "[HttpFoundation] allow database Session Handlers to be extended",
    "body": "If there's additional actions to be done on on session events (additional cleanup on destroy/gc, or additional logging on other events, it would be nice to be able to extend the `PdoSessionHandler` and `MongoDbSessionHandler` classes. However, both have their database connections set to `private`.\r\n\r\nI can think of two ways of accomplishing this: either setting those connectors to `protected`, so child objects can access them, or to add an additional `getConnection()` method, to provide read-only access to those connectors. More complex would be to add some sort of event system such that the session handlers broadcast to other listeners when a session event happens.\r\n\r\nIs there a better way to accomplish doing other tasks when a session event happens?"
  },
  "13116635": {
    "github_issue_id": 7644,
    "state": "closed",
    "title": "XmlUtils::phpize floats integer-lists",
    "body": "I'm trying to let my config accept:\r\n```\r\n<node attribute=\"1234,5678,9101,1121,3141\" />\r\n```\r\nto parse the this attribute as a string. But the Symfony\\Component\\Config\\Util\\XmlUtils::phpize-Method (previously SimpleXMLElement::phpize) replaces this to float(1.2345678910111E+19).\r\n\r\nThis is caused by the preg_match-case."
  },
  "13111578": {
    "github_issue_id": 7639,
    "state": "closed",
    "title": "[HttpKernel] Improve TraceableEventDispatcher to not call Stopwatch::stop() when not started",
    "body": "Currently, in TraceableEventDispatcher:385, Stopwatch::stop() is called even when the Stopwatch was not started:\r\n\r\n```php\r\ncase KernelEvents::RESPONSE:\r\n    // stop only if a controller has been executed\r\n    try {\r\n        $this->stopwatch->stop('controller');\r\n    } catch (\\LogicException $e) {\r\n    }\r\n    break;\r\n```\r\n\r\nThe result is that on every request, an exception will be thrown and caught (consequently this is not an \"exceptional\" case anymore). Another consequence is that debuggers will halt and show this exception (again, on every request).\r\n\r\nAn improvement would be to add a Stopwatch::isStarted() method and use it instead:\r\n\r\n```php\r\ncase KernelEvents::RESPONSE:\r\n    // stop only if a controller has been executed\r\n    if ($this->stopwatch->isStarted('controller')) {\r\n        $this->stopwatch->stop('controller');\r\n    }\r\n    break;\r\n```"
  },
  "12950953": {
    "github_issue_id": 7607,
    "state": "closed",
    "title": "Login Redirect Does not Honor Query String Parameters",
    "body": "When a user successfully logs in, the user is redirected to the page he originally was trying to view via the onAuthenticationSuccess() function in  https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Security/Http/Authentication/DefaultAuthenticationSuccessHandler.php.\r\n\r\nI am using a javascript history state library to keep track of my javascript frontend state and it generates urls such as ```/my/site#foo=bar&more=links```.\r\n\r\nWhen I am redirected from the login page, all the query string parameters after the url ```#foo=bar&more=links``` are not preserved. Could this possibly be fixed in future versions or is there a good reason not to honor the states of these types of requests?\r\n"
  },
  "12900121": {
    "github_issue_id": 7592,
    "state": "closed",
    "title": "[Routing] Cannot specify port for route with hostname",
    "body": "By default the router uses the port of the current request when linking to an external site and there's no way to override it.\r\n\r\nFor example, an application that runs on port 8888, when generating a url from a route such as below, will generate the url \"//example.com:8888/article/view/{id}\".\r\n\r\n```yml\r\nmy_route:\r\n    pattern: /article/view/{id}\r\n    hostname: example.com\r\n```\r\n\r\nAlso, if you try to specify a port number in the hostname, e.g.\r\n\r\n```\r\nmy_route\r\n    pattern: /article/view/{id}\r\n    hostname: example.com:80\r\n```\r\n\r\nIt will generate a url similar to \"//example.com:80:8888/article/view/{id}\".\r\n\r\nMy first thought would be to introduce a 'port' parameter, which can be used to specify the port, and if it's not provided fall back to the port for the current request?\r\n\r\nWe only use the hostname parameter to generate url's for an external site which we need to link to, so I'm not sure how this works in regards to matching a route."
  },
  "12873934": {
    "github_issue_id": 7575,
    "state": "closed",
    "title": "XML and Yaml format doesn't work with Optional/Required collection constraints",
    "body": "Assume we have this entity:\r\n````php\r\nclass Author\r\n{\r\n    /**\r\n     * @Assert\\Collection(fields={\r\n     *     \"alternate_email\" = @Optional({@Assert\\Email})\r\n     * })\r\n    public $profileData = array();\r\n}\r\n````\r\n\r\nThe annotations and PHP format is working as expected. However, the Yaml and Xml format isn't working. On the documentation, we (ryan, @afishnamedsquish and I) have put some time in trying to get a working Yaml and Xml format, but it seems like it's not possible.\r\n\r\nIf we have this:\r\n````yaml\r\nAcme\\AuthorBundle\\Entity\\Author:\r\n    properties:\r\n        profileData:\r\n             - Collection:\r\n                fields:\r\n                    alternate_email:\r\n                        - Collection\\Optional:\r\n                            - Email: ~\r\n````\r\nWe get this error:\r\n\r\n > Fatal error: Class 'Symfony\\Component\\Validator\\Constraints\\Collection\\OptionalValidator'\r\n\r\nIt's going wrong in [`Collection` line 50](https://github.com/symfony/Validator/blob/2.1/Constraints/Collection.php#L50-52):\r\n\r\n````php\r\nif (!$field instanceof Optional && !$field instanceof Required) {\r\n    $this->fields[$fieldName] = $field = new Required($field);\r\n}\r\n````\r\n`$field` is an instance of Optional or Required when using PHP or annotations. When using Yaml, `$field` is an array:\r\n\r\n    array (size=1)\r\n      0 => \r\n        object(Symfony\\Component\\Validator\\Constraints\\Collection\\Optional)[4300]\r\n          public 'constraints' => \r\n            array (size=1)\r\n              0 => \r\n                object(Symfony\\Component\\Validator\\Constraints\\Email)[4301]\r\n                  ...\r\n          public 'groups' => \r\n            array (size=1)\r\n              0 => string 'Default' (length=7)\r\n\r\nBecause it's not an instance of Optional or Required, it becomes:\r\n\r\n    object(Symfony\\Component\\Validator\\Constraints\\Collection\\Required)[4302]\r\n      public 'constraints' => \r\n        array (size=1)\r\n          0 => \r\n            object(Symfony\\Component\\Validator\\Constraints\\Collection\\Optional)[4300]\r\n              public 'constraints' => \r\n                array (size=1)\r\n                  ...\r\n              public 'groups' => \r\n                array (size=1)\r\n                  ...\r\n      public 'groups' => \r\n        array (size=1)\r\n          0 => string 'Default' (length=7)\r\n\r\nAnd that's when we are in trouble, because the `ValidatorFactory` will search for `OptionalValidator`.\r\n\r\nI have tried every Yaml syntax I know to make `$field` a class and not an array, but I can't find it. I think some change in the `YamlFileLoader` is needed to make these edge cases work.\r\n\r\nThis is the same for Xml:\r\n````xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n<constraint-mapping xmlns=\"http://symfony.com/schema/dic/constraint-mapping\"\r\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n    xsi:schemaLocation=\"http://symfony.com/schema/dic/constraint-mapping http://symfony.com/schema/dic/constraint-mapping/constraint-mapping-1.0.xsd\">\r\n\r\n    <class name=\"Acme\\AuthorBundle\\Entity\\Author\">\r\n        <property name=\"profileData\">\r\n            <constraint name=\"Collection\">\r\n                <option name=\"fields\">\r\n                    <value key=\"alternate_email\">\r\n                        <constraint name=\"Collection\\Optional\">\r\n                            <constraint name=\"Email\" />\r\n                        </constraint>\r\n                    </value>\r\n                </option>\r\n            </constraint>\r\n        </property>\r\n    </class>\r\n</constraint-mapping>\r\n````\r\n\r\nIf you want some background on this issue, see symfony/symfony-docs#2432 and [this gist](https://gist.github.com/afishnamedsquish/5277987)."
  },
  "12834613": {
    "github_issue_id": 7564,
    "state": "closed",
    "title": "Bug with NamespacedAttributeBag in use with session",
    "body": "Hi !\r\n\r\nI have set my application to use the NamespacedAttributeBag for sessions.\r\n\r\nI've observed the following behavior:\r\n\r\nIn my template, if I do this:\r\n\r\n    {{dump(app.session.get(\"cart\" , 0))}}\r\n\r\nIt dumps:\r\n\r\n    array (size=1)\r\n      1 => \r\n        array (size=1)\r\n          2 => \r\n            array (size=1)\r\n              8 => int 1\r\n\r\nThat is the expected behavior\r\n\r\nNow if I do:\r\n\r\n    {{dump(app.session.get(\"cart/1/2\" , 0))}}\r\n\r\nI get:\r\n\r\n    array (size=1)\r\n      8 => int 1\r\n\r\nThat's fine too.\r\n\r\nAnd finally, if I do this:\r\n\r\n    {{dump(app.session.get(\"cart/1/1/2\" , 0))}}\r\n\r\nI get:\r\n\r\n    array (size=1)\r\n       8 => int 1\r\n\r\nThat is not fine! I should get 0 or null. There is no array in cart[\"1\"][\"1\"] !\r\n\r\nIs that a bug ?"
  },
  "12728018": {
    "github_issue_id": 7549,
    "state": "closed",
    "title": "[Console] DialogHelper::ask() while loop issue with 0",
    "body": "The while loop in `Symfony\\Component\\Console\\Helper\\DialogHelper::ask()` terminates, when you enter a 0. `fread` gets the 0 and assigns it to `$c` and then the loop breaks. As we all know PHP interpretes a 0 as false.\r\n\r\nI tried to fix it and came up with the following idea using `ord()` and `chr()`:\r\n\r\n~~~ php\r\n...\r\nwhile ($c = ord(fread($inputStream, 1))) {\r\n    $c = chr($c);\r\n...\r\n~~~\r\n\r\nIt solves the problem but I find it rather ugly. \r\n\r\nDoes anyone have a better idea about this?"
  },
  "12664314": {
    "github_issue_id": 7540,
    "state": "closed",
    "title": "[Profiler] Backslash before slash",
    "body": "In \u201cRequest\u201d tab of profiler, there is a backslash before all the slashs and backslashs (see screenshot)\u2026 I just did the upgrade to Symfony 2.2.\r\n![screen](https://f.cloud.github.com/assets/1258839/324302/21576eea-9ae1-11e2-96c3-0a358b657e33.png)"
  },
  "12508458": {
    "github_issue_id": 7491,
    "state": "closed",
    "title": "Symfony\\Component\\DomCrawler\\Crawler::addContent() - handling of MIME types",
    "body": "If the server responds with an empty HTTP Content-Type, 'text/html' is assumed, which is good.  However, if the Content-Type contains a charset but no MIME type, e.g. 'charset=utf-8' or '; charset=utf-8', the method returns null and the DOM is not parsed.\r\n\r\nDesired behaviour is that a Content-Type with a charset but no MIME type should be treated in the same way as an empty Content-Type, with regards to the default 'text/html' MIME being assumed.  This is the way my browser responds to such a Content-Type when there is HTML in the response body.\r\n\r\nThis was relevant to me because of a bug in ZF2 and the Content-Type headers it returns under certain circumstances, and the use of the Symfony DomCrawler component in the Behat integration testing/BDD tool.  I will pursue the Zend bug separately."
  },
  "12211096": {
    "github_issue_id": 7431,
    "state": "closed",
    "title": "[Service Container] Container camelize strange behavior",
    "body": "At Container the method camelize:\r\n\r\n```php\r\n    /**\r\n     * Camelizes a string.\r\n     *\r\n     * @param string $id A string to camelize\r\n     *\r\n     * @return string The camelized string\r\n     */\r\n    public static function camelize($id)\r\n    {\r\n        return preg_replace_callback('/(^|_|\\.)+(.)/', function ($match) { return ('.' === $match[1] ? '_' : '').strtoupper($match[2]); }, $id);\r\n    }\r\n```\r\n\r\nI don't understand why if the first char is . or _ is kept:\r\n\r\n```php\r\nphp > function camelize($id) { return preg_replace_callback('/(^|_|\\.)+(.)/', function ($match) { return ('.' === $match[1] ? '_' : '').strtoupper($match[2]); }, $id); }\r\nphp > echo camelize('test.test2') . \"\\n\";\r\nTest_Test2\r\nphp > echo camelize('.testtest2') . \"\\n\";\r\n.testtest2\r\nphp > echo camelize('test_test2') . \"\\n\";\r\nTestTest2\r\nphp > echo camelize('_test_test2') . \"\\n\";\r\n_testTest2\r\n```\r\n\r\nIf the camelize is used to transform for example an array on several variables it will fail:\r\n\r\n```php\r\nphp > $.t = 5;\r\nPHP Parse error:  syntax error, unexpected '.', expecting variable (T_VARIABLE) or '$' in php shell code on line 1\r\n\r\nParse error: syntax error, unexpected '.', expecting variable (T_VARIABLE) or '$' in php shell code on line 1\r\n```\r\n\r\nAnd is really strange that after you camelize a string it still keep underscore. My suggestion is that if a _ or . exists as first character would disappear on camelize, so instead of the below behavior both would return TestDa\r\n\r\n```php\r\nphp > echo camelize('test_da') . \"\\n\";\r\nTestDa\r\nphp > echo camelize('_test_da') . \"\\n\";\r\n_testDa\r\n```"
  },
  "11853585": {
    "github_issue_id": 7323,
    "state": "closed",
    "title": "BrowserKit::request does not handle network paths (Functional test for subdomains)",
    "body": "Hello,\r\n\r\nThere is a problem related to test for subdomains (all other tests work). Maybe I do something wrong!! I am able to access to sob-domain directly from a browser as will as I see the route in terminal ```app/console router:debug -e=test```\r\n\r\nthe route\r\n\r\n    anf_word_scrabble_widget:\r\n        path:   /scrabble/scrabble-finder-widget.php\r\n        defaults:  { _controller: MyBundle:Default:widget }\r\n        host:     w.{domain}\r\n        requirements:\r\n             domain: %domain%\r\n\r\nconfig.yml\r\n\r\n    domain: \"example.local\"\r\n\r\ntest\r\n\r\n    public function testWidget()\r\n    {\r\n       $client = static::createClient();\r\n    \r\n       $router = $client->getContainer()->get('router');\r\n       $domain = $client->getContainer()->getParameter('domain');\r\n    \r\n      $url = $router->generate('anf_word_scrabble_widget', array('domain' => $domain));\r\n\r\n      $crawler = $client->request('GET', $url);\r\n      $this->assertEquals(200, $client->getResponse()->getStatusCode());\r\n    }\r\n\r\nit throws an exception \r\n\r\n    No route found for &quot;GET //w.example.local/scrabble/scrabble-finder-widget.php&quot; (404 Not Found)\r\n\r\n\r\nI have tried to use \r\n\r\n    $client = static::createClient(array(), array(\r\n    'HTTP_HOST'       => 'w.example.local',\r\n    ));\r\n\r\n\r\nbut the same!\r\n"
  },
  "11684078": {
    "github_issue_id": 7274,
    "state": "closed",
    "title": "[2.2][Yaml] Blank values should resolve to null",
    "body": "The following syntax was valid in 2.1, and should be valid according to the YAML spec:\r\n\r\n    db.options:\r\n      password:\r\n    myproject.test:\r\n      param2: \"456\"\r\n\r\nHowever, since 2.2 this throws a `Symfony\\Component\\Yaml\\Exception\\ParseException`: Indentation problem in \"file.yml\" at line 2 (near \"password:\").\r\n\r\nIMO this should be fixed. Or if the BC break was intentional, it should be documented."
  },
  "11611544": {
    "github_issue_id": 7257,
    "state": "closed",
    "title": "[console]  add __toString() on ArgvInput",
    "body": "Hi There,\r\n\r\nI was wondering if a __toString() method could be added to Symfony\\Component\\Console\\Input\\ArgvInput or at least StringInput,  It would be helpful repackage a command line after its been parsed, among other things\r\n\r\n-Thanks"
  },
  "11600112": {
    "github_issue_id": 7254,
    "state": "closed",
    "title": "php templating engine service is inaccessible (set to private)",
    "body": "Can we change the service to public? If so, would that be considered a bug\r\nfix or a new feature?"
  },
  "11511248": {
    "github_issue_id": 7221,
    "state": "closed",
    "title": "[2.0][2.1][FrameworkBundle] disabling CSRF protection doesn't work with the `enabled` flag",
    "body": "Using\r\n```\r\nframework:\r\n  csrf_protection:\r\n    enabled: false\r\n```\r\nonly disables the CSRF protection for Symfony 2.2. But to work with 2.0, 2.1, and 2.2 actually\r\n```\r\nframework:\r\n  csrf_protection: false\r\n```\r\nhas to be used.\r\n\r\nSee https://travis-ci.org/craue/TwigExtensionsBundle/builds/5138388 and https://travis-ci.org/craue/TwigExtensionsBundle/builds/5139467 ."
  },
  "11507972": {
    "github_issue_id": 7219,
    "state": "closed",
    "title": "[DomCrawler] relative links",
    "body": "relative links seems not to be handled correct inside `Link` the class\r\n\r\nI would expect\r\n\r\n```php\r\n    public function testRelativeLink()\r\n    {\r\n        $dom = new \\DOMDocument();\r\n        $dom->loadHTML('<html><a href=\"../foo\">foo</a></html>');\r\n\r\n        $node = $dom->getElementsByTagName('a')->item(0);\r\n        $link = new Link($node, 'http://example.com/bar/');\r\n\r\n        $this->assertEquals('http://example.com/foo', $link->getUri());\r\n    }\r\n```"
  },
  "11338172": {
    "github_issue_id": 7170,
    "state": "closed",
    "title": "[HTTPFoundation] Use `apache_request_headers` when available",
    "body": "Both my Apache installs strip `Authorization` headers (even though they're not CGI implementations) and don't populate `HTTP_AUTHORIZATION`.\r\n\r\nUsing `apache_request_headers` when available, would seem to be more robust."
  },
  "11337837": {
    "github_issue_id": 7169,
    "state": "closed",
    "title": "Schema relative URLs not working in combination with the TestClient",
    "body": "The schema relative URLs introduced in #3958 are great. However, this does not seem to be working in combination with the TestClient. The URLs that are generated with a relative schema are being prefixed with the configured host and the default schema.\r\n\r\nE.g.\r\n\r\n```jinja\r\n{{ url('blog', {}, true) }}\r\n```\r\n\r\nWhen on `http://localhost` test client will try to visit: `http://localhost//localhost/blog` instead of `http://localhost/blog`.\r\n\r\n"
  },
  "11203908": {
    "github_issue_id": 7139,
    "state": "closed",
    "title": "[Form] Binding false to a checkbox makes the checkbox being checked by default",
    "body": "I am not sure about whether this is a bug or by design: if a checkbox is bound to a boolean FALSE value, the checkbox is checked by default.\r\n\r\nFailing test case:\r\n```php\r\n    public function testBindWithFalseValueUnchecked()\r\n    {\r\n        $form = $this->factory->create('checkbox', null, array(\r\n            'value' => '1',\r\n        ));\r\n        $form->bind(false);\r\n\r\n        $this->assertFalse($form->getData());\r\n        $view = $form->createView();\r\n        $this->assertFalse($view->vars['checked']);\r\n    }\r\n```"
  },
  "11110070": {
    "github_issue_id": 7106,
    "state": "closed",
    "title": "[Process] Add a version check to the code added in #7102",
    "body": "When PHP 5.5 is released, and if the code still seems to work fine, a version check could /should be added to the block added in #7102 so that it's only executed on 5.3/5.4 since these are the buggy versions."
  },
  "11023512": {
    "github_issue_id": 7078,
    "state": "closed",
    "title": "[Process] Orphan temporary files are left on Windows",
    "body": "On Windows `Process::start` creates a temporary file every time because of this code:\r\n```php\r\n        if (defined('PHP_WINDOWS_VERSION_BUILD')) {\r\n            $this->fileHandles = array(\r\n                self::STDOUT => tmpfile(),\r\n            );\r\n```\r\nWhen being invoked for thousands of times as part of task scheduling pipeline, it leaves thousands of temporary files and eventually hits the limit at 65536 files per directory, after which point it can't create a new temporary file and simply dies.\r\n\r\nAfter being used, the temporary file should be deleted."
  },
  "10704019": {
    "github_issue_id": 6986,
    "state": "closed",
    "title": "[DomCrawler] Uppercase HTTP/HTTPS/FILE not seen as absolute URL",
    "body": "See the line here:\r\nhttps://github.com/symfony/DomCrawler/blob/master/Link.php#L49\r\n\r\nIf a URL from a crawled page is badly formed to use an uppercase URI scheme, DomCrawler will not recognize it as an absolute link."
  },
  "10605836": {
    "github_issue_id": 6961,
    "state": "closed",
    "title": "BinaryFileResponse - Error on calculate end value",
    "body": "the end is calculated wrong:\r\nlist($start, $end) = array_map('intval', explode('-', substr($range, 6), 2)) + array(0);\r\n\r\n                if ('' !== $end) {\r\n                    $this->maxlen = $end - $start;\r\n                } else {\r\n                    $end = $this->file->getSize() - 1;\r\n                }\r\n\r\nBecause intval function works on every value, the end value of '' is 0. So the if statement is never true."
  },
  "10546193": {
    "github_issue_id": 6943,
    "state": "closed",
    "title": "[TwigBridge][Translation] TwigExtractor duplicates with trans_default_domain",
    "body": "Given this template, all translations are extracted twice.\r\n\r\nOnce for the correct translation domain (as specified by `{% trans_default_domain %}` and once wrongly for the default domain. This applies to the current template, its parent and the embedded one.\r\n\r\n```html+jinja\r\n{% extends '::base.html.twig' %}\r\n\r\n{% trans_default_domain \"users\" %}\r\n\r\n{% block content_header %}\r\n    <h1>{{ 'heading.create'|trans }}</h1>\r\n{% endblock %}\r\n\r\n{% block content_layout %}\r\n    {# .. #}\r\n\r\n    {% embed ':Layout:content_full_size.html.twig'%}\r\n        {% trans_default_domain \"users\" %}\r\n\r\n        {# .. #}\r\n    {% endembed %}\r\n{% endblock %}\r\n```"
  },
  "10533801": {
    "github_issue_id": 6935,
    "state": "closed",
    "title": "[Console] Clean the unit tests",
    "body": "Each of the unit test methods should be splitted in smaller blocks, see InputOptionTest for a bad example."
  },
  "9837048": {
    "github_issue_id": 6651,
    "state": "closed",
    "title": "UniqueEntity in edit/update action",
    "body": "In entity I use: \r\n@UniqueEntity(fields={\"email\"}, groups={\"new\", \"edit\"})\r\n\r\nbut i have a problem when I try validate in edit mode.\r\nWhen I submit form with not changed email field, then I get error \"This value is already used.\"\r\n"
  },
  "9836344": {
    "github_issue_id": 6649,
    "state": "closed",
    "title": "[Console][Bug] Using short options with empty strings cause \"Uninitialized string offset: 0\" notice.",
    "body": "Example:\r\nphp app/console server:run -d \"\" localhost:8080\r\nPHP Notice:  Uninitialized string offset: 0 in ~/code/project/vendor/symfony/symfony/src/Symfony/Component/Console/Input/ArgvInput.php on line 222"
  },
  "9713017": {
    "github_issue_id": 6586,
    "state": "closed",
    "title": "Finder doesn't respect valid glob syntax in name()",
    "body": "It would seem the Finder component does not respect an otherwise valid glob pattern in the name() method, for example:\r\n\r\n```\r\n->name('*.{jpg,jpeg,gif,png}');\r\n```\r\n"
  },
  "9649916": {
    "github_issue_id": 6544,
    "state": "closed",
    "title": "[Form] Make exception handling consistent with other components",
    "body": "The form component currently implements exceptions differently than in other components. This should be made consistent."
  },
  "9245942": {
    "github_issue_id": 6315,
    "state": "closed",
    "title": "Better naming for ContainerBuilder::findTaggedServiceIds",
    "body": "The name of ContainerBuilder::findTaggedServiceIds does not really fit it's return value. Instead of an array of service IDs (which would be my first guess for the method's return type), it returns and array of tags. The returned array's keys are the promised service IDs. \r\n\r\nMaybe this method's name should be changed to ContainerBuilder::findTagsByName or something similar, which reflects the method's purpose better.\r\n\r\nIn the same context: doen't the method Definition::getTag return all tags of the definition with a certain name? I don't want to be picky, but I would like these method names to give actual hints about their return values."
  },
  "8610435": {
    "github_issue_id": 6101,
    "state": "closed",
    "title": "BinaryFileResponse - hashing strategy",
    "body": "Currently the hashing system in the new BinaryFileResponse has known limitations. It will be greatly beneficial if these are addressed by offering means to overcome these.\n\nhttps://github.com/symfony/symfony/commit/7322696378e96a812c78c1f23b80606b7fb06ac4#commitcomment-2193066\n\nAn option is to simplify the logic for hashing, by separating the hashing from the setting of the entity tag and from the file-input. This can be done simply by putting sha1_file() in a different method, that can be easily overridden, or by allowing a more OO approach by injecting the hashing strategy. The latter might be a bit more bulky but allows the most flexibility while maintaining clean separation of concerns."
  },
  "8419747": {
    "github_issue_id": 6029,
    "state": "closed",
    "title": "Deprecated: IntlDateFormatter::setTimeZoneId():",
    "body": "As i am playing with 5.5.0 alpha1 and a sf application i get this.\n\n```\nDeprecated: IntlDateFormatter::setTimeZoneId(): Use datefmt_set_timezone() instead, which also accepts a plain time zone identifier and for which this function is now an alias in /Users/Henrik/Work/myapp/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/Type/DateType.php line 262\n```"
  },
  "8200475": {
    "github_issue_id": 5940,
    "state": "closed",
    "title": "[Translation] XLIFF implementation broken by design",
    "body": "We are having an issue with the way the xliff format is implemented inside symfony2. \r\nThis was brought here before by @schmittjoh in #2252 but was closed down.\r\n\r\nI'm proposing to do a BC break here and change the XLIFF to a format where translation tools are actually useful. \r\ne.g. Because we use keys as our translation source the tools like www.getlocalization.com show those keys as a source to be translated which according to the xliff specification is the right thing to do.\r\n\r\n```xml\r\n<trans-unit id=\"<id>\" resname=\"<resname>\">\r\n  <source>Original string</source>\r\n  <target>Target language translation</target>\r\n</trans-unit>\r\n```\r\n\r\nWhere the < id > is somesort of unique id e.g hash of  < resname >, The < resname > is set to translation key or \"Original string\" in case that translation is not based on the keys and the < source > tag contains the string in language the translations will be made from."
  },
  "7563119": {
    "github_issue_id": 5742,
    "state": "closed",
    "title": "[Console] [Windows] recuperation of the console height and width for non english OS",
    "body": "[here](https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Console/Application.php#L853) and [here](https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Console/Application.php#L875), a `exec(\"mode CON\")` is made in order to parse line and column number of the console from Windows command.\r\n\r\nThis only work on english Windows.\r\n\r\nFor example with french Windows: \r\n```\r\n>php -r \"exec('MODE CON', $output);var_dump($output);\"\r\narray(9) {\r\n  [0]=>  string(0) \"\"\r\n  [1]=>  string(27) \"Statut du p\u00e9riph\u00e9rique CON:\"\r\n  [2]=>  string(27) \"---------------------------\"\r\n  [3]=>  string(26) \"    Lignes\u00a0:          9999\"\r\n  [4]=>  string(24) \"    Colonnes\u00a0:        80\"\r\n  [5]=>  string(24) \"    Vitesse clavier\u00a0: 31\"\r\n  [6]=>  string(23) \"    D\u00e9lai clavier\u00a0:   1\"\r\n  [7]=>  string(25) \"    Page de codes\u00a0:   437\"\r\n  [8]=>  string(0) \"\"\r\n}\r\n```\r\nCouldn't find yet a nice and universal way to do it yet. If anyone has an idea :)"
  },
  "7409912": {
    "github_issue_id": 5695,
    "state": "closed",
    "title": "[2.1][Security] Check_path and logout fails on non latin path",
    "body": "RuntimeException: You must activate the logout in your security firewall configuration\r\n\r\nIn example:\r\n``` yaml\r\n# app/config/security.yml\r\nsecurity:\r\n    firewalls:\r\n        main:\r\n            form_login:\r\n\r\n                # this is ok\r\n                login_path:  /\u0432\u0445\u043e\u0434 \r\n\r\n                # check_path fails\r\n                check_path:  /\u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f\r\n            logout:\r\n                # logout path fails\r\n                path:   /\u0432\u044b\u0445\u043e\u0434 \r\n```\r\n\r\nAll this happens because of Symfony\\Component\\Security\\Http\\HttpUtils::checkRequestPath request query string not url decoded\r\n\r\n``` php\r\n    public function checkRequestPath(Request $request, $path)\r\n    {\r\n        if ('/' !== $path[0]) {\r\n            try {\r\n                $parameters = $this->urlMatcher->match($request->getPathInfo());\r\n\r\n                return $path === $parameters['_route'];\r\n            } catch (MethodNotAllowedException $e) {\r\n                return false;\r\n            } catch (ResourceNotFoundException $e) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        /**\r\n        * var_dump($request->getPathInfo()) ;\r\n        * var_dump($path);\r\n        * (\"/%d0%b2%d1%8b%d1%85%d0%be%d0%b4\" === $request->getPathInfo()) true\r\n        * ($path === urldecode($request->getPathInfo())) true\r\n        */\r\n        return $path === $request->getPathInfo();\r\n    }\r\n```"
  },
  "7344101": {
    "github_issue_id": 5669,
    "state": "closed",
    "title": "[Console] List available commands in the help command",
    "body": "The help command should at least mention the list command (only if it's enabled though), or just simply list available commands when called on the top level `console --help` (not `console foo --help`). \r\n\r\nSee composer/composer#1143"
  },
  "6841472": {
    "github_issue_id": 5506,
    "state": "closed",
    "title": "JsonResponse can not be used to return an empty array",
    "body": "I have a REST API that is used for retrieving a list of objects. From our perspective this API could quite legitimately return no matching results (ie an empty array).\n\nJsonResponse force converts an empty array to an ArrayObject which then gets output as an empty object giving us the wrong results on the client side. Nothing in the JSON spec mandates that the top level element can not be an empty array as such this looks like a bug in the Symfony JsonResponse object.\n\nThe offending code is viewable [here](https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/JsonResponse.php#L80). Fixing it should just be a matter of removing that if statement."
  },
  "6371759": {
    "github_issue_id": 5316,
    "state": "closed",
    "title": "the help of the command does not display global options",
    "body": "Options available from the Application itself don't appear when displaying the help of a command by adding ``--help``. Because of this, users need to be aware of the component implementation to know that more options may be available and that they need to call ``app/console help`` without specifying a command name to show them.\n\nI suggest adding a section ``Global options`` in the help output to show them too, keeping them isolated from command-specific options (btw, weren't they displayed in the list at some point ?)"
  },
  "5776550": {
    "github_issue_id": 5019,
    "state": "closed",
    "title": "Wrong display in the timeline when 2 listeners have the same short class name",
    "body": "When 2 listeners have the same short class name, the timeline display them in the same row (as if it was the same listener called twice) instead of using 2 rows.\n\nI saw it with AsseticBundle and NelmioApiDocBundle which have both a RequestListener (you may need to change the threshold to see them in the timeline as they are faster than 1ms)"
  },
  "5397810": {
    "github_issue_id": 4712,
    "state": "closed",
    "title": "onFlush events with 2 or more dbal connections throw ErrorExceptions",
    "body": "\nIn configuration's with 2 connections, onFlush events written to `(appDevDebugProject|appProd)Container.php` contain calls to addEventListener. The method signature for the 2nd connection is incorrect. Changing the order the connection's are specified produces the incorrect signature on whatever happens to be the 2nd connection.\n\nCompare the signatures for MysqlConnectionService and PlatConnectionService:\n\n\n`appDevDebugProjectContainer.php`\n```php\nprotected function getDoctrine_Dbal_MysqlConnectionService()\n{\n    $c->addEventListener(array(0 => 'onFlush'), $this->get('nrc_notice.notice.notice_listener'));\n}\n\n\nprotected function getDoctrine_Dbal_PlatConnectionService()\n{\n    $c->addEventListener(array(0 => array(0 => 'onFlush')), $this->get('nrc_notice.notice.notice_listener'));\n}\n```\n\nError Message\n```text\nErrorException: Warning: Illegal offset type in /Applications/MAMP/htdocs/checknet.local/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/ContainerAwareEventManager.php line 115\n\nin /Applications/MAMP/htdocs/checknet.local/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/ContainerAwareEventManager.php line 115\nat ErrorHandler->handle('2', 'Illegal offset type', '/Applications/MAMP/htdocs/checknet.local/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/ContainerAwareEventManager.php', '115', array('events' => array(array('onFlush')), 'listener' => object(NoticeListener), 'hash' => '000000000bfa891500000000295a660c', 'event' => array('onFlush'))) in /Applications/MAMP/htdocs/checknet.local/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/ContainerAwareEventManager.php line 115\nat ContainerAwareEventManager->addEventListener(array(array('onFlush')), object(NoticeListener)) in /Applications/MAMP/htdocs/checknet.local/app/cache/dev/appDevDebugProjectContainer.php line 272\nat appDevDebugProjectContainer->getDoctrine_Dbal_PlatConnectionService() in /Applications/MAMP/htdocs/checknet.local/app/bootstrap.php.cache line 194\nat Container->get('doctrine.dbal.plat_connection') in /Applications/MAMP/htdocs/checknet.local/app/cache/dev/appDevDebugProjectContainer.php line 370\nat appDevDebugProjectContainer->getDoctrine_Orm_PlatEntityManagerService() in /Applications/MAMP/htdocs/checknet.local/app/bootstrap.php.cache line 194\nat Container->get('doctrine.orm.plat_entity_manager') in /Applications/MAMP/htdocs/checknet.local/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/ManagerRegistry.php line 35\n```\n\nMy `config.yml`\n```yml\ndoctrine:\n    dbal:\n        default_connection: mysql\n        connections:\n            mysql:\n                 driver: etc...\n            plat:\n                 driver_class:   etc...\n```\n\nMy `services.yml`\n```yml\nservices:\n  nrc_notice.notice.notice_listener:\n     class: Some\\Listener\\Class\n     arguments:\n       container: '@service_container'\n     tags:\n        - { name: kernel.event_listener, event: nrc_notice.notice.change.approved, method: onNotify }\n```"
  },
  "5330186": {
    "github_issue_id": 4681,
    "state": "closed",
    "title": "HTTP/1.0 and caching",
    "body": "Symfony sends ```cache-control: no-cache``` header by default. This make HTTP/1.1-compatible client and (correctly configured) reverse proxy not to cache the response. \nBut if a client supports only HTTP/1.0 protocol, the ```cache-control``` header will be ignored. To prevent caching page in HTTP/1.0 protocol, Symfony should send also Expires or Pragma headers by default."
  },
  "4892872": {
    "github_issue_id": 4494,
    "state": "closed",
    "title": "[Form] prependView/appendModelTransformer() is needed in some cases",
    "body": "see #4473"
  },
  "4546032": {
    "github_issue_id": 4265,
    "state": "closed",
    "title": "suggestion: webprofiler should not hide bottom page content",
    "body": "atm webprofiler has z-index positive to be over content. this is good but if I have some information in last line of output it is hidden under webprofiler. this could probably be fixed with setting for body margin bottom on height of webprofiler bar."
  },
  "4279499": {
    "github_issue_id": 4108,
    "state": "closed",
    "title": "[Form] nonexistent option `index_generation`",
    "body": "https://github.com/symfony/symfony/blob/76ef8da030b7bee4751790fd0666cacd3ca3278b/UPGRADE-2.1.md mentions the `index_generation` option for choice fields. But this option doesn't seem to exist (anymore)."
  },
  "4236377": {
    "github_issue_id": 4077,
    "state": "closed",
    "title": "[Form] add guess pattern",
    "body": "Bug fix: no\r\nFeature addition: yes\r\nBackwards compatibility break: no\r\nSymfony2 tests pass: yes\r\nFixes the following tickets: https://github.com/symfony/symfony/issues/3766\r\nTodo: -\r\n\r\nDue to some trouble when rebase my previous PR i open a new one with Master merged\r\nRefs PR: https://github.com/symfony/symfony/pull/3927"
  },
  "4213658": {
    "github_issue_id": 4045,
    "state": "closed",
    "title": "[Guesser] Add some comments in the code",
    "body": "That is basically adding the comments that have been made [in the PR](https://github.com/symfony/symfony/pull/3927#r713663) into the code.\r\n\r\nThe following guessers must be commented:\r\n\r\n- validator,\r\n- ORM,\r\n- ODM,\r\n- Propel"
  },
  "4206083": {
    "github_issue_id": 4023,
    "state": "closed",
    "title": "[Finder] Fix regexp detection in FileContentFilterIterator",
    "body": "The iterator accepts both string and regexps, then there is a [test](https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Finder/Iterator/FilecontentFilterIterator.php#L73) to detect regexps.\r\n\r\nThe test is flawed:\r\n\r\n- http://fr2.php.net/manual/en/regexp.reference.delimiters.php: \"A delimiter can be any non-alphanumeric, non-backslash, non-whitespace character\", delimiters could also be \"{\" and \"}\"\r\n- http://fr2.php.net/manual/en/reference.pcre.pattern.modifiers.php: some modifiers are missing and there could be multiple delimiters.\r\n\r\nThe test need to be enhanced (and tested)"
  },
  "4205402": {
    "github_issue_id": 4021,
    "state": "closed",
    "title": "Yaml parsing problem",
    "body": "Extracted from https://github.com/fabpot/yaml/issues/10:\r\n\r\nthe method \"parseQuotedScalar\" is used for two purposes, parsing a delimited string, and a plain string, but when its being given a plain string, it still treats it as delimited, and thus only returns the first string it matches.\r\n\r\nIf you use something like this, it doesn't really work:\r\n\r\ntest: 'don't do somthin' like that'\r\n\r\nyou'd get 'test' to simply equal 'don'.\r\n\r\ni'm using this package to do a bit of yaml validation, so i added this snippit to the method\r\n\r\n    if ((!$delimiters) && (strlen($match[0]) < strlen($scalar))) {\r\n      throw new InvalidArgumentException(sprintf(\"Malformed YAML (check your use of apostrophes and quotes): \\n %s.\", substr($scalar, $i)));\r\n    }\r\n\r\nI'm sure this isn't the ideal fix, but I didn't want to battle with modifying the validation regex.\r\n"
  },
  "4187300": {
    "github_issue_id": 3995,
    "state": "closed",
    "title": "[Form] property path for violations is incorrect",
    "body": "I have the following situation:\r\n\r\nThere is a form which shows a list of entities of some kind, kind of similar to a collection form. However, the entities need to be shown in some kind of hierarchy, so even though the app Data is a plain array, the clientData and form it self are built in the following way:\r\n\r\n```\r\nform:\r\n  Mon:\r\n    0: entity\r\n    1: entity\r\n  Tue:\r\n    0: entity\r\n```\r\netc...\r\n\r\nThe transformation between the two is done using a DataTransformer on the topmost form: https://gist.github.com/2419554\r\n\r\nThe form works fine except for validation, for some reason all errors bubble up all the way to the top form, even if they should display on the bottom forms (form.Mon.0, form.Mon.1, etc). While trying to find out what was wrong, I came to the conclusion that the property path of the violations was incorrect, or at least not conform to the way the form was build up:\r\n\r\ndata[0].field\r\ndata[0].field2\r\ndata[1].field\r\n\r\nrather than\r\n\r\ndata[Mon][0].field\r\ndata[Mon][0].field2\r\ndata[Mon][1].field\r\n\r\nThis causes them to bubble all the way up, as they cannot be mapped to the form."
  },
  "4169155": {
    "github_issue_id": 3971,
    "state": "closed",
    "title": "UPGRADE-2.1.md is missing the switch from Symfony's DoctrineBundle to Doctrine's",
    "body": "One of the steps involved in upgrading Symfony from 2.0 to 2.1 is that the namespace of the DoctrineBundle needs to be changed in the AppKernel.php\r\n\r\n```\r\nnew Symfony\\Bundle\\DoctrineBundle\\DoctrineBundle(),\r\n```\r\n\r\nShould become\r\n\r\n```\r\nnew Doctrine\\Bundle\\DoctrineBundle\\DoctrineBundle(),\r\n```\r\n\r\nThis information seems to be missing in the upgrade guide"
  },
  "4117969": {
    "github_issue_id": 3945,
    "state": "closed",
    "title": "[Form] [DoctrineBridge] Better field type guessing for array doctrine type and array validator type",
    "body": "Bug fix: no\r\nFeature addition: yes\r\nBackwards compatibility break: no\r\nSymfony2 tests pass: yes\r\nFixes the following tickets: #1692\r\nTodo: -"
  },
  "4104878": {
    "github_issue_id": 3927,
    "state": "closed",
    "title": "[Form] add guess pattern",
    "body": "Bug fix: no\r\nFeature addition: yes\r\nBackwards compatibility break: no\r\nSymfony2 tests pass: yes\r\nFixes the following tickets: https://github.com/symfony/symfony/issues/3766\r\nTodo: -"
  },
  "4058998": {
    "github_issue_id": 3867,
    "state": "closed",
    "title": "[Form] form named \"search\" with a field named \"search\" => can't set default data",
    "body": "A form class named \"search\" with a single field named \"search\" sent over GET leads to the following url:\r\n```/?search=mysearchstring```\r\nIf the form is rendered using ```{{ form_widget(form) }}```\r\n\r\nI kinda like this behavior as it gives good looking url but on the other hand, you can't set default data properly.\r\n\r\n```$form->bindRequest($request);``` throws ```Expected argument of type \"array\", \"string\" given```.\r\n\r\n```php\r\n$defaultData = array('search' => $request->query->get('search', \"\"));\r\n$form = $this->createForm(new SearchFormType(), $defaultData);\r\n```\r\nfills the search field with the string ```Array```.\r\n\r\nWith a form named \"test\" and a single field named \"test\" you get the proper: ```/?test[test]=mysearchstring```.\r\n\r\nWhy does \"search\" provoke a unique behavior?\r\nHow can I have a simple url (?search=mysearchstring) while not breaking default data setting?\r\n\r\nFor reference here is the class I use:\r\n\r\n```php\r\n<?php\r\n\r\nnamespace Acme\\SiteBundle\\Form\\Type;\r\n\r\nuse Symfony\\Component\\Form\\AbstractType;\r\nuse Symfony\\Component\\Form\\FormBuilder;\r\n\r\nclass SearchFormType extends AbstractType\r\n{\r\n    public function buildForm(FormBuilder $builder, array $options)\r\n    {\r\n        $builder\r\n            ->add('search')\r\n        ;\r\n    }\r\n\r\n    public function getDefaultOptions(array $options)\r\n    {\r\n        return array(\r\n            'csrf_protection' => false,\r\n        );\r\n    }\r\n\r\n    public function getName()\r\n    {\r\n        return 'search';\r\n    }\r\n}\r\n```\r\n\r\nSymfony 2.0.11"
  },
  "3948095": {
    "github_issue_id": 3766,
    "state": "closed",
    "title": "[Form] Constraint Assert/Regex does not use HTML5 pattern attribute",
    "body": "```php\r\n#Customer.php\r\n\r\nclass Customer {\r\n# (...)\r\n\r\n   /**\r\n    * @var string $phone\r\n    * @Assert\\NotBlank()\r\n    * @Assert\\Regex(\"/^\\(\\d{2}\\) \\d{4}-\\d{4}$/\")\r\n    * @ORM\\Column(name=\"phone\", type=\"string\", length=14)\r\n    */\r\n   private $phone;\r\n\r\n# (...)\r\n}\r\n```\r\n```php\r\n#CustomerType.php\r\n\r\nclass CustomerType extends AbstractType\r\n{\r\n# (...)\r\n   public function buildForm(FormBuilder $builder, array $options)\r\n   {\r\n       $builder\r\n           ->add('phone', null, array('label' => 'Telefone'))\r\n       ;\r\n   }\r\n# (...)\r\n}\r\n```\r\n\r\nHTML Result:\r\n\r\n```html\r\n<input type=\"text\" id=\"paggy_admin_customer_phone\" name=\"paggy_admin_customer[phone]\" required=\"required\" maxlength=\"14\" class=\"input-text\">\r\n```\r\n\r\n*Workaround:* If I add the \"pattern\" property, duplicating the code of entity, it works as expected:\r\n\r\n```php\r\n#CustomerType.php\r\n\r\nclass CustomerType extends AbstractType\r\n{\r\n# (...)\r\n   public function buildForm(FormBuilder $builder, array $options)\r\n   {\r\n       $builder\r\n           ->->add('phone', 'text', array('label' => 'Telefone', 'pattern' => '^\\\r\n(\\d{2}\\) \\d{4}-\\d{4}$'))\r\n       ;\r\n   }\r\n# (...)\r\n}\r\n```\r\n\r\nHTML Result:\r\n\r\n```html\r\n<input type=\"text\" id=\"paggy_admin_customer_phone\" name=\"paggy_admin_customer[phone]\" required=\"required\" maxlength=\"14\" pattern=\"^\\(\\d{2}\\) \\d{4}-\\d{4}$\" class=\"input-text\">\r\n```\r\n\r\nThanks!\r\n"
  },
  "3416929": {
    "github_issue_id": 3468,
    "state": "closed",
    "title": "[Form] Choice List in a Form",
    "body": "Hi.\r\n\r\nHere is my form [ProductType](https://github.com/umpirsky/symfony-standard/blob/f59d47767a07bf1e06d55a2ebff13a13ae6aa199/src/Acme/DemoBundle/Form/ProductType.php) and [this](https://github.com/umpirsky/symfony-standard/blob/f59d47767a07bf1e06d55a2ebff13a13ae6aa199/src/Acme/DemoBundle/Controller/ProductController.php#L51) is how I use it in action.\r\n\r\nI expect it to render available categories in choice list, but it renders text field for category, I read the doc, and [this](http://epixa.com/2011/08/create-and-validate-a-choice-list-in-a-symfony-2-form.html) article, and tried the same, but all I get is a text field for category.\r\n\r\nIt renders available categories in choice list only if I remove [getDefaultOptions()](https://github.com/umpirsky/symfony-standard/blob/f59d47767a07bf1e06d55a2ebff13a13ae6aa199/src/Acme/DemoBundle/Form/ProductType.php#L23) from [ProductType](https://github.com/umpirsky/symfony-standard/blob/f59d47767a07bf1e06d55a2ebff13a13ae6aa199/src/Acme/DemoBundle/Form/ProductType.php) and explicitly pass [Product](https://github.com/umpirsky/symfony-standard/blob/f59d47767a07bf1e06d55a2ebff13a13ae6aa199/src/Acme/DemoBundle/Entity/Product.php) as a second parameter to [$this->createForm()](https://github.com/umpirsky/symfony-standard/blob/f59d47767a07bf1e06d55a2ebff13a13ae6aa199/src/Acme/DemoBundle/Controller/ProductController.php#L53), but I guess that is not the right way to do it."
  },
  "3100645": {
    "github_issue_id": 3272,
    "state": "closed",
    "title": "[Form][DelegatingValidator] Fix path mapping for embedded forms",
    "body": "Bug fix: yes\r\nFeature addition: no\r\nBackwards compatibility break: no\r\nSymfony2 tests pass: DelegatingValidatorTest\r\nFixes the following tickets: [#1917](https://github.com/symfony/symfony/issues/1917), [#3018](https://github.com/symfony/symfony/issues/3018)\r\n\r\nTried to fix the bug where multi-input types (i.e. date, radio) of embedded forms get wrong path mapping\r\n\r\n    children[subForm][choiceType].data\r\nshould be\r\n\r\n    children[subForm].data.choiceType"
  },
  "3065657": {
    "github_issue_id": 3251,
    "state": "closed",
    "title": "[Dependency Injection] Service declaration tags should allow array types",
    "body": "Hello,\r\n\r\nUsing the following yml service declation:\r\n```(...)tags:\r\n        - { name: acme.myservice, sections:{main:true, side:true} }```\r\n\r\nproduces a correct array when parsed in a ComplierPass, but then throws:\r\n\r\n```ErrorException: Warning: DOMElement::setAttribute() expects parameter 2 to be string, \r\narray given in (...)vendor/symfony/src/Symfony/Component/DependencyInjection/Dumper/XmlDumper.php line 141```"
  },
  "2949851": {
    "github_issue_id": 3179,
    "state": "closed",
    "title": "[Validator] StaticMethodLoader invokes wrong method",
    "body": "    interface FooInterface {\r\n\r\n        public static function loadValidatorMetadata($metadata);\r\n    }\r\n\r\n    class Bar implements FooInterface {\r\n\r\n        private $baz = 'bogus';\r\n\r\n        public static function loadValidatorMetadata($metadata) {\r\n            $metadata->addPropertyConstraint('baz', new Assert\\MinLength(10));\r\n        }\r\n\r\n    }\r\n\r\n    $validator = new Validator(\r\n                    new ClassMetadataFactory(new StaticMethodLoader()),\r\n                    new ConstraintValidatorFactory()\r\n    );\r\n    $violations = $validator->validate(new Bar);\r\n    if ($violations->count()) {\r\n        throw new \\Exception($violations);\r\n    }\r\n\r\nI have classes that needs to be validated with ```Symfony\\Component\\Validator``` and this classes uses ```StaticMethodLoader``` strategy for validation. I declared ```loadValidatorMetadata``` method in interface but ```StaticMethodLoader``` invokes wrong method and following error occures.\r\n\r\n    Fatal error: Uncaught exception 'ReflectionException' with message 'Trying to invoke abstract method FooInterface::loadValidatorMetadata()' in Symfony/Component/Validator/Mapping/Loader/StaticMethodLoader.php on line 44\r\n\r\n    ReflectionException: Trying to invoke abstract method Heatbeat\\FooInterface::loadValidatorMetadata() in /Symfony/Component/Validator/Mapping/Loader/StaticMethodLoader.php on line 44\r\n\r\n\r\nLooks like there is a problem with Reflection. "
  },
  "2915647": {
    "github_issue_id": 3163,
    "state": "closed",
    "title": "[Validator] UniqueEntityValidator can't validate values of proxy objects",
    "body": "If you have an association and have that as one of your fields for using the Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntityValidator the unique validation wont work if your object is a proxy and hasn't had the identifier field hydrated yet.\r\n\r\nI didn't know how to put this into a unit test but did work out a very crude fix in the validator that i'm sure isn't suitable to be a patch but I think helps illustrate the problem better.\r\n\r\n```php\r\n            if (isset($class->associationMappings[$fieldName])) {\r\n\r\n                // very crude fix to the problem\r\n                if ($criteria[$fieldName] instanceof \\Doctrine\\ORM\\Proxy\\Proxy) {\r\n                    $criteria[$fieldName]->__load();\r\n                }\r\n\r\n                $relatedClass = $em->getClassMetadata($class->associationMappings[$fieldName]['targetEntity']);\r\n                $relatedId = $relatedClass->getIdentifierValues($criteria[$fieldName]);\r\n\r\n                if (count($relatedId) > 1) {\r\n                    throw new ConstraintDefinitionException(sprintf('Associated entities are not allowed to have more than one identifier field to be part of a unique constraint in %s#%s.', $class->name, $fieldName));\r\n                }\r\n                $criteria[$fieldName] = array_pop($relatedId);\r\n            }\r\n\r\n```\r\n\r\nI experienced this on Symfony 2.0.9, running on OS X Lion"
  },
  "2777072": {
    "github_issue_id": 3075,
    "state": "closed",
    "title": "[Form][Guesser] The prototype is an empty string for a collection which is not one-to-many",
    "body": "The prototype is an empty string for a collection which is not backed by one-to-many relationship\r\n\r\n```php\r\n{% debug form_widget(form.extraAttributes.get('prototype')) %}\r\n```\r\nreturns `string(0) \"\"`\r\n\r\n\r\nbuildForm method\r\n\r\n```php\r\n$builder\r\n            ->add('images', 'collection', array('type' => new ProductimageType(), 'allow_add' => true, 'allow_delete' => true, 'label'=> 'Imagini', 'prototype' => true ))\r\n            ->add('extraAttributes', 'collection', array('type' => 'hidden', 'allow_add' => true, 'allow_delete' => true, 'label'=> 'Attribute', 'prototype' => true))\r\n        ;\r\n```\r\n`images` ,which is one-to-many relationship in Doctrine2, displays the prototype properly, whereas `extraAttributes` prototype is empty\r\n\r\n\r\nField definitions:\r\n\r\n```php\r\n /**\r\n     * @ORM\\OneToMany(targetEntity=\"Productimage\", mappedBy=\"product\", orphanRemoval=true, cascade={\"persist\"})\r\n     */\r\n    private $images;\r\n\r\n  /**\r\n     * @var array\r\n     * @ORM\\Column(name=\"Other\", type=\"array\", nullable=true)\r\n     */\r\n    private $extraAttributes;\r\n```\r\n\r\nI add \r\n\r\n```html\r\n<input class=\"form-hidden\" type=\"hidden\" id=\"product_extraAttributes_0_type\" name=\"product[extraAttributes][0][type]\">\r\n```\r\nmanually via javascript, and the engine properly adds fields as intended, so basically everything works except the prototype generation.\r\n"
  },
  "2638748": {
    "github_issue_id": 2945,
    "state": "closed",
    "title": "[Form][DelegatingValidator] Duplicated error when using a DataTransformer and a NotBlank constraint",
    "body": "If a DataTransformer fails, the value is set to ``null`` in the underlying object. This is logical as we don't have any value to set in it reliably (think for instance of the case where your DataTransformer transforms an id into an object and the setter uses a typehint). But this leads to an issue if the validation has a NotBlank or NotNull constraint on the field as you will then see an error ``This value should not be blank`` on the field (which was not blank in the client data).\r\n\r\nSee #2413 for a place where this error occurs often: the repeated type."
  },
  "2356260": {
    "github_issue_id": 2729,
    "state": "closed",
    "title": "[Form][DelegatingValidator] Form error bubbles to the top with @Collection constraint and arrays",
    "body": "With the following code, errors related to Post->date['year'] are attached to the form instead of the 'year' element:\r\n\r\n``` php\r\n<?php\r\nclass Post\r\n{\r\n    /** @Collection(fields={\"year\"=@NotBlank}) */\r\n    public $date = array('year' => null);\r\n}\r\n\r\n$dateForm = $this->get('form.factory')\r\n    ->createNamedBuilder('form', 'date')\r\n    ->add('year', 'text');\r\n\r\n$form = $this->get('form.factory')\r\n    ->createBuilder('form', new Post)\r\n    ->add($dateForm)\r\n    ->getForm()\r\n    ;\r\n\r\n$form->bind(array());\r\n\r\necho $form->getErrorsAsString();\r\n\r\n```\r\n\r\ngetErrorsAsString output:\r\n\r\n```\r\nERROR: This value should not be blank\r\ndate:\r\n    year:\r\n        No errors\r\n```\r\n\r\nExpected output:\r\n\r\n\r\n```\r\ndate:\r\n    year:\r\n        ERROR: This value should not be blank\r\n```"
  },
  "2279872": {
    "github_issue_id": 2674,
    "state": "closed",
    "title": "[Validator] what about to have MinCount and MaxCount validators",
    "body": "Let's say we have a bloger which can assign from one to five tags to his blog. While submiting the server should count  tags and check whether the collection in the allowed range. It can be done with `Choice` validator and `min` and `max` options. But in this case we have such problems:\r\n\r\n* It should fetch all tags from db to check that choices are valid, \r\n* Very hard to define callback in case of using `$repository->findAll()`\r\n\r\nFrom another side we have `Min\\Max` and `MinLength\\MaxLength` validators but they very restrictive (the first takes only integers and second one only strings)\r\n\r\nSo I am thinking of moving count validation rules from Choice to a new validators called `MinCount` and `MaxCount`\r\n\r\nBTW I can do a PR if you find it useful."
  },
  "2170024": {
    "github_issue_id": 2577,
    "state": "closed",
    "title": "[HttpFoundation] UploadedFile needs Locale parameter to pass",
    "body": "Because function basename() is locale aware, the constructor need to pass a locale parameter and set it in constructor. Without setting a locale non-latin first characters cut off from beginning until a latin letter or a non-letter character found in the name.\r\n\r\nfrom HttpFoundation\\File\\UploadedFile.php\r\n\r\n      \r\n        $this->originalName = basename($originalName);\r\n        $this->mimeType = $mimeType ?: 'application/octet-stream';\r\n        $this->size = $size;\r\n        $this->error = $error ?: UPLOAD_ERR_OK;\r\n        $this->test = (Boolean) $test;\r\n\r\n        parent::__construct($path, UPLOAD_ERR_OK === $this->error);\r\n    }\r\n\r\nShould be like this (an example):\r\n        setlocale(LC_ALL, 'ru_RU.UTF8');\r\n        $this->originalName = basename($originalName);\r\n        $this->mimeType = $mimeType ?: 'application/octet-stream';\r\n        $this->size = $size;\r\n        $this->error = $error ?: UPLOAD_ERR_OK;\r\n        $this->test = (Boolean) $test;\r\n\r\n        parent::__construct($path, UPLOAD_ERR_OK === $this->error);\r\n    }"
  },
  "2056030": {
    "github_issue_id": 2480,
    "state": "closed",
    "title": "[Validator] Allow Callback validator to be put on a field",
    "body": "Hey there,\r\n\r\nIs there a reason I'm missing that the callback validator *must* be applied to a class and not to a property?\r\nI need to blacklist values from a property and I'm forced to apply the validator to the class."
  },
  "1415333": {
    "github_issue_id": 1971,
    "state": "closed",
    "title": "[Form][DelegatingValidator] RepeatedType error keeps on bubbling to root form",
    "body": "When RepeatedType is nested inside another form, error messages such as \"This value should not be blank\" bubble up to the root form, instead of appearing above the field in the nested form.\r\n\r\nTo illustrate this issue, I have put together the following example:\r\n\r\n* Two types where one is nested in the other (child inside parent).\r\n* Both types have the RepeatedType field.\r\n* Both RepeatedType fields are NotBlank.\r\n\r\nAs you can see, the error message for the RepeatedType in the main type, appears right above the fields, but this doesn't happen for the nested type.\r\n\r\n![Screenshot](https://lh4.googleusercontent.com/-J-fC_SSILqM/Tkh8HkaFA9I/AAAAAAAAABg/rhRPP52nizQ/screenshot.png)\r\n\r\nHere are the types and models that can be used to demonstrate the issue:\r\n\r\n    class RegistrationParent\r\n    {\r\n        public $registrationChild;\r\n\r\n        /**\r\n         * @Assert\\NotBlank()\r\n         */\r\n        public $plainPassword;\r\n    }\r\n\r\n\r\n    class RegistrationChild\r\n    {\r\n        /**\r\n         * @Assert\\NotBlank()\r\n         */\r\n        public $plainPassword;\r\n    }\r\n\r\n\r\n    class RegistrationParentFormType extends AbstractType\r\n    {\r\n       public function buildForm(FormBuilder $builder, array $options)\r\n       {\r\n       $builder\r\n          ->add('registrationChild', new RegistrationChildFormType())\r\n          ->add('plainPassword', 'repeated', array(\r\n             'type' => 'password',\r\n          ))\r\n       ;\r\n     }\r\n\r\n\r\n    class RegistrationChildFormType extends AbstractType\r\n    {\r\n       public function buildForm(FormBuilder $builder, array $options)\r\n       {\r\n          $builder\r\n             ->add('plainPassword', 'repeated', array(\r\n                'type' => 'password',\r\n             ))\r\n          ;\r\n     }\r\n"
  },
  "1346672": {
    "github_issue_id": 1907,
    "state": "closed",
    "title": "An exception is thrown when the firewall matches a inexistent url and try to redirect to a route using the locale",
    "body": "When using a login route with the pattern ``/{_locale}/login``, the redirection works well when accessing an existing url secured by the firewall. But when accessing a inexistent url that matches the access control rule (easy when the rule secures ``^/admin``), the redirection to the login url fails with this exception:\r\n\r\n```\r\nThe \"fos_user_security_login\" route has some missing mandatory parameters (\"_locale\").\r\n500 Internal Server Error - MissingMandatoryParametersException \r\n```"
  },
  "1322186": {
    "github_issue_id": 1879,
    "state": "closed",
    "title": "$_format is lost on failure_forward",
    "body": "I've been debugging this for the past few days but to no avail.\r\n\r\nThis is the excerpt from my security file:\r\n\r\n```\r\nsecurity:\r\n    firewalls:\r\n        default_json:\r\n            poshtar_login:\r\n                login_path: /login.json\r\n                check_path: /login.json\r\n                failure_forward: true\r\n            context: store\r\n            anonymous:  ~\r\n            logout:     { path: /logout }\r\n            pattern:    /.*\r\n            provider:   poshtar\r\n```\r\n\r\nWhat I was able to figure out using a debugger is that the content type for subresponse? is set correctly to json, but sometime later, when responses get merged? and the request is asked again for a format the request returns html as the attributes bag is empty (controller resolver set the proper format in subrequest) so data sent to the browser has a wrong content type."
  },
  "1288490": {
    "github_issue_id": 1813,
    "state": "closed",
    "title": "http basic authentication broken with PHP as cgi/fastCGI under Apache",
    "body": "The keys PHP_AUTH_USER and PHP_AUTH_PW are not present in the superglobal $_SERVER, so http basic authentication needs to be handled a little differently.\r\n\r\nThis also affects functional tests which require http basic auth to authenticate.\r\n\r\nBasically the workaround is two parts:\r\n\r\n1. A rewrite rule to pack the username and password into an environment variable:\r\n\r\n    <IfModule mod_rewrite.c>\r\n        RewriteEngine on\r\n        RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization},L]\r\n    </IfModule>\r\n\r\n2. Extract the info from the environment variable:\r\n\r\n    list($_SERVER['PHP_AUTH_USER'], $_SERVER['PHP_AUTH_PW']) = explode(':' , base64_decode(substr($_SERVER['HTTP_AUTHORIZATION'], 6)));\r\n\r\n\r\nSee below for more details.\r\n\r\nhttp://orangejuiceliberationfront.com/http-auth-with-php-in-cgi-mode-e-g-on-dreamhost/\r\nhttp://www.besthostratings.com/articles/http-auth-php-cgi.html\r\n\r\n\r\n"
  },
  "1288124": {
    "github_issue_id": 1810,
    "state": "closed",
    "title": "[Form][DelegatingValidator] Conflict between a field and collection field with the same name",
    "body": "Use case : http://gist.github.com/1106538\r\n\r\nWhen the Entry \"title\" input value is blank, the form error is rendered next to the title input field of the \"specs\" field instead of the title one.\r\n\r\nIn the EntrySpecType, If i change the name of the title field to \"whateverisnotitle\", everything goes fine, and i assure you i've just changed that ! ;-)\r\n\r\nThat's a bit inconvenient.\r\n\r\n\r\n"
  },
  "1219548": {
    "github_issue_id": 1692,
    "state": "closed",
    "title": "[Form][Guesser] Symfony should guess a better field type for Doctrine 'array' type",
    "body": "Currently defaults to a textbox which just displays 'Array'."
  },
  "19628175": {
    "github_issue_id": 9061,
    "state": "open",
    "title": "[DomCrawler] \\Symfony\\Component\\DomCrawler\\Crawler::addContent guess charset from html?",
    "body": "I just download this page.\r\nhttp://search.jd.com/Search?keyword=%E6%96%87%E5%AD%A6&enc=utf-8&area=22&book=y\r\nit do not send a header of charset in http response header and I put it content to Crawler::addContent,Then Crawler use wrong charset ISO-8859-1.\r\nIt works fine if I use follow code:\r\n```\r\n        $crawler = new Crawler();\r\n        $crawler->addHtmlContent($content,'GBK');\r\n```\r\nIs there some way to guess charset from html meta?"
  }
}
>>>>>>> d9bb0b72f761538bd084f26a41d91dfec0d96e39
