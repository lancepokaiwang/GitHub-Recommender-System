{"18230678": {"github_issue_id": 8786, "state": "open", "title": "Add @since tags to core", "body": "I think that we should add `@since` tags to all classes and methods in core:\r\n\r\n```php\r\n/**\r\n * @since 2.1.0\r\n */\r\nclass Foo\r\n{\r\n    /**\r\n     * @since 2.2.1\r\n     */\r\n    public function bar() { ... }\r\n}\r\n```\r\n\r\nThis greatly facilitates maintenance, because if I discover a bug in class `Foo` or method `Foo::bar()`, I immediately know which branch to fix it on. Currently, you have to do a lot of Git blaming or trial and error to find out which branch to fix something on."}, "16262415": {"github_issue_id": 8404, "state": "open", "title": "CssSelector should be configured properly when used for HTML or XML", "body": "... but that's not really possible when using it from BrowserKit as the Crawler is created directly.\r\n\r\nFrom #8286:\r\n\r\n    In functional test, since the crawler is instanciated by the de browser kit (which \r\n    know the content-type), Can we imagine the browser kit call for us\r\n    disableHtmlExtension or enableHtmlExtension"}, "15752417": {"github_issue_id": 8311, "state": "open", "title": "BrowserKit CookieJar is totally ignorant of RFC 6265 edge cases", "body": "The `BrowserKit/CookieJar` code [uses exact domain and path matches](https://github.com/symfony/BrowserKit/blob/master/CookieJar.php#L58) to store and retrieve cookies:\r\n\r\n`$this->cookieJar[$domain][$path][$name]`\r\n\r\nThis utterly fails the [requirements of RFC 6265 for matching domains](http://tools.ietf.org/html/rfc6265#section-4.1.2.3):\r\n\r\n> For example, if the value of the Domain attribute is \"example.com\", the user agent will include the cookie in the Cookie header when making HTTP requests to example.com, www.example.com, and www.corp.example.com.\r\n\r\n\r\nIf you load any google resource you'll receive a cookie with `domain=.google.com`. According to the RFC this cookie should match any domain ending in .google.com as well as google.com itself.\r\n\r\nSimilar problems exist with path matching where leading and trailing slashes figure in to whether or not a cookie matches what's stored in the `CookieJar`. From [the relevant RFC section](http://tools.ietf.org/html/rfc6265#section-4.1.2.4):\r\n\r\n> The user agent will include the cookie in an HTTP request only if the path portion of the request-uri matches (or is a subdirectory of) the cookie's Path attribute, where the %x2F (\"/\") character is interpreted as a directory separator.\r\n\r\nExact path matches aren't sufficient -- subdirectory paths should also be matched."}, "13800942": {"github_issue_id": 7884, "state": "open", "title": "[FR] [Process] tweaks", "body": "In Symfony\\Component\\Process\\Process\r\n1. Provide a way to clear the $stdout and $stderr (in case when executable program produces too much output and we use incremental output)\r\n2. Add getter (or change private to protected) for processInformation (it's impossible now to get PID for example)"}, "13169284": {"github_issue_id": 7672, "state": "open", "title": "[DomCrawler] need for submitting invalid choice values", "body": "It seems to be not possible to submit an invalid value for a choice field in a form using BrowserKit's Client. This is prevented by https://github.com/symfony/symfony/blob/v2.1.9/src/Symfony/Component/DomCrawler/Field/ChoiceFormField.php#L140, which doesn't make sense when writing integration tests, as I'd like to see the expected form validation errors.\r\n\r\nWhat's the purpose of those checks and, if they are needed, how can they be disabled for tests?"}, "11098174": {"github_issue_id": 7103, "state": "open", "title": "[security] Enable a firewall to a specific host (subdomain)", "body": "Symfony 2.2 introduces a possibility to point a route to a specific host, or a subdomain.\r\n\r\nNow, it should be possible to define a specific host to a firewall. I believe it should be like this:\r\n\r\n```yml\r\nfirewalls:\r\n\tmanager:\r\n        pattern: ^/.*\r\n        host: manager.domain.com\r\n        ...\r\n```"}, "10412830": {"github_issue_id": 6908, "state": "open", "title": "[BrowserKit] Form names with . are converted to _ (breaks compatibility with non-PHP forms)", "body": "Symfony/Component/BrowserKit/Client->submit uses $form->getPhpValues() which uses parsestr which automagically converts . to _, this breaks compatibility with forms intended for non-PHP services.\r\n\r\n**Background**\r\nI am trying to write a functional test for connecting to an OpenID2 implementation in ASP.NET, however this requires use of a (auto-submitted by javascript) form with names like hidden form names like openid.mode.\r\n\r\n"}, "9374910": {"github_issue_id": 6406, "state": "open", "title": "[3.0] [HttpFoundation] consider renaming Request::getPathInfo() to getPath()", "body": "The method name for `Request::getPathInfo()` is so bad because\r\n1. it returns the path of a URI and not a \"path info\" (there is no such thing in the URI spec)\r\n2. it suggest to return \"more info\" in form of an array like the php function [pathinfo](http://php.net/manual/en/function.pathinfo.php]) does, but it only returns the plain path\r\n\r\nSo the name is really confusing as it does not behave similar to phps pathinfo() and is also semantically wrong.\r\n\r\nI suggest to deprecate `getPathInfo()` and introduce `getPath()`.\r\nWorking with it bothered me ever since. And I think we should fix that now before it's too late."}, "9103421": {"github_issue_id": 6239, "state": "open", "title": "Form fields and buttons do not follow the ownership overwrite defined by form-attributes", "body": "I was redirected here from Goutte, on the issue of form fields with a \"form\" attribute not getting correctly processed.\n\nThe gist of it is: the \"form\" attribute (placed on fields and buttons and such) is an overwrite to the form ownership property of the element. This means that regardless of where the field (or button) is it should behave as-if it were inside the form identified by the ID defined by the value of the attribute. \n\nSome official docs:\nhttp://dev.w3.org/html5/spec/single-page.html#attr-fae-form\n\nWith the exception of IE (10 included), all modern browsers support it fine. In the case of IE it's a simple javascript fix\u2014just like every other normal html5 feature. For the case of tests and such it would be very useful for the standard behavior to work (especially when there's no real way to work around it).\n\nThe following is a basic behat test (assume Goutte driver), so as to avoid very wordy explanations on other points related to it.\n~~~\n@environment\nFeature: test environment drivers\n  In order perform tests successfully\n  As a Developer\n  Test drivers must conform to standards\n\n  Background:\n\tGiven I am on the test site\n\t  And I am on \"/tests/form-attribute.php\"\n\n  Scenario: press button_1 of form_1 from inside of form_1\n\tGiven I press \"Capture fields\"\n\t Then I should see \"form_name is form_1\"\n\t  And I should see \"2 apples\"\n\t  And I should see \"0 oranges\"\n\t  And I should see \"button_1 present\"\n\t  And I should see \"button_2 not present\"\n\t  And I should see \"button_3 not present\"\n\t  And I should see \"outer_field present\"\n\n  Scenario: press button_3 of form_1 from inside of form_2\n\tGiven I press \"Submit from outside the form\"\n\t Then I should see \"form_name is form_1\"\n\t  And I should see \"2 apples\"\n\t  And I should see \"0 oranges\"\n\t  And I should see \"button_1 not present\"\n\t  And I should see \"button_2 not present\"\n\t  And I should see \"button_3 present\"\n\t  And I should see \"outer_field present\"\n\n  Scenario: press button_2 of form_2 from inside of form_1\n\tGiven I press \"Submit form_2\"\n\t Then I should see \"form_name is form_2\"\n\t  And I should see \"0 apples\"\n\t  And I should see \"3 oranges\"\n\t  And I should see \"button_1 not present\"\n\t  And I should see \"button_2 present\"\n\t  And I should see \"button_3 not present\"\n\t  And I should see \"outer_field not present\"\n      \n~~~\n\nWhere `/tests/form-attribute.php` is as follows...\n~~~\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<title>Test Case</title>\n\n<?php if ($_SERVER['REQUEST_METHOD'] !== 'POST'): ?>\n\n\t<form id=\"form_1\" action=\"<?= $_SERVER['REQUEST_URI'] ?>\" method=\"POST\">\n\t\t<input type=\"checkbox\" name=\"apples[]\" value=\"1\" checked/>\n\t\t<input form=\"form_1\" type=\"hidden\" name=\"form_name\" value=\"form_1\"/>\n\t\t<button form=\"form_1\" type=\"submit\" name=\"button_1\">Capture fields</button>\n\t\t<button form=\"form_2\" type=\"submit\" name=\"button_2\">Submit form_2</button>\n\t</form>\n\n\t<input form=\"form_1\" type=\"checkbox\" name=\"apples[]\" value=\"2\" checked/>\n\n\t<form id=\"form_2\" action=\"<?= $_SERVER['REQUEST_URI'] ?>\" method=\"POST\">\n\t\t<input form=\"form_2\" type=\"checkbox\" name=\"oranges[]\" value=\"1\" checked/>\n\t\t<input form=\"form_2\" type=\"checkbox\" name=\"oranges[]\" value=\"2\" checked/>\n\t\t<input form=\"form_2\" type=\"checkbox\" name=\"oranges[]\" value=\"3\" checked/>\n\t\t<input form=\"form_2\" type=\"hidden\" name=\"form_name\" value=\"form_2\"/>\n\t\t<input form=\"form_1\" type=\"hidden\" name=\"outer_field\" value=\"success\"/>\n\t\t<button form=\"form_1\" type=\"submit\" name=\"button_3\">Submit from outside the form</button>\n\t</form>\n\n<?php else: ?>\n\n<?\n\techo 'form_name is '.(isset($_POST['form_name']) ? $_POST['form_name'] : 'undefined').\"<br/>\\n\";\n\techo (isset($_POST['apples']) ? \\count($_POST['apples']) : 0).\" apples<br/>\\n\";\n\techo (isset($_POST['oranges']) ? \\count($_POST['oranges']) : 0).\" oranges<br/>\\n\";\n\n\tforeach (['button_1', 'button_2', 'button_3', 'outer_field'] as $key)\n\t{\n\t\techo $key.' '.(isset($_POST[$key]) ? 'present' : 'not present').\"<br/>\\n\";\n\t}\n\n\techo \"<hr/>\\n\";\n\n\t\\var_dump($_POST);\n?>\n\n<?php endif; ?>\n~~~\n"}, "8214440": {"github_issue_id": 5946, "state": "open", "title": "[Form] Improve default form error messages", "body": "I think that in order to provide a better user experience, we should improve the error messages shipped with the Form component by default. I am **not** talking about the error messages in the Validator component.\r\n\r\nIf I use the Validator component stand-alone, getting an error such as \"This value is not a valid number\" is fine. If I use the Form component, displaying that message for a form field is a bit awkward. Even worse are the tons of \"This value is invalid\" messages.\r\n\r\nI suggest to\r\n\r\n1. Set sensible defaults for the \"invalid_message\" options in all core types. These defaults should be user friendly, such as \"Please enter a valid email address.\" (or better, if you have suggestions)\r\n2. Duplicate the error messages of the Validator component into the Form component and change the translations to be more user friendly (in the web form context, again, such as \"Please enter a valid number\" or better). This will mean a bit more maintenance work, but much better UX.\r\n\r\nOpinions? How would you ideally like the error messages to be when you submit an erroneous field?"}, "7723266": {"github_issue_id": 5791, "state": "open", "title": "[Form] Rename \"empty_value\" option to \"placeholder\"", "body": "See #4715 for reference.\r\n\r\nThe \"empty_value\" option of ChoiceType (and consequentially EntityType) is used to configure the displayed values of the dropdowns when the field is empty. This is analogous to the \"placeholder\" HTML5 attribute of other field types.\r\n\r\nI propose to deprecate \"empty_value\" and add a new option \"placeholder\" to\r\n\r\n* ChoiceType\r\n* all types represented by input widgets that support this attribute"}, "6816718": {"github_issue_id": 5500, "state": "open", "title": "make Translation:update Command more robust", "body": "Nowadays i'm often getting Error's if I try to update translation-file like this:\n  [Twig_Error_Runtime]                                                       \n  Attribute \"value\" does not exist for Node \"Twig_Node_Expression_GetAttr\". \n\nIt seem's it come's from dynamic part of a transaltion. The Problem is, that it abort on the first twig error, it would be nice if the command run through and make what he can make. --ignore-expetions\n\nOr just get in a prefix-viewfolder as argument:\n\n\n\n```\n    $extractor->extract($foundBundle->getPath().'/Resources/views/'.$viewfolder, $catalogue);"}, "6379747": {"github_issue_id": 5322, "state": "open", "title": "[Feature Request] Absolute asset URL", "body": "Hey guys!\n\nCurrently, there's no standard way of retrieving the absolute URL to an asset. This would be useful when generating asset paths in a template for an email. Would be cool a function like:\n\n```twig\n{{ asset_url('images/foo.jpg') }}\n```\n\nThe current solution is not pratical and breaks when using CDN.\n\nThanks,\nMarcos"}, "5827000": {"github_issue_id": 5040, "state": "open", "title": "ParameterBag's remove function only allows to remove one level deep", "body": "If a parameter is an array it cannot remove elements inside the array, only the array itself. \nFor instance I have the following request using the SonataMediaBundle:\n\n[common_mybundle_mytype] => array(\n    [media] => array(\n        [binaryContent] => null\n    ),\n    [title] => 'Message title',\n    [text] => 'Message text\n)\n\nSay I want to remove the media only. With the current function I can only remove the full request. I have rewritten the function to the following:\n\n    File: Symfony\\Component\\HttpFoundation\\ParameterBag\n\n    public function remove($key)\n    {\n        if(is_array($key))\n        {\n            $c = '$this->parameters';\n\n            foreach($key as $k)\n            {\n                $c .= '[\\'' . $k . '\\']';\n            }\n            eval(\"unset($c);\");\n        }\n        else\n        {\n            unset($this->parameters[$key]);\n        }\n    }"}, "5567424": {"github_issue_id": 4871, "state": "open", "title": "HttpCache files getting too big", "body": "When using the HttpCache, there are files created in the app/cache/prod/http_cache/md for each url. Each time this url is accessed with a differente cookie, an entry is added (because we do vary on cookie). After some days or weeks this file is getting too big. The expired entries are not removed. I don't know if its best to create a command to remove old items, or to do it after lookup, or after write. Maybe just need to clear the cache every night :)\n\nhttps://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpKernel/HttpCache/HttpCache.php\nhttps://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpKernel/HttpCache/Store.php"}, "1887255": {"github_issue_id": 2387, "state": "open", "title": "[Form][Guesser] ValidatorTypeGuesser does not consider validation_groups option", "body": "The `ValidatorTypeGuesser` does not consider the current form's `validation_groups` option when guessing type. This could be fixed by passing the options array to the guesser methods. The signature of the `FormTypeGuesserInterface` methods would look like this:\r\n\r\n    function guessType($class, $property, array $options = array());\r\n\r\nThe default argument is provided for BC."}, "1184805": {"github_issue_id": 1581, "state": "open", "title": "[Validator] Improve EmailValidator", "body": "We really should migrate away from filter_var to a stronger solution like http://code.google.com/p/isemail/source/browse/PHP/trunk/is_email.php which seems like the only solution mentioning RFCs, being maintained, and not being dependent on a specific PHP version.\r\n\r\nI emailed the author to see if he would be willing to migrate it to a more class-based approach and remove all those constants from the global namespace."}, "19047724": {"github_issue_id": 8941, "state": "closed", "title": "UPGRADE docs doesn't mention remove of addViolationAtPath", "body": "The UPGRADE docs document doesn't mention the remove of the method the remove of the method `addViolationAtPath()`."}, "17502295": {"github_issue_id": 8629, "state": "closed", "title": "Process filling up temp directory on Windows", "body": "Symfony\\Component\\Process\r\nI'm getting this error after running a process for a long time\r\nA temporary file could not be opened to write the process output to, verify that your TEMP environment variable is writable\r\nSeems to be the windows workaround in getDescriptors()\r\nI found the problem to be 65,000 temp files created by this file in my windows temp but not removed. I have to clear these out daily.\r\nPHP should remove the files but they slowly build up."}, "14401746": {"github_issue_id": 8065, "state": "closed", "title": "php.ini \"post_max_size = 0\" clash with form validator", "body": "If in the php.ini \"post_max_size\" is set to 0, there is no limitation in the post size:\r\n[from php.ini]\r\n; Maximum size of POST data that PHP will accept.\r\n; Its value may be 0 to disable the limit. It is ignored if POST data reading\r\n; is disabled through enable_post_data_reading.\r\n; http://php.net/post-max-size\r\npost_max_size = 0\r\n\r\nHowever, in this case, the validator (tested via Form) trigger always\r\n\"The uploaded file was too large. Please try to upload a smaller file.\"\r\n\r\n[Fix]\r\nEnable the control only if post_max_size > 0"}, "14273793": {"github_issue_id": 8030, "state": "closed", "title": "[DependencyInjection] Dumping out container may produce syntax error code", "body": "Create a service where name contains \"-\" and there will be a syntax error.\r\n\r\nI think the root of the problem is that PhpDumper uses Container::camelize to generate function names which doesn't comply with PHP labels.\r\n\r\nIn my opinion, PhpDumper should use an internal function to generate PHP label-safe identifiers from service names, it would be more general solution than restrict service names.\r\n\r\nIf you agree i would like to push this change.\r\n\r\n"}, "14259080": {"github_issue_id": 8024, "state": "closed", "title": "Use more explicit namespaces in composer definitions", "body": "Please note namespace declarations should end in `\\\\` to make sure the autoloader responds exactly. For example `Foo` would match in `FooBar` so the trailing backslashes solve the problem: `Foo\\\\` and `FooBar\\\\` are distinct.\r\n\r\nFor reference: https://github.com/composer/composer/pull/1891/files"}, "13998113": {"github_issue_id": 7948, "state": "closed", "title": "[Console] Improve abbreviation recognition", "body": "1. For example I have 2 commands:\r\n```\r\nxxx:foo:bar\r\nyyy:faa:zoo\r\n```\r\nWhen I try to call\r\n```\r\nphp test.php xxx:f:b\r\n```\r\nI get an InvalidArgumentException - The namespace \"xxx:f\" is ambiguous (foo, faa).\r\nbut the namespace xxx:faa not defined!\r\n\r\n2. If I have \r\n```\r\nxxx:foo:bar\r\nxxx:faa:zoo\r\n```\r\nand call `x:f:z` then it should run xxx:faa:zoo (because no more command has same abbreviation)\r\n\r\n"}, "13963217": {"github_issue_id": 7929, "state": "closed", "title": "[BrowserKit] on followRedirect, client doesn't resend HTTP headers", "body": "In this simple case \r\n\r\n```\r\n$headers = array('HTTP_Content_Type' => 'application/vnd.custom+xml');\r\n$crawler = $client->request($method, $uri, $params, array(), $headers);\r\n```\r\n\r\nwhen server returns redirect, ```Content-Type``` header will not be sent to new location."}, "13435189": {"github_issue_id": 7731, "state": "closed", "title": "BrowserKit recursive redirect", "body": "If a redirect-header is returned by a request of some url and the redirect-url is just the same as the requested url (thus its a recursive redirect) then the BrowserKit client will follow the recursive tree until the php maximum function nesting level, which by default is 100.\r\n\r\nBrowserKit should have a configurable (?) maximum for following redirects and the ->request() call should return nicely (at least with a clean exception?) if it reaches the maximum."}, "13254373": {"github_issue_id": 7683, "state": "closed", "title": "[HttpFoundation] allow database Session Handlers to be extended", "body": "If there's additional actions to be done on on session events (additional cleanup on destroy/gc, or additional logging on other events, it would be nice to be able to extend the `PdoSessionHandler` and `MongoDbSessionHandler` classes. However, both have their database connections set to `private`.\r\n\r\nI can think of two ways of accomplishing this: either setting those connectors to `protected`, so child objects can access them, or to add an additional `getConnection()` method, to provide read-only access to those connectors. More complex would be to add some sort of event system such that the session handlers broadcast to other listeners when a session event happens.\r\n\r\nIs there a better way to accomplish doing other tasks when a session event happens?"}, "13116635": {"github_issue_id": 7644, "state": "closed", "title": "XmlUtils::phpize floats integer-lists", "body": "I'm trying to let my config accept:\r\n```\r\n<node attribute=\"1234,5678,9101,1121,3141\" />\r\n```\r\nto parse the this attribute as a string. But the Symfony\\Component\\Config\\Util\\XmlUtils::phpize-Method (previously SimpleXMLElement::phpize) replaces this to float(1.2345678910111E+19).\r\n\r\nThis is caused by the preg_match-case."}, "13111578": {"github_issue_id": 7639, "state": "closed", "title": "[HttpKernel] Improve TraceableEventDispatcher to not call Stopwatch::stop() when not started", "body": "Currently, in TraceableEventDispatcher:385, Stopwatch::stop() is called even when the Stopwatch was not started:\r\n\r\n```php\r\ncase KernelEvents::RESPONSE:\r\n    // stop only if a controller has been executed\r\n    try {\r\n        $this->stopwatch->stop('controller');\r\n    } catch (\\LogicException $e) {\r\n    }\r\n    break;\r\n```\r\n\r\nThe result is that on every request, an exception will be thrown and caught (consequently this is not an \"exceptional\" case anymore). Another consequence is that debuggers will halt and show this exception (again, on every request).\r\n\r\nAn improvement would be to add a Stopwatch::isStarted() method and use it instead:\r\n\r\n```php\r\ncase KernelEvents::RESPONSE:\r\n    // stop only if a controller has been executed\r\n    if ($this->stopwatch->isStarted('controller')) {\r\n        $this->stopwatch->stop('controller');\r\n    }\r\n    break;\r\n```"}, "12950953": {"github_issue_id": 7607, "state": "closed", "title": "Login Redirect Does not Honor Query String Parameters", "body": "When a user successfully logs in, the user is redirected to the page he originally was trying to view via the onAuthenticationSuccess() function in  https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Security/Http/Authentication/DefaultAuthenticationSuccessHandler.php.\r\n\r\nI am using a javascript history state library to keep track of my javascript frontend state and it generates urls such as ```/my/site#foo=bar&more=links```.\r\n\r\nWhen I am redirected from the login page, all the query string parameters after the url ```#foo=bar&more=links``` are not preserved. Could this possibly be fixed in future versions or is there a good reason not to honor the states of these types of requests?\r\n"}, "12900121": {"github_issue_id": 7592, "state": "closed", "title": "[Routing] Cannot specify port for route with hostname", "body": "By default the router uses the port of the current request when linking to an external site and there's no way to override it.\r\n\r\nFor example, an application that runs on port 8888, when generating a url from a route such as below, will generate the url \"//example.com:8888/article/view/{id}\".\r\n\r\n```yml\r\nmy_route:\r\n    pattern: /article/view/{id}\r\n    hostname: example.com\r\n```\r\n\r\nAlso, if you try to specify a port number in the hostname, e.g.\r\n\r\n```\r\nmy_route\r\n    pattern: /article/view/{id}\r\n    hostname: example.com:80\r\n```\r\n\r\nIt will generate a url similar to \"//example.com:80:8888/article/view/{id}\".\r\n\r\nMy first thought would be to introduce a 'port' parameter, which can be used to specify the port, and if it's not provided fall back to the port for the current request?\r\n\r\nWe only use the hostname parameter to generate url's for an external site which we need to link to, so I'm not sure how this works in regards to matching a route."}, "12873934": {"github_issue_id": 7575, "state": "closed", "title": "XML and Yaml format doesn't work with Optional/Required collection constraints", "body": "Assume we have this entity:\r\n````php\r\nclass Author\r\n{\r\n    /**\r\n     * @Assert\\Collection(fields={\r\n     *     \"alternate_email\" = @Optional({@Assert\\Email})\r\n     * })\r\n    public $profileData = array();\r\n}\r\n````\r\n\r\nThe annotations and PHP format is working as expected. However, the Yaml and Xml format isn't working. On the documentation, we (ryan, @afishnamedsquish and I) have put some time in trying to get a working Yaml and Xml format, but it seems like it's not possible.\r\n\r\nIf we have this:\r\n````yaml\r\nAcme\\AuthorBundle\\Entity\\Author:\r\n    properties:\r\n        profileData:\r\n             - Collection:\r\n                fields:\r\n                    alternate_email:\r\n                        - Collection\\Optional:\r\n                            - Email: ~\r\n````\r\nWe get this error:\r\n\r\n > Fatal error: Class 'Symfony\\Component\\Validator\\Constraints\\Collection\\OptionalValidator'\r\n\r\nIt's going wrong in [`Collection` line 50](https://github.com/symfony/Validator/blob/2.1/Constraints/Collection.php#L50-52):\r\n\r\n````php\r\nif (!$field instanceof Optional && !$field instanceof Required) {\r\n    $this->fields[$fieldName] = $field = new Required($field);\r\n}\r\n````\r\n`$field` is an instance of Optional or Required when using PHP or annotations. When using Yaml, `$field` is an array:\r\n\r\n    array (size=1)\r\n      0 => \r\n        object(Symfony\\Component\\Validator\\Constraints\\Collection\\Optional)[4300]\r\n          public 'constraints' => \r\n            array (size=1)\r\n              0 => \r\n                object(Symfony\\Component\\Validator\\Constraints\\Email)[4301]\r\n                  ...\r\n          public 'groups' => \r\n            array (size=1)\r\n              0 => string 'Default' (length=7)\r\n\r\nBecause it's not an instance of Optional or Required, it becomes:\r\n\r\n    object(Symfony\\Component\\Validator\\Constraints\\Collection\\Required)[4302]\r\n      public 'constraints' => \r\n        array (size=1)\r\n          0 => \r\n            object(Symfony\\Component\\Validator\\Constraints\\Collection\\Optional)[4300]\r\n              public 'constraints' => \r\n                array (size=1)\r\n                  ...\r\n              public 'groups' => \r\n                array (size=1)\r\n                  ...\r\n      public 'groups' => \r\n        array (size=1)\r\n          0 => string 'Default' (length=7)\r\n\r\nAnd that's when we are in trouble, because the `ValidatorFactory` will search for `OptionalValidator`.\r\n\r\nI have tried every Yaml syntax I know to make `$field` a class and not an array, but I can't find it. I think some change in the `YamlFileLoader` is needed to make these edge cases work.\r\n\r\nThis is the same for Xml:\r\n````xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n<constraint-mapping xmlns=\"http://symfony.com/schema/dic/constraint-mapping\"\r\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n    xsi:schemaLocation=\"http://symfony.com/schema/dic/constraint-mapping http://symfony.com/schema/dic/constraint-mapping/constraint-mapping-1.0.xsd\">\r\n\r\n    <class name=\"Acme\\AuthorBundle\\Entity\\Author\">\r\n        <property name=\"profileData\">\r\n            <constraint name=\"Collection\">\r\n                <option name=\"fields\">\r\n                    <value key=\"alternate_email\">\r\n                        <constraint name=\"Collection\\Optional\">\r\n                            <constraint name=\"Email\" />\r\n                        </constraint>\r\n                    </value>\r\n                </option>\r\n            </constraint>\r\n        </property>\r\n    </class>\r\n</constraint-mapping>\r\n````\r\n\r\nIf you want some background on this issue, see symfony/symfony-docs#2432 and [this gist](https://gist.github.com/afishnamedsquish/5277987)."}, "12834613": {"github_issue_id": 7564, "state": "closed", "title": "Bug with NamespacedAttributeBag in use with session", "body": "Hi !\r\n\r\nI have set my application to use the NamespacedAttributeBag for sessions.\r\n\r\nI've observed the following behavior:\r\n\r\nIn my template, if I do this:\r\n\r\n    {{dump(app.session.get(\"cart\" , 0))}}\r\n\r\nIt dumps:\r\n\r\n    array (size=1)\r\n      1 => \r\n        array (size=1)\r\n          2 => \r\n            array (size=1)\r\n              8 => int 1\r\n\r\nThat is the expected behavior\r\n\r\nNow if I do:\r\n\r\n    {{dump(app.session.get(\"cart/1/2\" , 0))}}\r\n\r\nI get:\r\n\r\n    array (size=1)\r\n      8 => int 1\r\n\r\nThat's fine too.\r\n\r\nAnd finally, if I do this:\r\n\r\n    {{dump(app.session.get(\"cart/1/1/2\" , 0))}}\r\n\r\nI get:\r\n\r\n    array (size=1)\r\n       8 => int 1\r\n\r\nThat is not fine! I should get 0 or null. There is no array in cart[\"1\"][\"1\"] !\r\n\r\nIs that a bug ?"}, "12728018": {"github_issue_id": 7549, "state": "closed", "title": "[Console] DialogHelper::ask() while loop issue with 0", "body": "The while loop in `Symfony\\Component\\Console\\Helper\\DialogHelper::ask()` terminates, when you enter a 0. `fread` gets the 0 and assigns it to `$c` and then the loop breaks. As we all know PHP interpretes a 0 as false.\r\n\r\nI tried to fix it and came up with the following idea using `ord()` and `chr()`:\r\n\r\n~~~ php\r\n...\r\nwhile ($c = ord(fread($inputStream, 1))) {\r\n    $c = chr($c);\r\n...\r\n~~~\r\n\r\nIt solves the problem but I find it rather ugly. \r\n\r\nDoes anyone have a better idea about this?"}, "12664314": {"github_issue_id": 7540, "state": "closed", "title": "[Profiler] Backslash before slash", "body": "In \u201cRequest\u201d tab of profiler, there is a backslash before all the slashs and backslashs (see screenshot)\u2026 I just did the upgrade to Symfony 2.2.\r\n![screen](https://f.cloud.github.com/assets/1258839/324302/21576eea-9ae1-11e2-96c3-0a358b657e33.png)"}, "12508458": {"github_issue_id": 7491, "state": "closed", "title": "Symfony\\Component\\DomCrawler\\Crawler::addContent() - handling of MIME types", "body": "If the server responds with an empty HTTP Content-Type, 'text/html' is assumed, which is good.  However, if the Content-Type contains a charset but no MIME type, e.g. 'charset=utf-8' or '; charset=utf-8', the method returns null and the DOM is not parsed.\r\n\r\nDesired behaviour is that a Content-Type with a charset but no MIME type should be treated in the same way as an empty Content-Type, with regards to the default 'text/html' MIME being assumed.  This is the way my browser responds to such a Content-Type when there is HTML in the response body.\r\n\r\nThis was relevant to me because of a bug in ZF2 and the Content-Type headers it returns under certain circumstances, and the use of the Symfony DomCrawler component in the Behat integration testing/BDD tool.  I will pursue the Zend bug separately."}, "12211096": {"github_issue_id": 7431, "state": "closed", "title": "[Service Container] Container camelize strange behavior", "body": "At Container the method camelize:\r\n\r\n```php\r\n    /**\r\n     * Camelizes a string.\r\n     *\r\n     * @param string $id A string to camelize\r\n     *\r\n     * @return string The camelized string\r\n     */\r\n    public static function camelize($id)\r\n    {\r\n        return preg_replace_callback('/(^|_|\\.)+(.)/', function ($match) { return ('.' === $match[1] ? '_' : '').strtoupper($match[2]); }, $id);\r\n    }\r\n```\r\n\r\nI don't understand why if the first char is . or _ is kept:\r\n\r\n```php\r\nphp > function camelize($id) { return preg_replace_callback('/(^|_|\\.)+(.)/', function ($match) { return ('.' === $match[1] ? '_' : '').strtoupper($match[2]); }, $id); }\r\nphp > echo camelize('test.test2') . \"\\n\";\r\nTest_Test2\r\nphp > echo camelize('.testtest2') . \"\\n\";\r\n.testtest2\r\nphp > echo camelize('test_test2') . \"\\n\";\r\nTestTest2\r\nphp > echo camelize('_test_test2') . \"\\n\";\r\n_testTest2\r\n```\r\n\r\nIf the camelize is used to transform for example an array on several variables it will fail:\r\n\r\n```php\r\nphp > $.t = 5;\r\nPHP Parse error:  syntax error, unexpected '.', expecting variable (T_VARIABLE) or '$' in php shell code on line 1\r\n\r\nParse error: syntax error, unexpected '.', expecting variable (T_VARIABLE) or '$' in php shell code on line 1\r\n```\r\n\r\nAnd is really strange that after you camelize a string it still keep underscore. My suggestion is that if a _ or . exists as first character would disappear on camelize, so instead of the below behavior both would return TestDa\r\n\r\n```php\r\nphp > echo camelize('test_da') . \"\\n\";\r\nTestDa\r\nphp > echo camelize('_test_da') . \"\\n\";\r\n_testDa\r\n```"}, "11853585": {"github_issue_id": 7323, "state": "closed", "title": "BrowserKit::request does not handle network paths (Functional test for subdomains)", "body": "Hello,\r\n\r\nThere is a problem related to test for subdomains (all other tests work). Maybe I do something wrong!! I am able to access to sob-domain directly from a browser as will as I see the route in terminal ```app/console router:debug -e=test```\r\n\r\nthe route\r\n\r\n    anf_word_scrabble_widget:\r\n        path:   /scrabble/scrabble-finder-widget.php\r\n        defaults:  { _controller: MyBundle:Default:widget }\r\n        host:     w.{domain}\r\n        requirements:\r\n             domain: %domain%\r\n\r\nconfig.yml\r\n\r\n    domain: \"example.local\"\r\n\r\ntest\r\n\r\n    public function testWidget()\r\n    {\r\n       $client = static::createClient();\r\n    \r\n       $router = $client->getContainer()->get('router');\r\n       $domain = $client->getContainer()->getParameter('domain');\r\n    \r\n      $url = $router->generate('anf_word_scrabble_widget', array('domain' => $domain));\r\n\r\n      $crawler = $client->request('GET', $url);\r\n      $this->assertEquals(200, $client->getResponse()->getStatusCode());\r\n    }\r\n\r\nit throws an exception \r\n\r\n    No route found for &quot;GET //w.example.local/scrabble/scrabble-finder-widget.php&quot; (404 Not Found)\r\n\r\n\r\nI have tried to use \r\n\r\n    $client = static::createClient(array(), array(\r\n    'HTTP_HOST'       => 'w.example.local',\r\n    ));\r\n\r\n\r\nbut the same!\r\n"}, "11684078": {"github_issue_id": 7274, "state": "closed", "title": "[2.2][Yaml] Blank values should resolve to null", "body": "The following syntax was valid in 2.1, and should be valid according to the YAML spec:\r\n\r\n    db.options:\r\n      password:\r\n    myproject.test:\r\n      param2: \"456\"\r\n\r\nHowever, since 2.2 this throws a `Symfony\\Component\\Yaml\\Exception\\ParseException`: Indentation problem in \"file.yml\" at line 2 (near \"password:\").\r\n\r\nIMO this should be fixed. Or if the BC break was intentional, it should be documented."}, "11611544": {"github_issue_id": 7257, "state": "closed", "title": "[console]  add __toString() on ArgvInput", "body": "Hi There,\r\n\r\nI was wondering if a __toString() method could be added to Symfony\\Component\\Console\\Input\\ArgvInput or at least StringInput,  It would be helpful repackage a command line after its been parsed, among other things\r\n\r\n-Thanks"}, "11600112": {"github_issue_id": 7254, "state": "closed", "title": "php templating engine service is inaccessible (set to private)", "body": "Can we change the service to public? If so, would that be considered a bug\r\nfix or a new feature?"}, "11511248": {"github_issue_id": 7221, "state": "closed", "title": "[2.0][2.1][FrameworkBundle] disabling CSRF protection doesn't work with the `enabled` flag", "body": "Using\r\n```\r\nframework:\r\n  csrf_protection:\r\n    enabled: false\r\n```\r\nonly disables the CSRF protection for Symfony 2.2. But to work with 2.0, 2.1, and 2.2 actually\r\n```\r\nframework:\r\n  csrf_protection: false\r\n```\r\nhas to be used.\r\n\r\nSee https://travis-ci.org/craue/TwigExtensionsBundle/builds/5138388 and https://travis-ci.org/craue/TwigExtensionsBundle/builds/5139467 ."}, "11507972": {"github_issue_id": 7219, "state": "closed", "title": "[DomCrawler] relative links", "body": "relative links seems not to be handled correct inside `Link` the class\r\n\r\nI would expect\r\n\r\n```php\r\n    public function testRelativeLink()\r\n    {\r\n        $dom = new \\DOMDocument();\r\n        $dom->loadHTML('<html><a href=\"../foo\">foo</a></html>');\r\n\r\n        $node = $dom->getElementsByTagName('a')->item(0);\r\n        $link = new Link($node, 'http://example.com/bar/');\r\n\r\n        $this->assertEquals('http://example.com/foo', $link->getUri());\r\n    }\r\n```"}, "11338172": {"github_issue_id": 7170, "state": "closed", "title": "[HTTPFoundation] Use `apache_request_headers` when available", "body": "Both my Apache installs strip `Authorization` headers (even though they're not CGI implementations) and don't populate `HTTP_AUTHORIZATION`.\r\n\r\nUsing `apache_request_headers` when available, would seem to be more robust."}, "11337837": {"github_issue_id": 7169, "state": "closed", "title": "Schema relative URLs not working in combination with the TestClient", "body": "The schema relative URLs introduced in #3958 are great. However, this does not seem to be working in combination with the TestClient. The URLs that are generated with a relative schema are being prefixed with the configured host and the default schema.\r\n\r\nE.g.\r\n\r\n```jinja\r\n{{ url('blog', {}, true) }}\r\n```\r\n\r\nWhen on `http://localhost` test client will try to visit: `http://localhost//localhost/blog` instead of `http://localhost/blog`.\r\n\r\n"}, "11203908": {"github_issue_id": 7139, "state": "closed", "title": "[Form] Binding false to a checkbox makes the checkbox being checked by default", "body": "I am not sure about whether this is a bug or by design: if a checkbox is bound to a boolean FALSE value, the checkbox is checked by default.\r\n\r\nFailing test case:\r\n```php\r\n    public function testBindWithFalseValueUnchecked()\r\n    {\r\n        $form = $this->factory->create('checkbox', null, array(\r\n            'value' => '1',\r\n        ));\r\n        $form->bind(false);\r\n\r\n        $this->assertFalse($form->getData());\r\n        $view = $form->createView();\r\n        $this->assertFalse($view->vars['checked']);\r\n    }\r\n```"}, "11110070": {"github_issue_id": 7106, "state": "closed", "title": "[Process] Add a version check to the code added in #7102", "body": "When PHP 5.5 is released, and if the code still seems to work fine, a version check could /should be added to the block added in #7102 so that it's only executed on 5.3/5.4 since these are the buggy versions."}, "11023512": {"github_issue_id": 7078, "state": "closed", "title": "[Process] Orphan temporary files are left on Windows", "body": "On Windows `Process::start` creates a temporary file every time because of this code:\r\n```php\r\n        if (defined('PHP_WINDOWS_VERSION_BUILD')) {\r\n            $this->fileHandles = array(\r\n                self::STDOUT => tmpfile(),\r\n            );\r\n```\r\nWhen being invoked for thousands of times as part of task scheduling pipeline, it leaves thousands of temporary files and eventually hits the limit at 65536 files per directory, after which point it can't create a new temporary file and simply dies.\r\n\r\nAfter being used, the temporary file should be deleted."}, "10704019": {"github_issue_id": 6986, "state": "closed", "title": "[DomCrawler] Uppercase HTTP/HTTPS/FILE not seen as absolute URL", "body": "See the line here:\r\nhttps://github.com/symfony/DomCrawler/blob/master/Link.php#L49\r\n\r\nIf a URL from a crawled page is badly formed to use an uppercase URI scheme, DomCrawler will not recognize it as an absolute link."}, "10605836": {"github_issue_id": 6961, "state": "closed", "title": "BinaryFileResponse - Error on calculate end value", "body": "the end is calculated wrong:\r\nlist($start, $end) = array_map('intval', explode('-', substr($range, 6), 2)) + array(0);\r\n\r\n                if ('' !== $end) {\r\n                    $this->maxlen = $end - $start;\r\n                } else {\r\n                    $end = $this->file->getSize() - 1;\r\n                }\r\n\r\nBecause intval function works on every value, the end value of '' is 0. So the if statement is never true."}, "10546193": {"github_issue_id": 6943, "state": "closed", "title": "[TwigBridge][Translation] TwigExtractor duplicates with trans_default_domain", "body": "Given this template, all translations are extracted twice.\r\n\r\nOnce for the correct translation domain (as specified by `{% trans_default_domain %}` and once wrongly for the default domain. This applies to the current template, its parent and the embedded one.\r\n\r\n```html+jinja\r\n{% extends '::base.html.twig' %}\r\n\r\n{% trans_default_domain \"users\" %}\r\n\r\n{% block content_header %}\r\n    <h1>{{ 'heading.create'|trans }}</h1>\r\n{% endblock %}\r\n\r\n{% block content_layout %}\r\n    {# .. #}\r\n\r\n    {% embed ':Layout:content_full_size.html.twig'%}\r\n        {% trans_default_domain \"users\" %}\r\n\r\n        {# .. #}\r\n    {% endembed %}\r\n{% endblock %}\r\n```"}, "10533801": {"github_issue_id": 6935, "state": "closed", "title": "[Console] Clean the unit tests", "body": "Each of the unit test methods should be splitted in smaller blocks, see InputOptionTest for a bad example."}, "9837048": {"github_issue_id": 6651, "state": "closed", "title": "UniqueEntity in edit/update action", "body": "In entity I use: \r\n@UniqueEntity(fields={\"email\"}, groups={\"new\", \"edit\"})\r\n\r\nbut i have a problem when I try validate in edit mode.\r\nWhen I submit form with not changed email field, then I get error \"This value is already used.\"\r\n"}, "9836344": {"github_issue_id": 6649, "state": "closed", "title": "[Console][Bug] Using short options with empty strings cause \"Uninitialized string offset: 0\" notice.", "body": "Example:\r\nphp app/console server:run -d \"\" localhost:8080\r\nPHP Notice:  Uninitialized string offset: 0 in ~/code/project/vendor/symfony/symfony/src/Symfony/Component/Console/Input/ArgvInput.php on line 222"}, "9713017": {"github_issue_id": 6586, "state": "closed", "title": "Finder doesn't respect valid glob syntax in name()", "body": "It would seem the Finder component does not respect an otherwise valid glob pattern in the name() method, for example:\r\n\r\n```\r\n->name('*.{jpg,jpeg,gif,png}');\r\n```\r\n"}, "9649916": {"github_issue_id": 6544, "state": "closed", "title": "[Form] Make exception handling consistent with other components", "body": "The form component currently implements exceptions differently than in other components. This should be made consistent."}, "9245942": {"github_issue_id": 6315, "state": "closed", "title": "Better naming for ContainerBuilder::findTaggedServiceIds", "body": "The name of ContainerBuilder::findTaggedServiceIds does not really fit it's return value. Instead of an array of service IDs (which would be my first guess for the method's return type), it returns and array of tags. The returned array's keys are the promised service IDs. \r\n\r\nMaybe this method's name should be changed to ContainerBuilder::findTagsByName or something similar, which reflects the method's purpose better.\r\n\r\nIn the same context: doen't the method Definition::getTag return all tags of the definition with a certain name? I don't want to be picky, but I would like these method names to give actual hints about their return values."}, "8610435": {"github_issue_id": 6101, "state": "closed", "title": "BinaryFileResponse - hashing strategy", "body": "Currently the hashing system in the new BinaryFileResponse has known limitations. It will be greatly beneficial if these are addressed by offering means to overcome these.\n\nhttps://github.com/symfony/symfony/commit/7322696378e96a812c78c1f23b80606b7fb06ac4#commitcomment-2193066\n\nAn option is to simplify the logic for hashing, by separating the hashing from the setting of the entity tag and from the file-input. This can be done simply by putting sha1_file() in a different method, that can be easily overridden, or by allowing a more OO approach by injecting the hashing strategy. The latter might be a bit more bulky but allows the most flexibility while maintaining clean separation of concerns."}, "8419747": {"github_issue_id": 6029, "state": "closed", "title": "Deprecated: IntlDateFormatter::setTimeZoneId():", "body": "As i am playing with 5.5.0 alpha1 and a sf application i get this.\n\n```\nDeprecated: IntlDateFormatter::setTimeZoneId(): Use datefmt_set_timezone() instead, which also accepts a plain time zone identifier and for which this function is now an alias in /Users/Henrik/Work/myapp/vendor/symfony/symfony/src/Symfony/Component/Form/Extension/Core/Type/DateType.php line 262\n```"}, "8200475": {"github_issue_id": 5940, "state": "closed", "title": "[Translation] XLIFF implementation broken by design", "body": "We are having an issue with the way the xliff format is implemented inside symfony2. \r\nThis was brought here before by @schmittjoh in #2252 but was closed down.\r\n\r\nI'm proposing to do a BC break here and change the XLIFF to a format where translation tools are actually useful. \r\ne.g. Because we use keys as our translation source the tools like www.getlocalization.com show those keys as a source to be translated which according to the xliff specification is the right thing to do.\r\n\r\n```xml\r\n<trans-unit id=\"<id>\" resname=\"<resname>\">\r\n  <source>Original string</source>\r\n  <target>Target language translation</target>\r\n</trans-unit>\r\n```\r\n\r\nWhere the < id > is somesort of unique id e.g hash of  < resname >, The < resname > is set to translation key or \"Original string\" in case that translation is not based on the keys and the < source > tag contains the string in language the translations will be made from."}, "7563119": {"github_issue_id": 5742, "state": "closed", "title": "[Console] [Windows] recuperation of the console height and width for non english OS", "body": "[here](https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Console/Application.php#L853) and [here](https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Console/Application.php#L875), a `exec(\"mode CON\")` is made in order to parse line and column number of the console from Windows command.\r\n\r\nThis only work on english Windows.\r\n\r\nFor example with french Windows: \r\n```\r\n>php -r \"exec('MODE CON', $output);var_dump($output);\"\r\narray(9) {\r\n  [0]=>  string(0) \"\"\r\n  [1]=>  string(27) \"Statut du p\u00e9riph\u00e9rique CON:\"\r\n  [2]=>  string(27) \"---------------------------\"\r\n  [3]=>  string(26) \"    Lignes\u00a0:          9999\"\r\n  [4]=>  string(24) \"    Colonnes\u00a0:        80\"\r\n  [5]=>  string(24) \"    Vitesse clavier\u00a0: 31\"\r\n  [6]=>  string(23) \"    D\u00e9lai clavier\u00a0:   1\"\r\n  [7]=>  string(25) \"    Page de codes\u00a0:   437\"\r\n  [8]=>  string(0) \"\"\r\n}\r\n```\r\nCouldn't find yet a nice and universal way to do it yet. If anyone has an idea :)"}, "7409912": {"github_issue_id": 5695, "state": "closed", "title": "[2.1][Security] Check_path and logout fails on non latin path", "body": "RuntimeException: You must activate the logout in your security firewall configuration\r\n\r\nIn example:\r\n``` yaml\r\n# app/config/security.yml\r\nsecurity:\r\n    firewalls:\r\n        main:\r\n            form_login:\r\n\r\n                # this is ok\r\n                login_path:  /\u0432\u0445\u043e\u0434 \r\n\r\n                # check_path fails\r\n                check_path:  /\u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f\r\n            logout:\r\n                # logout path fails\r\n                path:   /\u0432\u044b\u0445\u043e\u0434 \r\n```\r\n\r\nAll this happens because of Symfony\\Component\\Security\\Http\\HttpUtils::checkRequestPath request query string not url decoded\r\n\r\n``` php\r\n    public function checkRequestPath(Request $request, $path)\r\n    {\r\n        if ('/' !== $path[0]) {\r\n            try {\r\n                $parameters = $this->urlMatcher->match($request->getPathInfo());\r\n\r\n                return $path === $parameters['_route'];\r\n            } catch (MethodNotAllowedException $e) {\r\n                return false;\r\n            } catch (ResourceNotFoundException $e) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        /**\r\n        * var_dump($request->getPathInfo()) ;\r\n        * var_dump($path);\r\n        * (\"/%d0%b2%d1%8b%d1%85%d0%be%d0%b4\" === $request->getPathInfo()) true\r\n        * ($path === urldecode($request->getPathInfo())) true\r\n        */\r\n        return $path === $request->getPathInfo();\r\n    }\r\n```"}, "7344101": {"github_issue_id": 5669, "state": "closed", "title": "[Console] List available commands in the help command", "body": "The help command should at least mention the list command (only if it's enabled though), or just simply list available commands when called on the top level `console --help` (not `console foo --help`). \r\n\r\nSee composer/composer#1143"}, "6841472": {"github_issue_id": 5506, "state": "closed", "title": "JsonResponse can not be used to return an empty array", "body": "I have a REST API that is used for retrieving a list of objects. From our perspective this API could quite legitimately return no matching results (ie an empty array).\n\nJsonResponse force converts an empty array to an ArrayObject which then gets output as an empty object giving us the wrong results on the client side. Nothing in the JSON spec mandates that the top level element can not be an empty array as such this looks like a bug in the Symfony JsonResponse object.\n\nThe offending code is viewable [here](https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/JsonResponse.php#L80). Fixing it should just be a matter of removing that if statement."}, "6371759": {"github_issue_id": 5316, "state": "closed", "title": "the help of the command does not display global options", "body": "Options available from the Application itself don't appear when displaying the help of a command by adding ``--help``. Because of this, users need to be aware of the component implementation to know that more options may be available and that they need to call ``app/console help`` without specifying a command name to show them.\n\nI suggest adding a section ``Global options`` in the help output to show them too, keeping them isolated from command-specific options (btw, weren't they displayed in the list at some point ?)"}, "5776550": {"github_issue_id": 5019, "state": "closed", "title": "Wrong display in the timeline when 2 listeners have the same short class name", "body": "When 2 listeners have the same short class name, the timeline display them in the same row (as if it was the same listener called twice) instead of using 2 rows.\n\nI saw it with AsseticBundle and NelmioApiDocBundle which have both a RequestListener (you may need to change the threshold to see them in the timeline as they are faster than 1ms)"}, "5397810": {"github_issue_id": 4712, "state": "closed", "title": "onFlush events with 2 or more dbal connections throw ErrorExceptions", "body": "\nIn configuration's with 2 connections, onFlush events written to `(appDevDebugProject|appProd)Container.php` contain calls to addEventListener. The method signature for the 2nd connection is incorrect. Changing the order the connection's are specified produces the incorrect signature on whatever happens to be the 2nd connection.\n\nCompare the signatures for MysqlConnectionService and PlatConnectionService:\n\n\n`appDevDebugProjectContainer.php`\n```php\nprotected function getDoctrine_Dbal_MysqlConnectionService()\n{\n    $c->addEventListener(array(0 => 'onFlush'), $this->get('nrc_notice.notice.notice_listener'));\n}\n\n\nprotected function getDoctrine_Dbal_PlatConnectionService()\n{\n    $c->addEventListener(array(0 => array(0 => 'onFlush')), $this->get('nrc_notice.notice.notice_listener'));\n}\n```\n\nError Message\n```text\nErrorException: Warning: Illegal offset type in /Applications/MAMP/htdocs/checknet.local/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/ContainerAwareEventManager.php line 115\n\nin /Applications/MAMP/htdocs/checknet.local/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/ContainerAwareEventManager.php line 115\nat ErrorHandler->handle('2', 'Illegal offset type', '/Applications/MAMP/htdocs/checknet.local/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/ContainerAwareEventManager.php', '115', array('events' => array(array('onFlush')), 'listener' => object(NoticeListener), 'hash' => '000000000bfa891500000000295a660c', 'event' => array('onFlush'))) in /Applications/MAMP/htdocs/checknet.local/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/ContainerAwareEventManager.php line 115\nat ContainerAwareEventManager->addEventListener(array(array('onFlush')), object(NoticeListener)) in /Applications/MAMP/htdocs/checknet.local/app/cache/dev/appDevDebugProjectContainer.php line 272\nat appDevDebugProjectContainer->getDoctrine_Dbal_PlatConnectionService() in /Applications/MAMP/htdocs/checknet.local/app/bootstrap.php.cache line 194\nat Container->get('doctrine.dbal.plat_connection') in /Applications/MAMP/htdocs/checknet.local/app/cache/dev/appDevDebugProjectContainer.php line 370\nat appDevDebugProjectContainer->getDoctrine_Orm_PlatEntityManagerService() in /Applications/MAMP/htdocs/checknet.local/app/bootstrap.php.cache line 194\nat Container->get('doctrine.orm.plat_entity_manager') in /Applications/MAMP/htdocs/checknet.local/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/ManagerRegistry.php line 35\n```\n\nMy `config.yml`\n```yml\ndoctrine:\n    dbal:\n        default_connection: mysql\n        connections:\n            mysql:\n                 driver: etc...\n            plat:\n                 driver_class:   etc...\n```\n\nMy `services.yml`\n```yml\nservices:\n  nrc_notice.notice.notice_listener:\n     class: Some\\Listener\\Class\n     arguments:\n       container: '@service_container'\n     tags:\n        - { name: kernel.event_listener, event: nrc_notice.notice.change.approved, method: onNotify }\n```"}, "5330186": {"github_issue_id": 4681, "state": "closed", "title": "HTTP/1.0 and caching", "body": "Symfony sends ```cache-control: no-cache``` header by default. This make HTTP/1.1-compatible client and (correctly configured) reverse proxy not to cache the response. \nBut if a client supports only HTTP/1.0 protocol, the ```cache-control``` header will be ignored. To prevent caching page in HTTP/1.0 protocol, Symfony should send also Expires or Pragma headers by default."}, "4892872": {"github_issue_id": 4494, "state": "closed", "title": "[Form] prependView/appendModelTransformer() is needed in some cases", "body": "see #4473"}, "4546032": {"github_issue_id": 4265, "state": "closed", "title": "suggestion: webprofiler should not hide bottom page content", "body": "atm webprofiler has z-index positive to be over content. this is good but if I have some information in last line of output it is hidden under webprofiler. this could probably be fixed with setting for body margin bottom on height of webprofiler bar."}, "4279499": {"github_issue_id": 4108, "state": "closed", "title": "[Form] nonexistent option `index_generation`", "body": "https://github.com/symfony/symfony/blob/76ef8da030b7bee4751790fd0666cacd3ca3278b/UPGRADE-2.1.md mentions the `index_generation` option for choice fields. But this option doesn't seem to exist (anymore)."}, "4236377": {"github_issue_id": 4077, "state": "closed", "title": "[Form] add guess pattern", "body": "Bug fix: no\r\nFeature addition: yes\r\nBackwards compatibility break: no\r\nSymfony2 tests pass: yes\r\nFixes the following tickets: https://github.com/symfony/symfony/issues/3766\r\nTodo: -\r\n\r\nDue to some trouble when rebase my previous PR i open a new one with Master merged\r\nRefs PR: https://github.com/symfony/symfony/pull/3927"}, "4213658": {"github_issue_id": 4045, "state": "closed", "title": "[Guesser] Add some comments in the code", "body": "That is basically adding the comments that have been made [in the PR](https://github.com/symfony/symfony/pull/3927#r713663) into the code.\r\n\r\nThe following guessers must be commented:\r\n\r\n- validator,\r\n- ORM,\r\n- ODM,\r\n- Propel"}, "4206083": {"github_issue_id": 4023, "state": "closed", "title": "[Finder] Fix regexp detection in FileContentFilterIterator", "body": "The iterator accepts both string and regexps, then there is a [test](https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Finder/Iterator/FilecontentFilterIterator.php#L73) to detect regexps.\r\n\r\nThe test is flawed:\r\n\r\n- http://fr2.php.net/manual/en/regexp.reference.delimiters.php: \"A delimiter can be any non-alphanumeric, non-backslash, non-whitespace character\", delimiters could also be \"{\" and \"}\"\r\n- http://fr2.php.net/manual/en/reference.pcre.pattern.modifiers.php: some modifiers are missing and there could be multiple delimiters.\r\n\r\nThe test need to be enhanced (and tested)"}, "4205402": {"github_issue_id": 4021, "state": "closed", "title": "Yaml parsing problem", "body": "Extracted from https://github.com/fabpot/yaml/issues/10:\r\n\r\nthe method \"parseQuotedScalar\" is used for two purposes, parsing a delimited string, and a plain string, but when its being given a plain string, it still treats it as delimited, and thus only returns the first string it matches.\r\n\r\nIf you use something like this, it doesn't really work:\r\n\r\ntest: 'don't do somthin' like that'\r\n\r\nyou'd get 'test' to simply equal 'don'.\r\n\r\ni'm using this package to do a bit of yaml validation, so i added this snippit to the method\r\n\r\n    if ((!$delimiters) && (strlen($match[0]) < strlen($scalar))) {\r\n      throw new InvalidArgumentException(sprintf(\"Malformed YAML (check your use of apostrophes and quotes): \\n %s.\", substr($scalar, $i)));\r\n    }\r\n\r\nI'm sure this isn't the ideal fix, but I didn't want to battle with modifying the validation regex.\r\n"}, "4187300": {"github_issue_id": 3995, "state": "closed", "title": "[Form] property path for violations is incorrect", "body": "I have the following situation:\r\n\r\nThere is a form which shows a list of entities of some kind, kind of similar to a collection form. However, the entities need to be shown in some kind of hierarchy, so even though the app Data is a plain array, the clientData and form it self are built in the following way:\r\n\r\n```\r\nform:\r\n  Mon:\r\n    0: entity\r\n    1: entity\r\n  Tue:\r\n    0: entity\r\n```\r\netc...\r\n\r\nThe transformation between the two is done using a DataTransformer on the topmost form: https://gist.github.com/2419554\r\n\r\nThe form works fine except for validation, for some reason all errors bubble up all the way to the top form, even if they should display on the bottom forms (form.Mon.0, form.Mon.1, etc). While trying to find out what was wrong, I came to the conclusion that the property path of the violations was incorrect, or at least not conform to the way the form was build up:\r\n\r\ndata[0].field\r\ndata[0].field2\r\ndata[1].field\r\n\r\nrather than\r\n\r\ndata[Mon][0].field\r\ndata[Mon][0].field2\r\ndata[Mon][1].field\r\n\r\nThis causes them to bubble all the way up, as they cannot be mapped to the form."}, "4169155": {"github_issue_id": 3971, "state": "closed", "title": "UPGRADE-2.1.md is missing the switch from Symfony's DoctrineBundle to Doctrine's", "body": "One of the steps involved in upgrading Symfony from 2.0 to 2.1 is that the namespace of the DoctrineBundle needs to be changed in the AppKernel.php\r\n\r\n```\r\nnew Symfony\\Bundle\\DoctrineBundle\\DoctrineBundle(),\r\n```\r\n\r\nShould become\r\n\r\n```\r\nnew Doctrine\\Bundle\\DoctrineBundle\\DoctrineBundle(),\r\n```\r\n\r\nThis information seems to be missing in the upgrade guide"}, "4117969": {"github_issue_id": 3945, "state": "closed", "title": "[Form] [DoctrineBridge] Better field type guessing for array doctrine type and array validator type", "body": "Bug fix: no\r\nFeature addition: yes\r\nBackwards compatibility break: no\r\nSymfony2 tests pass: yes\r\nFixes the following tickets: #1692\r\nTodo: -"}, "4104878": {"github_issue_id": 3927, "state": "closed", "title": "[Form] add guess pattern", "body": "Bug fix: no\r\nFeature addition: yes\r\nBackwards compatibility break: no\r\nSymfony2 tests pass: yes\r\nFixes the following tickets: https://github.com/symfony/symfony/issues/3766\r\nTodo: -"}, "4058998": {"github_issue_id": 3867, "state": "closed", "title": "[Form] form named \"search\" with a field named \"search\" => can't set default data", "body": "A form class named \"search\" with a single field named \"search\" sent over GET leads to the following url:\r\n```/?search=mysearchstring```\r\nIf the form is rendered using ```{{ form_widget(form) }}```\r\n\r\nI kinda like this behavior as it gives good looking url but on the other hand, you can't set default data properly.\r\n\r\n```$form->bindRequest($request);``` throws ```Expected argument of type \"array\", \"string\" given```.\r\n\r\n```php\r\n$defaultData = array('search' => $request->query->get('search', \"\"));\r\n$form = $this->createForm(new SearchFormType(), $defaultData);\r\n```\r\nfills the search field with the string ```Array```.\r\n\r\nWith a form named \"test\" and a single field named \"test\" you get the proper: ```/?test[test]=mysearchstring```.\r\n\r\nWhy does \"search\" provoke a unique behavior?\r\nHow can I have a simple url (?search=mysearchstring) while not breaking default data setting?\r\n\r\nFor reference here is the class I use:\r\n\r\n```php\r\n<?php\r\n\r\nnamespace Acme\\SiteBundle\\Form\\Type;\r\n\r\nuse Symfony\\Component\\Form\\AbstractType;\r\nuse Symfony\\Component\\Form\\FormBuilder;\r\n\r\nclass SearchFormType extends AbstractType\r\n{\r\n    public function buildForm(FormBuilder $builder, array $options)\r\n    {\r\n        $builder\r\n            ->add('search')\r\n        ;\r\n    }\r\n\r\n    public function getDefaultOptions(array $options)\r\n    {\r\n        return array(\r\n            'csrf_protection' => false,\r\n        );\r\n    }\r\n\r\n    public function getName()\r\n    {\r\n        return 'search';\r\n    }\r\n}\r\n```\r\n\r\nSymfony 2.0.11"}, "3948095": {"github_issue_id": 3766, "state": "closed", "title": "[Form] Constraint Assert/Regex does not use HTML5 pattern attribute", "body": "```php\r\n#Customer.php\r\n\r\nclass Customer {\r\n# (...)\r\n\r\n   /**\r\n    * @var string $phone\r\n    * @Assert\\NotBlank()\r\n    * @Assert\\Regex(\"/^\\(\\d{2}\\) \\d{4}-\\d{4}$/\")\r\n    * @ORM\\Column(name=\"phone\", type=\"string\", length=14)\r\n    */\r\n   private $phone;\r\n\r\n# (...)\r\n}\r\n```\r\n```php\r\n#CustomerType.php\r\n\r\nclass CustomerType extends AbstractType\r\n{\r\n# (...)\r\n   public function buildForm(FormBuilder $builder, array $options)\r\n   {\r\n       $builder\r\n           ->add('phone', null, array('label' => 'Telefone'))\r\n       ;\r\n   }\r\n# (...)\r\n}\r\n```\r\n\r\nHTML Result:\r\n\r\n```html\r\n<input type=\"text\" id=\"paggy_admin_customer_phone\" name=\"paggy_admin_customer[phone]\" required=\"required\" maxlength=\"14\" class=\"input-text\">\r\n```\r\n\r\n*Workaround:* If I add the \"pattern\" property, duplicating the code of entity, it works as expected:\r\n\r\n```php\r\n#CustomerType.php\r\n\r\nclass CustomerType extends AbstractType\r\n{\r\n# (...)\r\n   public function buildForm(FormBuilder $builder, array $options)\r\n   {\r\n       $builder\r\n           ->->add('phone', 'text', array('label' => 'Telefone', 'pattern' => '^\\\r\n(\\d{2}\\) \\d{4}-\\d{4}$'))\r\n       ;\r\n   }\r\n# (...)\r\n}\r\n```\r\n\r\nHTML Result:\r\n\r\n```html\r\n<input type=\"text\" id=\"paggy_admin_customer_phone\" name=\"paggy_admin_customer[phone]\" required=\"required\" maxlength=\"14\" pattern=\"^\\(\\d{2}\\) \\d{4}-\\d{4}$\" class=\"input-text\">\r\n```\r\n\r\nThanks!\r\n"}, "3416929": {"github_issue_id": 3468, "state": "closed", "title": "[Form] Choice List in a Form", "body": "Hi.\r\n\r\nHere is my form [ProductType](https://github.com/umpirsky/symfony-standard/blob/f59d47767a07bf1e06d55a2ebff13a13ae6aa199/src/Acme/DemoBundle/Form/ProductType.php) and [this](https://github.com/umpirsky/symfony-standard/blob/f59d47767a07bf1e06d55a2ebff13a13ae6aa199/src/Acme/DemoBundle/Controller/ProductController.php#L51) is how I use it in action.\r\n\r\nI expect it to render available categories in choice list, but it renders text field for category, I read the doc, and [this](http://epixa.com/2011/08/create-and-validate-a-choice-list-in-a-symfony-2-form.html) article, and tried the same, but all I get is a text field for category.\r\n\r\nIt renders available categories in choice list only if I remove [getDefaultOptions()](https://github.com/umpirsky/symfony-standard/blob/f59d47767a07bf1e06d55a2ebff13a13ae6aa199/src/Acme/DemoBundle/Form/ProductType.php#L23) from [ProductType](https://github.com/umpirsky/symfony-standard/blob/f59d47767a07bf1e06d55a2ebff13a13ae6aa199/src/Acme/DemoBundle/Form/ProductType.php) and explicitly pass [Product](https://github.com/umpirsky/symfony-standard/blob/f59d47767a07bf1e06d55a2ebff13a13ae6aa199/src/Acme/DemoBundle/Entity/Product.php) as a second parameter to [$this->createForm()](https://github.com/umpirsky/symfony-standard/blob/f59d47767a07bf1e06d55a2ebff13a13ae6aa199/src/Acme/DemoBundle/Controller/ProductController.php#L53), but I guess that is not the right way to do it."}, "3100645": {"github_issue_id": 3272, "state": "closed", "title": "[Form][DelegatingValidator] Fix path mapping for embedded forms", "body": "Bug fix: yes\r\nFeature addition: no\r\nBackwards compatibility break: no\r\nSymfony2 tests pass: DelegatingValidatorTest\r\nFixes the following tickets: [#1917](https://github.com/symfony/symfony/issues/1917), [#3018](https://github.com/symfony/symfony/issues/3018)\r\n\r\nTried to fix the bug where multi-input types (i.e. date, radio) of embedded forms get wrong path mapping\r\n\r\n    children[subForm][choiceType].data\r\nshould be\r\n\r\n    children[subForm].data.choiceType"}, "3065657": {"github_issue_id": 3251, "state": "closed", "title": "[Dependency Injection] Service declaration tags should allow array types", "body": "Hello,\r\n\r\nUsing the following yml service declation:\r\n```(...)tags:\r\n        - { name: acme.myservice, sections:{main:true, side:true} }```\r\n\r\nproduces a correct array when parsed in a ComplierPass, but then throws:\r\n\r\n```ErrorException: Warning: DOMElement::setAttribute() expects parameter 2 to be string, \r\narray given in (...)vendor/symfony/src/Symfony/Component/DependencyInjection/Dumper/XmlDumper.php line 141```"}, "2949851": {"github_issue_id": 3179, "state": "closed", "title": "[Validator] StaticMethodLoader invokes wrong method", "body": "    interface FooInterface {\r\n\r\n        public static function loadValidatorMetadata($metadata);\r\n    }\r\n\r\n    class Bar implements FooInterface {\r\n\r\n        private $baz = 'bogus';\r\n\r\n        public static function loadValidatorMetadata($metadata) {\r\n            $metadata->addPropertyConstraint('baz', new Assert\\MinLength(10));\r\n        }\r\n\r\n    }\r\n\r\n    $validator = new Validator(\r\n                    new ClassMetadataFactory(new StaticMethodLoader()),\r\n                    new ConstraintValidatorFactory()\r\n    );\r\n    $violations = $validator->validate(new Bar);\r\n    if ($violations->count()) {\r\n        throw new \\Exception($violations);\r\n    }\r\n\r\nI have classes that needs to be validated with ```Symfony\\Component\\Validator``` and this classes uses ```StaticMethodLoader``` strategy for validation. I declared ```loadValidatorMetadata``` method in interface but ```StaticMethodLoader``` invokes wrong method and following error occures.\r\n\r\n    Fatal error: Uncaught exception 'ReflectionException' with message 'Trying to invoke abstract method FooInterface::loadValidatorMetadata()' in Symfony/Component/Validator/Mapping/Loader/StaticMethodLoader.php on line 44\r\n\r\n    ReflectionException: Trying to invoke abstract method Heatbeat\\FooInterface::loadValidatorMetadata() in /Symfony/Component/Validator/Mapping/Loader/StaticMethodLoader.php on line 44\r\n\r\n\r\nLooks like there is a problem with Reflection. "}, "2915647": {"github_issue_id": 3163, "state": "closed", "title": "[Validator] UniqueEntityValidator can't validate values of proxy objects", "body": "If you have an association and have that as one of your fields for using the Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntityValidator the unique validation wont work if your object is a proxy and hasn't had the identifier field hydrated yet.\r\n\r\nI didn't know how to put this into a unit test but did work out a very crude fix in the validator that i'm sure isn't suitable to be a patch but I think helps illustrate the problem better.\r\n\r\n```php\r\n            if (isset($class->associationMappings[$fieldName])) {\r\n\r\n                // very crude fix to the problem\r\n                if ($criteria[$fieldName] instanceof \\Doctrine\\ORM\\Proxy\\Proxy) {\r\n                    $criteria[$fieldName]->__load();\r\n                }\r\n\r\n                $relatedClass = $em->getClassMetadata($class->associationMappings[$fieldName]['targetEntity']);\r\n                $relatedId = $relatedClass->getIdentifierValues($criteria[$fieldName]);\r\n\r\n                if (count($relatedId) > 1) {\r\n                    throw new ConstraintDefinitionException(sprintf('Associated entities are not allowed to have more than one identifier field to be part of a unique constraint in %s#%s.', $class->name, $fieldName));\r\n                }\r\n                $criteria[$fieldName] = array_pop($relatedId);\r\n            }\r\n\r\n```\r\n\r\nI experienced this on Symfony 2.0.9, running on OS X Lion"}, "2777072": {"github_issue_id": 3075, "state": "closed", "title": "[Form][Guesser] The prototype is an empty string for a collection which is not one-to-many", "body": "The prototype is an empty string for a collection which is not backed by one-to-many relationship\r\n\r\n```php\r\n{% debug form_widget(form.extraAttributes.get('prototype')) %}\r\n```\r\nreturns `string(0) \"\"`\r\n\r\n\r\nbuildForm method\r\n\r\n```php\r\n$builder\r\n            ->add('images', 'collection', array('type' => new ProductimageType(), 'allow_add' => true, 'allow_delete' => true, 'label'=> 'Imagini', 'prototype' => true ))\r\n            ->add('extraAttributes', 'collection', array('type' => 'hidden', 'allow_add' => true, 'allow_delete' => true, 'label'=> 'Attribute', 'prototype' => true))\r\n        ;\r\n```\r\n`images` ,which is one-to-many relationship in Doctrine2, displays the prototype properly, whereas `extraAttributes` prototype is empty\r\n\r\n\r\nField definitions:\r\n\r\n```php\r\n /**\r\n     * @ORM\\OneToMany(targetEntity=\"Productimage\", mappedBy=\"product\", orphanRemoval=true, cascade={\"persist\"})\r\n     */\r\n    private $images;\r\n\r\n  /**\r\n     * @var array\r\n     * @ORM\\Column(name=\"Other\", type=\"array\", nullable=true)\r\n     */\r\n    private $extraAttributes;\r\n```\r\n\r\nI add \r\n\r\n```html\r\n<input class=\"form-hidden\" type=\"hidden\" id=\"product_extraAttributes_0_type\" name=\"product[extraAttributes][0][type]\">\r\n```\r\nmanually via javascript, and the engine properly adds fields as intended, so basically everything works except the prototype generation.\r\n"}, "2638748": {"github_issue_id": 2945, "state": "closed", "title": "[Form][DelegatingValidator] Duplicated error when using a DataTransformer and a NotBlank constraint", "body": "If a DataTransformer fails, the value is set to ``null`` in the underlying object. This is logical as we don't have any value to set in it reliably (think for instance of the case where your DataTransformer transforms an id into an object and the setter uses a typehint). But this leads to an issue if the validation has a NotBlank or NotNull constraint on the field as you will then see an error ``This value should not be blank`` on the field (which was not blank in the client data).\r\n\r\nSee #2413 for a place where this error occurs often: the repeated type."}, "2356260": {"github_issue_id": 2729, "state": "closed", "title": "[Form][DelegatingValidator] Form error bubbles to the top with @Collection constraint and arrays", "body": "With the following code, errors related to Post->date['year'] are attached to the form instead of the 'year' element:\r\n\r\n``` php\r\n<?php\r\nclass Post\r\n{\r\n    /** @Collection(fields={\"year\"=@NotBlank}) */\r\n    public $date = array('year' => null);\r\n}\r\n\r\n$dateForm = $this->get('form.factory')\r\n    ->createNamedBuilder('form', 'date')\r\n    ->add('year', 'text');\r\n\r\n$form = $this->get('form.factory')\r\n    ->createBuilder('form', new Post)\r\n    ->add($dateForm)\r\n    ->getForm()\r\n    ;\r\n\r\n$form->bind(array());\r\n\r\necho $form->getErrorsAsString();\r\n\r\n```\r\n\r\ngetErrorsAsString output:\r\n\r\n```\r\nERROR: This value should not be blank\r\ndate:\r\n    year:\r\n        No errors\r\n```\r\n\r\nExpected output:\r\n\r\n\r\n```\r\ndate:\r\n    year:\r\n        ERROR: This value should not be blank\r\n```"}, "2279872": {"github_issue_id": 2674, "state": "closed", "title": "[Validator] what about to have MinCount and MaxCount validators", "body": "Let's say we have a bloger which can assign from one to five tags to his blog. While submiting the server should count  tags and check whether the collection in the allowed range. It can be done with `Choice` validator and `min` and `max` options. But in this case we have such problems:\r\n\r\n* It should fetch all tags from db to check that choices are valid, \r\n* Very hard to define callback in case of using `$repository->findAll()`\r\n\r\nFrom another side we have `Min\\Max` and `MinLength\\MaxLength` validators but they very restrictive (the first takes only integers and second one only strings)\r\n\r\nSo I am thinking of moving count validation rules from Choice to a new validators called `MinCount` and `MaxCount`\r\n\r\nBTW I can do a PR if you find it useful."}, "2170024": {"github_issue_id": 2577, "state": "closed", "title": "[HttpFoundation] UploadedFile needs Locale parameter to pass", "body": "Because function basename() is locale aware, the constructor need to pass a locale parameter and set it in constructor. Without setting a locale non-latin first characters cut off from beginning until a latin letter or a non-letter character found in the name.\r\n\r\nfrom HttpFoundation\\File\\UploadedFile.php\r\n\r\n      \r\n        $this->originalName = basename($originalName);\r\n        $this->mimeType = $mimeType ?: 'application/octet-stream';\r\n        $this->size = $size;\r\n        $this->error = $error ?: UPLOAD_ERR_OK;\r\n        $this->test = (Boolean) $test;\r\n\r\n        parent::__construct($path, UPLOAD_ERR_OK === $this->error);\r\n    }\r\n\r\nShould be like this (an example):\r\n        setlocale(LC_ALL, 'ru_RU.UTF8');\r\n        $this->originalName = basename($originalName);\r\n        $this->mimeType = $mimeType ?: 'application/octet-stream';\r\n        $this->size = $size;\r\n        $this->error = $error ?: UPLOAD_ERR_OK;\r\n        $this->test = (Boolean) $test;\r\n\r\n        parent::__construct($path, UPLOAD_ERR_OK === $this->error);\r\n    }"}, "2056030": {"github_issue_id": 2480, "state": "closed", "title": "[Validator] Allow Callback validator to be put on a field", "body": "Hey there,\r\n\r\nIs there a reason I'm missing that the callback validator *must* be applied to a class and not to a property?\r\nI need to blacklist values from a property and I'm forced to apply the validator to the class."}, "1415333": {"github_issue_id": 1971, "state": "closed", "title": "[Form][DelegatingValidator] RepeatedType error keeps on bubbling to root form", "body": "When RepeatedType is nested inside another form, error messages such as \"This value should not be blank\" bubble up to the root form, instead of appearing above the field in the nested form.\r\n\r\nTo illustrate this issue, I have put together the following example:\r\n\r\n* Two types where one is nested in the other (child inside parent).\r\n* Both types have the RepeatedType field.\r\n* Both RepeatedType fields are NotBlank.\r\n\r\nAs you can see, the error message for the RepeatedType in the main type, appears right above the fields, but this doesn't happen for the nested type.\r\n\r\n![Screenshot](https://lh4.googleusercontent.com/-J-fC_SSILqM/Tkh8HkaFA9I/AAAAAAAAABg/rhRPP52nizQ/screenshot.png)\r\n\r\nHere are the types and models that can be used to demonstrate the issue:\r\n\r\n    class RegistrationParent\r\n    {\r\n        public $registrationChild;\r\n\r\n        /**\r\n         * @Assert\\NotBlank()\r\n         */\r\n        public $plainPassword;\r\n    }\r\n\r\n\r\n    class RegistrationChild\r\n    {\r\n        /**\r\n         * @Assert\\NotBlank()\r\n         */\r\n        public $plainPassword;\r\n    }\r\n\r\n\r\n    class RegistrationParentFormType extends AbstractType\r\n    {\r\n       public function buildForm(FormBuilder $builder, array $options)\r\n       {\r\n       $builder\r\n          ->add('registrationChild', new RegistrationChildFormType())\r\n          ->add('plainPassword', 'repeated', array(\r\n             'type' => 'password',\r\n          ))\r\n       ;\r\n     }\r\n\r\n\r\n    class RegistrationChildFormType extends AbstractType\r\n    {\r\n       public function buildForm(FormBuilder $builder, array $options)\r\n       {\r\n          $builder\r\n             ->add('plainPassword', 'repeated', array(\r\n                'type' => 'password',\r\n             ))\r\n          ;\r\n     }\r\n"}, "1346672": {"github_issue_id": 1907, "state": "closed", "title": "An exception is thrown when the firewall matches a inexistent url and try to redirect to a route using the locale", "body": "When using a login route with the pattern ``/{_locale}/login``, the redirection works well when accessing an existing url secured by the firewall. But when accessing a inexistent url that matches the access control rule (easy when the rule secures ``^/admin``), the redirection to the login url fails with this exception:\r\n\r\n```\r\nThe \"fos_user_security_login\" route has some missing mandatory parameters (\"_locale\").\r\n500 Internal Server Error - MissingMandatoryParametersException \r\n```"}, "1322186": {"github_issue_id": 1879, "state": "closed", "title": "$_format is lost on failure_forward", "body": "I've been debugging this for the past few days but to no avail.\r\n\r\nThis is the excerpt from my security file:\r\n\r\n```\r\nsecurity:\r\n    firewalls:\r\n        default_json:\r\n            poshtar_login:\r\n                login_path: /login.json\r\n                check_path: /login.json\r\n                failure_forward: true\r\n            context: store\r\n            anonymous:  ~\r\n            logout:     { path: /logout }\r\n            pattern:    /.*\r\n            provider:   poshtar\r\n```\r\n\r\nWhat I was able to figure out using a debugger is that the content type for subresponse? is set correctly to json, but sometime later, when responses get merged? and the request is asked again for a format the request returns html as the attributes bag is empty (controller resolver set the proper format in subrequest) so data sent to the browser has a wrong content type."}, "1288490": {"github_issue_id": 1813, "state": "closed", "title": "http basic authentication broken with PHP as cgi/fastCGI under Apache", "body": "The keys PHP_AUTH_USER and PHP_AUTH_PW are not present in the superglobal $_SERVER, so http basic authentication needs to be handled a little differently.\r\n\r\nThis also affects functional tests which require http basic auth to authenticate.\r\n\r\nBasically the workaround is two parts:\r\n\r\n1. A rewrite rule to pack the username and password into an environment variable:\r\n\r\n    <IfModule mod_rewrite.c>\r\n        RewriteEngine on\r\n        RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization},L]\r\n    </IfModule>\r\n\r\n2. Extract the info from the environment variable:\r\n\r\n    list($_SERVER['PHP_AUTH_USER'], $_SERVER['PHP_AUTH_PW']) = explode(':' , base64_decode(substr($_SERVER['HTTP_AUTHORIZATION'], 6)));\r\n\r\n\r\nSee below for more details.\r\n\r\nhttp://orangejuiceliberationfront.com/http-auth-with-php-in-cgi-mode-e-g-on-dreamhost/\r\nhttp://www.besthostratings.com/articles/http-auth-php-cgi.html\r\n\r\n\r\n"}, "1288124": {"github_issue_id": 1810, "state": "closed", "title": "[Form][DelegatingValidator] Conflict between a field and collection field with the same name", "body": "Use case : http://gist.github.com/1106538\r\n\r\nWhen the Entry \"title\" input value is blank, the form error is rendered next to the title input field of the \"specs\" field instead of the title one.\r\n\r\nIn the EntrySpecType, If i change the name of the title field to \"whateverisnotitle\", everything goes fine, and i assure you i've just changed that ! ;-)\r\n\r\nThat's a bit inconvenient.\r\n\r\n\r\n"}, "1219548": {"github_issue_id": 1692, "state": "closed", "title": "[Form][Guesser] Symfony should guess a better field type for Doctrine 'array' type", "body": "Currently defaults to a textbox which just displays 'Array'."}, "19628175": {"github_issue_id": 9061, "state": "open", "title": "[DomCrawler] \\Symfony\\Component\\DomCrawler\\Crawler::addContent guess charset from html?", "body": "I just download this page.\r\nhttp://search.jd.com/Search?keyword=%E6%96%87%E5%AD%A6&enc=utf-8&area=22&book=y\r\nit do not send a header of charset in http response header and I put it content to Crawler::addContent,Then Crawler use wrong charset ISO-8859-1.\r\nIt works fine if I use follow code:\r\n```\r\n        $crawler = new Crawler();\r\n        $crawler->addHtmlContent($content,'GBK');\r\n```\r\nIs there some way to guess charset from html meta?"}}